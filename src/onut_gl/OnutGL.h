/*******************************************************************************
 * This file was generated by GLBrebis on 2017-07-15 15:11:04-0400
 * https://github.com/mchiasson/GLBrebis
 *******************************************************************************
 * GLBrebis License (MIT)
 *******************************************************************************
 * Copyright (c) 2015-2017 Mathieu-Andr√© Chiasson
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in 
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 ******************************************************************************/

/*******************************************************************************
 * The generated content of this file is the result of parsing the following
 * headers from Khronos Group Inc. 
 * https://www.khronos.org/registry/gles/api/GLES3/gl32.h
 * https://www.khronos.org/registry/gles/api/GLES2/gl2ext.h
 * https://www.opengl.org/registry/api/GL/glcorearb.h
 * https://www.opengl.org/registry/api/GL/glext.h
 *******************************************************************************
 * Khronos License
 *******************************************************************************
 * Copyright (c) 2013-2017 The Khronos Group Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and/or associated documentation files (the
 * "Materials"), to deal in the Materials without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Materials, and to
 * permit persons to whom the Materials are furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Materials.
 *
 * THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
 ******************************************************************************/
#ifndef _ONUT_GL_H_
#define _ONUT_GL_H_ 1

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#if !defined(ONUT_GL_WRANGLER_ENABLED)
    #if __native_client__ || __EMSCRIPTEN__
        #include <GLES2/gl2.h>
        #define ONUT_GL_WRANGLER_ENABLED 0
    #else
        #define ONUT_GL_WRANGLER_ENABLED 1
    #endif
#endif

#if !defined(ONUT_FORCE_INLINE)
    #if defined(_MSC_VER)
        #define ONUT_FORCE_INLINE __forceinline
    #elif ( (defined(__GNUC__) && (__GNUC__ >= 4) ) || defined(__clang__) )
        #define ONUT_FORCE_INLINE __attribute__((always_inline)) static __inline__
    #else
        #define ONUT_FORCE_INLINE static inline
    #endif
#endif

#if ONUT_GL_WRANGLER_ENABLED
    #if defined(__glu_h__)
        #error "GL/glu.h cannot be included before OnutGL.h"
    #endif

    #if defined(__gl_h_)
        #error "GL/gl.h cannot be included before OnutGL.h"
    #endif

    #if defined(__gl2_h_)
        #error "GL/gl2.h cannot be included before OnutGL.h"
    #endif

    #if defined(__glcorearb_h_)
        #error "GL/glcorearb.h cannot be included before OnutGL.h"
    #endif

    #if defined(__gl20_h_)
        #error "GLES2/gl2.h cannot be included before OnutGL.h"
    #endif

    #if defined(__gl_es20_h_)
        #error "OpenGLES/ES2/gl.h cannot be included before OnutGL.h"
    #endif

    #if defined(__gl30_h_)
        #error "GLES3/gl3.h cannot be included before OnutGL.h"
    #endif

    #if defined(__gl_es30_h_)
        #error "OpenGLES/ES3/gl.h cannot be included before OnutGL.h"
    #endif

    #if defined(__gl31_h_)
        #error "GLES3/gl31.h cannot be included before OnutGL.h"
    #endif

    #if defined(__gl32_h_)
        #error "GLES3/gl32.h cannot be included before OnutGL.h"
    #endif

    #if defined(__glext_h_)
        #error "GL/glext.h cannot be included before OnutGL.h"
    #endif

    #if defined(__gl2ext_h_)
        #error "GL/glext.h cannot be included before OnutGL.h"
    #endif

    #if defined(__gl_es20ext_h_)
        #error "OpenGLES/ES2/glext.h cannot be included before OnutGL.h"
    #endif

    #if defined(__gl_es30ext_h_)
        #error "OpenGLES/ES3/glext.h cannot be included before OnutGL.h"
    #endif

    #if defined(__gltypes_h_)
        #error "gltypes.h cannot be included before OnutGL.h"
    #endif

    #define __glu_h__ 1
    #define __gl_h_ 1
    #define __gl2_h_ 1
    #define __glcorearb_h_ 1
    #define __gl20_h_ 1
    #define __gl_es20_h_ 1
    #define __gl30_h_ 1
    #define __gl_es30_h_ 1
    #define __gl31_h_ 1
    #define __gl32_h_ 1
    #define __glext_h_ 1
    #define __gl2ext_h_ 1
    #define __gl_es20ext_h_ 1
    #define __gl_es30ext_h_ 1
    #define __gltypes_h_ 1

    #define GL_1PASS_EXT 0x80A1
    #define GL_1PASS_SGIS 0x80A1
    #define GL_2PASS_0_EXT 0x80A2
    #define GL_2PASS_0_SGIS 0x80A2
    #define GL_2PASS_1_EXT 0x80A3
    #define GL_2PASS_1_SGIS 0x80A3
    #define GL_2X_BIT_ATI 0x00000001
    #define GL_2_BYTES_NV 0x1407
    #define GL_3DC_XY_AMD 0x87FA
    #define GL_3DC_X_AMD 0x87F9
    #define GL_3_BYTES_NV 0x1408
    #define GL_422_AVERAGE_EXT 0x80CE
    #define GL_422_EXT 0x80CC
    #define GL_422_REV_AVERAGE_EXT 0x80CF
    #define GL_422_REV_EXT 0x80CD
    #define GL_4PASS_0_EXT 0x80A4
    #define GL_4PASS_0_SGIS 0x80A4
    #define GL_4PASS_1_EXT 0x80A5
    #define GL_4PASS_1_SGIS 0x80A5
    #define GL_4PASS_2_EXT 0x80A6
    #define GL_4PASS_2_SGIS 0x80A6
    #define GL_4PASS_3_EXT 0x80A7
    #define GL_4PASS_3_SGIS 0x80A7
    #define GL_4X_BIT_ATI 0x00000002
    #define GL_4_BYTES_NV 0x1409
    #define GL_8X_BIT_ATI 0x00000004
    #define GL_ABGR_EXT 0x8000
    #define GL_ACCUM_ADJACENT_PAIRS_NV 0x90AD
    #define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
    #define GL_ACTIVE_ATTRIBUTES 0x8B89
    #define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
    #define GL_ACTIVE_PROGRAM 0x8259
    #define GL_ACTIVE_PROGRAM_EXT 0x8259
    #define GL_ACTIVE_RESOURCES 0x92F5
    #define GL_ACTIVE_STENCIL_FACE_EXT 0x8911
    #define GL_ACTIVE_SUBROUTINES 0x8DE5
    #define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
    #define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
    #define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
    #define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
    #define GL_ACTIVE_TEXTURE 0x84E0
    #define GL_ACTIVE_TEXTURE_ARB 0x84E0
    #define GL_ACTIVE_UNIFORMS 0x8B86
    #define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
    #define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
    #define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
    #define GL_ACTIVE_VARIABLES 0x9305
    #define GL_ACTIVE_VARYINGS_NV 0x8C81
    #define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
    #define GL_ACTIVE_VERTEX_UNITS_ARB 0x86A5
    #define GL_ADD_ATI 0x8963
    #define GL_ADD_SIGNED 0x8574
    #define GL_ADD_SIGNED_ARB 0x8574
    #define GL_ADD_SIGNED_EXT 0x8574
    #define GL_ADJACENT_PAIRS_NV 0x90AE
    #define GL_AFFINE_2D_NV 0x9092
    #define GL_AFFINE_3D_NV 0x9094
    #define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
    #define GL_ALIASED_POINT_SIZE_RANGE 0x846D
    #define GL_ALLOW_DRAW_FRG_HINT_PGI 0x1A210
    #define GL_ALLOW_DRAW_MEM_HINT_PGI 0x1A211
    #define GL_ALLOW_DRAW_OBJ_HINT_PGI 0x1A20E
    #define GL_ALLOW_DRAW_WIN_HINT_PGI 0x1A20F
    #define GL_ALL_BARRIER_BITS 0xFFFFFFFF
    #define GL_ALL_BARRIER_BITS_EXT 0xFFFFFFFF
    #define GL_ALL_COMPLETED_NV 0x84F2
    #define GL_ALL_PIXELS_AMD 0xFFFFFFFF
    #define GL_ALL_SHADER_BITS 0xFFFFFFFF
    #define GL_ALL_SHADER_BITS_EXT 0xFFFFFFFF
    #define GL_ALL_STATIC_DATA_IBM 103060
    #define GL_ALPHA 0x1906
    #define GL_ALPHA12_EXT 0x803D
    #define GL_ALPHA16F_ARB 0x881C
    #define GL_ALPHA16F_EXT 0x881C
    #define GL_ALPHA16I_EXT 0x8D8A
    #define GL_ALPHA16UI_EXT 0x8D78
    #define GL_ALPHA16_EXT 0x803E
    #define GL_ALPHA16_SNORM 0x9018
    #define GL_ALPHA32F_ARB 0x8816
    #define GL_ALPHA32F_EXT 0x8816
    #define GL_ALPHA32I_EXT 0x8D84
    #define GL_ALPHA32UI_EXT 0x8D72
    #define GL_ALPHA4_EXT 0x803B
    #define GL_ALPHA8I_EXT 0x8D90
    #define GL_ALPHA8UI_EXT 0x8D7E
    #define GL_ALPHA8_EXT 0x803C
    #define GL_ALPHA8_OES 0x803C
    #define GL_ALPHA8_SNORM 0x9014
    #define GL_ALPHA_BITS 0x0D55
    #define GL_ALPHA_FLOAT16_APPLE 0x881C
    #define GL_ALPHA_FLOAT16_ATI 0x881C
    #define GL_ALPHA_FLOAT32_APPLE 0x8816
    #define GL_ALPHA_FLOAT32_ATI 0x8816
    #define GL_ALPHA_INTEGER 0x8D97
    #define GL_ALPHA_INTEGER_EXT 0x8D97
    #define GL_ALPHA_MAX_CLAMP_INGR 0x8567
    #define GL_ALPHA_MAX_SGIX 0x8321
    #define GL_ALPHA_MIN_CLAMP_INGR 0x8563
    #define GL_ALPHA_MIN_SGIX 0x8320
    #define GL_ALPHA_REF_COMMAND_NV 0x000F
    #define GL_ALPHA_SNORM 0x9010
    #define GL_ALPHA_TEST_FUNC_QCOM 0x0BC1
    #define GL_ALPHA_TEST_QCOM 0x0BC0
    #define GL_ALPHA_TEST_REF_QCOM 0x0BC2
    #define GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV 0x934D
    #define GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV 0x934F
    #define GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV 0x934E
    #define GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV 0x92BF
    #define GL_ALREADY_SIGNALED 0x911A
    #define GL_ALREADY_SIGNALED_APPLE 0x911A
    #define GL_ALWAYS 0x0207
    #define GL_ALWAYS_FAST_HINT_PGI 0x1A20C
    #define GL_ALWAYS_SOFT_HINT_PGI 0x1A20D
    #define GL_AND 0x1501
    #define GL_AND_INVERTED 0x1504
    #define GL_AND_REVERSE 0x1502
    #define GL_ANY_SAMPLES_PASSED 0x8C2F
    #define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
    #define GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT 0x8D6A
    #define GL_ANY_SAMPLES_PASSED_EXT 0x8C2F
    #define GL_ARC_TO_NV 0xFE
    #define GL_ARRAY_BUFFER 0x8892
    #define GL_ARRAY_BUFFER_ARB 0x8892
    #define GL_ARRAY_BUFFER_BINDING 0x8894
    #define GL_ARRAY_BUFFER_BINDING_ARB 0x8894
    #define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT 0x81A9
    #define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT 0x81A8
    #define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
    #define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
    #define GL_ARRAY_SIZE 0x92FB
    #define GL_ARRAY_STRIDE 0x92FE
    #define GL_ASYNC_DRAW_PIXELS_SGIX 0x835D
    #define GL_ASYNC_HISTOGRAM_SGIX 0x832C
    #define GL_ASYNC_MARKER_SGIX 0x8329
    #define GL_ASYNC_READ_PIXELS_SGIX 0x835E
    #define GL_ASYNC_TEX_IMAGE_SGIX 0x835C
    #define GL_ATC_RGBA_EXPLICIT_ALPHA_AMD 0x8C93
    #define GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD 0x87EE
    #define GL_ATC_RGB_AMD 0x8C92
    #define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
    #define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT 0x00001000
    #define GL_ATOMIC_COUNTER_BUFFER 0x92C0
    #define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
    #define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
    #define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
    #define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
    #define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
    #define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
    #define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
    #define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
    #define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
    #define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
    #define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
    #define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
    #define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
    #define GL_ATTACHED_SHADERS 0x8B85
    #define GL_ATTENUATION_EXT 0x834D
    #define GL_ATTRIBUTE_ADDRESS_COMMAND_NV 0x0009
    #define GL_ATTRIB_ARRAY_POINTER_NV 0x8645
    #define GL_ATTRIB_ARRAY_SIZE_NV 0x8623
    #define GL_ATTRIB_ARRAY_STRIDE_NV 0x8624
    #define GL_ATTRIB_ARRAY_TYPE_NV 0x8625
    #define GL_AUTO_GENERATE_MIPMAP 0x8295
    #define GL_AUX_DEPTH_STENCIL_APPLE 0x8A14
    #define GL_AVERAGE_EXT 0x8335
    #define GL_AVERAGE_HP 0x8160
    #define GL_BACK 0x0405
    #define GL_BACK_LEFT 0x0402
    #define GL_BACK_NORMALS_HINT_PGI 0x1A223
    #define GL_BACK_PRIMARY_COLOR_NV 0x8C77
    #define GL_BACK_RIGHT 0x0403
    #define GL_BACK_SECONDARY_COLOR_NV 0x8C78
    #define GL_BEVEL_NV 0x90A6
    #define GL_BGR 0x80E0
    #define GL_BGRA 0x80E1
    #define GL_BGRA8_EXT 0x93A1
    #define GL_BGRA_EXT 0x80E1
    #define GL_BGRA_IMG 0x80E1
    #define GL_BGRA_INTEGER 0x8D9B
    #define GL_BGRA_INTEGER_EXT 0x8D9B
    #define GL_BGR_EXT 0x80E0
    #define GL_BGR_INTEGER 0x8D9A
    #define GL_BGR_INTEGER_EXT 0x8D9A
    #define GL_BIAS_BIT_ATI 0x00000008
    #define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV 0x8541
    #define GL_BINNING_CONTROL_HINT_QCOM 0x8FB0
    #define GL_BINORMAL_ARRAY_EXT 0x843A
    #define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
    #define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
    #define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
    #define GL_BLEND 0x0BE2
    #define GL_BLEND_ADVANCED_COHERENT_KHR 0x9285
    #define GL_BLEND_ADVANCED_COHERENT_NV 0x9285
    #define GL_BLEND_COLOR 0x8005
    #define GL_BLEND_COLOR_COMMAND_NV 0x000B
    #define GL_BLEND_COLOR_EXT 0x8005
    #define GL_BLEND_DST 0x0BE0
    #define GL_BLEND_DST_ALPHA 0x80CA
    #define GL_BLEND_DST_ALPHA_EXT 0x80CA
    #define GL_BLEND_DST_RGB 0x80C8
    #define GL_BLEND_DST_RGB_EXT 0x80C8
    #define GL_BLEND_EQUATION 0x8009
    #define GL_BLEND_EQUATION_ALPHA 0x883D
    #define GL_BLEND_EQUATION_ALPHA_EXT 0x883D
    #define GL_BLEND_EQUATION_EXT 0x8009
    #define GL_BLEND_EQUATION_RGB 0x8009
    #define GL_BLEND_EQUATION_RGB_EXT 0x8009
    #define GL_BLEND_OVERLAP_NV 0x9281
    #define GL_BLEND_PREMULTIPLIED_SRC_NV 0x9280
    #define GL_BLEND_SRC 0x0BE1
    #define GL_BLEND_SRC_ALPHA 0x80CB
    #define GL_BLEND_SRC_ALPHA_EXT 0x80CB
    #define GL_BLEND_SRC_RGB 0x80C9
    #define GL_BLEND_SRC_RGB_EXT 0x80C9
    #define GL_BLOCK_INDEX 0x92FD
    #define GL_BLUE 0x1905
    #define GL_BLUE_BITS 0x0D54
    #define GL_BLUE_BIT_ATI 0x00000004
    #define GL_BLUE_INTEGER 0x8D96
    #define GL_BLUE_INTEGER_EXT 0x8D96
    #define GL_BLUE_MAX_CLAMP_INGR 0x8566
    #define GL_BLUE_MIN_CLAMP_INGR 0x8562
    #define GL_BLUE_NV 0x1905
    #define GL_BOLD_BIT_NV 0x01
    #define GL_BOOL 0x8B56
    #define GL_BOOL_ARB 0x8B56
    #define GL_BOOL_VEC2 0x8B57
    #define GL_BOOL_VEC2_ARB 0x8B57
    #define GL_BOOL_VEC3 0x8B58
    #define GL_BOOL_VEC3_ARB 0x8B58
    #define GL_BOOL_VEC4 0x8B59
    #define GL_BOOL_VEC4_ARB 0x8B59
    #define GL_BOUNDING_BOX_NV 0x908D
    #define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV 0x909C
    #define GL_BUFFER 0x82E0
    #define GL_BUFFER_ACCESS 0x88BB
    #define GL_BUFFER_ACCESS_ARB 0x88BB
    #define GL_BUFFER_ACCESS_FLAGS 0x911F
    #define GL_BUFFER_ACCESS_OES 0x88BB
    #define GL_BUFFER_BINDING 0x9302
    #define GL_BUFFER_DATA_SIZE 0x9303
    #define GL_BUFFER_FLUSHING_UNMAP_APPLE 0x8A13
    #define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
    #define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
    #define GL_BUFFER_IMMUTABLE_STORAGE_EXT 0x821F
    #define GL_BUFFER_KHR 0x82E0
    #define GL_BUFFER_MAPPED 0x88BC
    #define GL_BUFFER_MAPPED_ARB 0x88BC
    #define GL_BUFFER_MAPPED_OES 0x88BC
    #define GL_BUFFER_MAP_LENGTH 0x9120
    #define GL_BUFFER_MAP_OFFSET 0x9121
    #define GL_BUFFER_MAP_POINTER 0x88BD
    #define GL_BUFFER_MAP_POINTER_ARB 0x88BD
    #define GL_BUFFER_MAP_POINTER_OES 0x88BD
    #define GL_BUFFER_OBJECT_APPLE 0x85B3
    #define GL_BUFFER_OBJECT_EXT 0x9151
    #define GL_BUFFER_SERIALIZED_MODIFY_APPLE 0x8A12
    #define GL_BUFFER_SIZE 0x8764
    #define GL_BUFFER_SIZE_ARB 0x8764
    #define GL_BUFFER_STORAGE_FLAGS 0x8220
    #define GL_BUFFER_STORAGE_FLAGS_EXT 0x8220
    #define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
    #define GL_BUFFER_UPDATE_BARRIER_BIT_EXT 0x00000200
    #define GL_BUFFER_USAGE 0x8765
    #define GL_BUFFER_USAGE_ARB 0x8765
    #define GL_BUFFER_VARIABLE 0x92E5
    #define GL_BUMP_ENVMAP_ATI 0x877B
    #define GL_BUMP_NUM_TEX_UNITS_ATI 0x8777
    #define GL_BUMP_ROT_MATRIX_ATI 0x8775
    #define GL_BUMP_ROT_MATRIX_SIZE_ATI 0x8776
    #define GL_BUMP_TARGET_ATI 0x877C
    #define GL_BUMP_TEX_UNITS_ATI 0x8778
    #define GL_BYTE 0x1400
    #define GL_CALLIGRAPHIC_FRAGMENT_SGIX 0x8183
    #define GL_CAVEAT_SUPPORT 0x82B8
    #define GL_CCW 0x0901
    #define GL_CG_FRAGMENT_SHADER_EXT 0x890F
    #define GL_CG_VERTEX_SHADER_EXT 0x890E
    #define GL_CIRCULAR_CCW_ARC_TO_NV 0xF8
    #define GL_CIRCULAR_CW_ARC_TO_NV 0xFA
    #define GL_CIRCULAR_TANGENT_ARC_TO_NV 0xFC
    #define GL_CLAMP_FRAGMENT_COLOR 0x891B
    #define GL_CLAMP_FRAGMENT_COLOR_ARB 0x891B
    #define GL_CLAMP_READ_COLOR 0x891C
    #define GL_CLAMP_READ_COLOR_ARB 0x891C
    #define GL_CLAMP_TO_BORDER 0x812D
    #define GL_CLAMP_TO_BORDER_ARB 0x812D
    #define GL_CLAMP_TO_BORDER_EXT 0x812D
    #define GL_CLAMP_TO_BORDER_NV 0x812D
    #define GL_CLAMP_TO_BORDER_OES 0x812D
    #define GL_CLAMP_TO_BORDER_SGIS 0x812D
    #define GL_CLAMP_TO_EDGE 0x812F
    #define GL_CLAMP_TO_EDGE_EXT 0x812F
    #define GL_CLAMP_TO_EDGE_SGIS 0x812F
    #define GL_CLAMP_VERTEX_COLOR 0x891A
    #define GL_CLAMP_VERTEX_COLOR_ARB 0x891A
    #define GL_CLEAR 0x1500
    #define GL_CLEAR_BUFFER 0x82B4
    #define GL_CLEAR_TEXTURE 0x9365
    #define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
    #define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
    #define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
    #define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT 0x00004000
    #define GL_CLIENT_STORAGE_BIT 0x0200
    #define GL_CLIENT_STORAGE_BIT_EXT 0x0200
    #define GL_CLIPPING_INPUT_PRIMITIVES_ARB 0x82F6
    #define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB 0x82F7
    #define GL_CLIP_DEPTH_MODE 0x935D
    #define GL_CLIP_DISTANCE0 0x3000
    #define GL_CLIP_DISTANCE0_APPLE 0x3000
    #define GL_CLIP_DISTANCE0_EXT 0x3000
    #define GL_CLIP_DISTANCE1 0x3001
    #define GL_CLIP_DISTANCE1_APPLE 0x3001
    #define GL_CLIP_DISTANCE1_EXT 0x3001
    #define GL_CLIP_DISTANCE2 0x3002
    #define GL_CLIP_DISTANCE2_APPLE 0x3002
    #define GL_CLIP_DISTANCE2_EXT 0x3002
    #define GL_CLIP_DISTANCE3 0x3003
    #define GL_CLIP_DISTANCE3_APPLE 0x3003
    #define GL_CLIP_DISTANCE3_EXT 0x3003
    #define GL_CLIP_DISTANCE4 0x3004
    #define GL_CLIP_DISTANCE4_APPLE 0x3004
    #define GL_CLIP_DISTANCE4_EXT 0x3004
    #define GL_CLIP_DISTANCE5 0x3005
    #define GL_CLIP_DISTANCE5_APPLE 0x3005
    #define GL_CLIP_DISTANCE5_EXT 0x3005
    #define GL_CLIP_DISTANCE6 0x3006
    #define GL_CLIP_DISTANCE6_APPLE 0x3006
    #define GL_CLIP_DISTANCE6_EXT 0x3006
    #define GL_CLIP_DISTANCE7 0x3007
    #define GL_CLIP_DISTANCE7_APPLE 0x3007
    #define GL_CLIP_DISTANCE7_EXT 0x3007
    #define GL_CLIP_DISTANCE_NV 0x8C7A
    #define GL_CLIP_FAR_HINT_PGI 0x1A221
    #define GL_CLIP_NEAR_HINT_PGI 0x1A220
    #define GL_CLIP_ORIGIN 0x935C
    #define GL_CLIP_VOLUME_CLIPPING_HINT_EXT 0x80F0
    #define GL_CLOSE_PATH_NV 0x00
    #define GL_CMYKA_EXT 0x800D
    #define GL_CMYK_EXT 0x800C
    #define GL_CND0_ATI 0x896B
    #define GL_CND_ATI 0x896A
    #define GL_COLOR 0x1800
    #define GL_COLOR3_BIT_PGI 0x00010000
    #define GL_COLOR4_BIT_PGI 0x00020000
    #define GL_COLORBURN 0x929A
    #define GL_COLORBURN_KHR 0x929A
    #define GL_COLORBURN_NV 0x929A
    #define GL_COLORDODGE 0x9299
    #define GL_COLORDODGE_KHR 0x9299
    #define GL_COLORDODGE_NV 0x9299
    #define GL_COLOR_ALPHA_PAIRING_ATI 0x8975
    #define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
    #define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
    #define GL_COLOR_ARRAY_BUFFER_BINDING_ARB 0x8898
    #define GL_COLOR_ARRAY_COUNT_EXT 0x8084
    #define GL_COLOR_ARRAY_EXT 0x8076
    #define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
    #define GL_COLOR_ARRAY_LIST_IBM 103072
    #define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
    #define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL 0x83F7
    #define GL_COLOR_ARRAY_POINTER_EXT 0x8090
    #define GL_COLOR_ARRAY_SIZE_EXT 0x8081
    #define GL_COLOR_ARRAY_STRIDE_EXT 0x8083
    #define GL_COLOR_ARRAY_TYPE_EXT 0x8082
    #define GL_COLOR_ATTACHMENT0 0x8CE0
    #define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
    #define GL_COLOR_ATTACHMENT0_NV 0x8CE0
    #define GL_COLOR_ATTACHMENT1 0x8CE1
    #define GL_COLOR_ATTACHMENT10 0x8CEA
    #define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
    #define GL_COLOR_ATTACHMENT10_NV 0x8CEA
    #define GL_COLOR_ATTACHMENT11 0x8CEB
    #define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
    #define GL_COLOR_ATTACHMENT11_NV 0x8CEB
    #define GL_COLOR_ATTACHMENT12 0x8CEC
    #define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
    #define GL_COLOR_ATTACHMENT12_NV 0x8CEC
    #define GL_COLOR_ATTACHMENT13 0x8CED
    #define GL_COLOR_ATTACHMENT13_EXT 0x8CED
    #define GL_COLOR_ATTACHMENT13_NV 0x8CED
    #define GL_COLOR_ATTACHMENT14 0x8CEE
    #define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
    #define GL_COLOR_ATTACHMENT14_NV 0x8CEE
    #define GL_COLOR_ATTACHMENT15 0x8CEF
    #define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
    #define GL_COLOR_ATTACHMENT15_NV 0x8CEF
    #define GL_COLOR_ATTACHMENT16 0x8CF0
    #define GL_COLOR_ATTACHMENT17 0x8CF1
    #define GL_COLOR_ATTACHMENT18 0x8CF2
    #define GL_COLOR_ATTACHMENT19 0x8CF3
    #define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
    #define GL_COLOR_ATTACHMENT1_NV 0x8CE1
    #define GL_COLOR_ATTACHMENT2 0x8CE2
    #define GL_COLOR_ATTACHMENT20 0x8CF4
    #define GL_COLOR_ATTACHMENT21 0x8CF5
    #define GL_COLOR_ATTACHMENT22 0x8CF6
    #define GL_COLOR_ATTACHMENT23 0x8CF7
    #define GL_COLOR_ATTACHMENT24 0x8CF8
    #define GL_COLOR_ATTACHMENT25 0x8CF9
    #define GL_COLOR_ATTACHMENT26 0x8CFA
    #define GL_COLOR_ATTACHMENT27 0x8CFB
    #define GL_COLOR_ATTACHMENT28 0x8CFC
    #define GL_COLOR_ATTACHMENT29 0x8CFD
    #define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
    #define GL_COLOR_ATTACHMENT2_NV 0x8CE2
    #define GL_COLOR_ATTACHMENT3 0x8CE3
    #define GL_COLOR_ATTACHMENT30 0x8CFE
    #define GL_COLOR_ATTACHMENT31 0x8CFF
    #define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
    #define GL_COLOR_ATTACHMENT3_NV 0x8CE3
    #define GL_COLOR_ATTACHMENT4 0x8CE4
    #define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
    #define GL_COLOR_ATTACHMENT4_NV 0x8CE4
    #define GL_COLOR_ATTACHMENT5 0x8CE5
    #define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
    #define GL_COLOR_ATTACHMENT5_NV 0x8CE5
    #define GL_COLOR_ATTACHMENT6 0x8CE6
    #define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
    #define GL_COLOR_ATTACHMENT6_NV 0x8CE6
    #define GL_COLOR_ATTACHMENT7 0x8CE7
    #define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
    #define GL_COLOR_ATTACHMENT7_NV 0x8CE7
    #define GL_COLOR_ATTACHMENT8 0x8CE8
    #define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
    #define GL_COLOR_ATTACHMENT8_NV 0x8CE8
    #define GL_COLOR_ATTACHMENT9 0x8CE9
    #define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
    #define GL_COLOR_ATTACHMENT9_NV 0x8CE9
    #define GL_COLOR_ATTACHMENT_EXT 0x90F0
    #define GL_COLOR_BUFFER_BIT 0x00004000
    #define GL_COLOR_BUFFER_BIT0_QCOM 0x00000001
    #define GL_COLOR_BUFFER_BIT1_QCOM 0x00000002
    #define GL_COLOR_BUFFER_BIT2_QCOM 0x00000004
    #define GL_COLOR_BUFFER_BIT3_QCOM 0x00000008
    #define GL_COLOR_BUFFER_BIT4_QCOM 0x00000010
    #define GL_COLOR_BUFFER_BIT5_QCOM 0x00000020
    #define GL_COLOR_BUFFER_BIT6_QCOM 0x00000040
    #define GL_COLOR_BUFFER_BIT7_QCOM 0x00000080
    #define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI 0x8835
    #define GL_COLOR_CLEAR_VALUE 0x0C22
    #define GL_COLOR_COMPONENTS 0x8283
    #define GL_COLOR_ENCODING 0x8296
    #define GL_COLOR_EXT 0x1800
    #define GL_COLOR_FLOAT_APPLE 0x8A0F
    #define GL_COLOR_INDEX12_EXT 0x80E6
    #define GL_COLOR_INDEX16_EXT 0x80E7
    #define GL_COLOR_INDEX1_EXT 0x80E2
    #define GL_COLOR_INDEX2_EXT 0x80E3
    #define GL_COLOR_INDEX4_EXT 0x80E4
    #define GL_COLOR_INDEX8_EXT 0x80E5
    #define GL_COLOR_LOGIC_OP 0x0BF2
    #define GL_COLOR_MATRIX 0x80B1
    #define GL_COLOR_MATRIX_SGI 0x80B1
    #define GL_COLOR_MATRIX_STACK_DEPTH 0x80B2
    #define GL_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B2
    #define GL_COLOR_RENDERABLE 0x8286
    #define GL_COLOR_SAMPLES_NV 0x8E20
    #define GL_COLOR_SUM 0x8458
    #define GL_COLOR_SUM_ARB 0x8458
    #define GL_COLOR_SUM_CLAMP_NV 0x854F
    #define GL_COLOR_SUM_EXT 0x8458
    #define GL_COLOR_TABLE 0x80D0
    #define GL_COLOR_TABLE_ALPHA_SIZE 0x80DD
    #define GL_COLOR_TABLE_ALPHA_SIZE_SGI 0x80DD
    #define GL_COLOR_TABLE_BIAS 0x80D7
    #define GL_COLOR_TABLE_BIAS_SGI 0x80D7
    #define GL_COLOR_TABLE_BLUE_SIZE 0x80DC
    #define GL_COLOR_TABLE_BLUE_SIZE_SGI 0x80DC
    #define GL_COLOR_TABLE_FORMAT 0x80D8
    #define GL_COLOR_TABLE_FORMAT_SGI 0x80D8
    #define GL_COLOR_TABLE_GREEN_SIZE 0x80DB
    #define GL_COLOR_TABLE_GREEN_SIZE_SGI 0x80DB
    #define GL_COLOR_TABLE_INTENSITY_SIZE 0x80DF
    #define GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF
    #define GL_COLOR_TABLE_LUMINANCE_SIZE 0x80DE
    #define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE
    #define GL_COLOR_TABLE_RED_SIZE 0x80DA
    #define GL_COLOR_TABLE_RED_SIZE_SGI 0x80DA
    #define GL_COLOR_TABLE_SCALE 0x80D6
    #define GL_COLOR_TABLE_SCALE_SGI 0x80D6
    #define GL_COLOR_TABLE_SGI 0x80D0
    #define GL_COLOR_TABLE_WIDTH 0x80D9
    #define GL_COLOR_TABLE_WIDTH_SGI 0x80D9
    #define GL_COLOR_WRITEMASK 0x0C23
    #define GL_COMBINE 0x8570
    #define GL_COMBINE4_NV 0x8503
    #define GL_COMBINER0_NV 0x8550
    #define GL_COMBINER1_NV 0x8551
    #define GL_COMBINER2_NV 0x8552
    #define GL_COMBINER3_NV 0x8553
    #define GL_COMBINER4_NV 0x8554
    #define GL_COMBINER5_NV 0x8555
    #define GL_COMBINER6_NV 0x8556
    #define GL_COMBINER7_NV 0x8557
    #define GL_COMBINER_AB_DOT_PRODUCT_NV 0x8545
    #define GL_COMBINER_AB_OUTPUT_NV 0x854A
    #define GL_COMBINER_BIAS_NV 0x8549
    #define GL_COMBINER_CD_DOT_PRODUCT_NV 0x8546
    #define GL_COMBINER_CD_OUTPUT_NV 0x854B
    #define GL_COMBINER_COMPONENT_USAGE_NV 0x8544
    #define GL_COMBINER_INPUT_NV 0x8542
    #define GL_COMBINER_MAPPING_NV 0x8543
    #define GL_COMBINER_MUX_SUM_NV 0x8547
    #define GL_COMBINER_SCALE_NV 0x8548
    #define GL_COMBINER_SUM_OUTPUT_NV 0x854C
    #define GL_COMBINE_ALPHA 0x8572
    #define GL_COMBINE_ALPHA_ARB 0x8572
    #define GL_COMBINE_ALPHA_EXT 0x8572
    #define GL_COMBINE_ARB 0x8570
    #define GL_COMBINE_EXT 0x8570
    #define GL_COMBINE_RGB 0x8571
    #define GL_COMBINE_RGB_ARB 0x8571
    #define GL_COMBINE_RGB_EXT 0x8571
    #define GL_COMMAND_BARRIER_BIT 0x00000040
    #define GL_COMMAND_BARRIER_BIT_EXT 0x00000040
    #define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT 0x884E
    #define GL_COMPARE_REF_TO_TEXTURE 0x884E
    #define GL_COMPARE_REF_TO_TEXTURE_EXT 0x884E
    #define GL_COMPARE_R_TO_TEXTURE 0x884E
    #define GL_COMPARE_R_TO_TEXTURE_ARB 0x884E
    #define GL_COMPATIBLE_SUBROUTINES 0x8E4B
    #define GL_COMPILE_STATUS 0x8B81
    #define GL_COMPLETION_STATUS_ARB 0x91B1
    #define GL_COMPRESSED_ALPHA 0x84E9
    #define GL_COMPRESSED_ALPHA_ARB 0x84E9
    #define GL_COMPRESSED_INTENSITY 0x84EC
    #define GL_COMPRESSED_INTENSITY_ARB 0x84EC
    #define GL_COMPRESSED_LUMINANCE 0x84EA
    #define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
    #define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
    #define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT 0x8C72
    #define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
    #define GL_COMPRESSED_LUMINANCE_LATC1_EXT 0x8C70
    #define GL_COMPRESSED_R11_EAC 0x9270
    #define GL_COMPRESSED_RED 0x8225
    #define GL_COMPRESSED_RED_GREEN_RGTC2_EXT 0x8DBD
    #define GL_COMPRESSED_RED_RGTC1 0x8DBB
    #define GL_COMPRESSED_RED_RGTC1_EXT 0x8DBB
    #define GL_COMPRESSED_RG 0x8226
    #define GL_COMPRESSED_RG11_EAC 0x9272
    #define GL_COMPRESSED_RGB 0x84ED
    #define GL_COMPRESSED_RGB8_ETC2 0x9274
    #define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
    #define GL_COMPRESSED_RGBA 0x84EE
    #define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
    #define GL_COMPRESSED_RGBA_ARB 0x84EE
    #define GL_COMPRESSED_RGBA_ASTC_10x10 0x93BB
    #define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB
    #define GL_COMPRESSED_RGBA_ASTC_10x5 0x93B8
    #define GL_COMPRESSED_RGBA_ASTC_10x5_KHR 0x93B8
    #define GL_COMPRESSED_RGBA_ASTC_10x6 0x93B9
    #define GL_COMPRESSED_RGBA_ASTC_10x6_KHR 0x93B9
    #define GL_COMPRESSED_RGBA_ASTC_10x8 0x93BA
    #define GL_COMPRESSED_RGBA_ASTC_10x8_KHR 0x93BA
    #define GL_COMPRESSED_RGBA_ASTC_12x10 0x93BC
    #define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC
    #define GL_COMPRESSED_RGBA_ASTC_12x12 0x93BD
    #define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD
    #define GL_COMPRESSED_RGBA_ASTC_3x3x3_OES 0x93C0
    #define GL_COMPRESSED_RGBA_ASTC_4x3x3_OES 0x93C1
    #define GL_COMPRESSED_RGBA_ASTC_4x4 0x93B0
    #define GL_COMPRESSED_RGBA_ASTC_4x4_KHR 0x93B0
    #define GL_COMPRESSED_RGBA_ASTC_4x4x3_OES 0x93C2
    #define GL_COMPRESSED_RGBA_ASTC_4x4x4_OES 0x93C3
    #define GL_COMPRESSED_RGBA_ASTC_5x4 0x93B1
    #define GL_COMPRESSED_RGBA_ASTC_5x4_KHR 0x93B1
    #define GL_COMPRESSED_RGBA_ASTC_5x4x4_OES 0x93C4
    #define GL_COMPRESSED_RGBA_ASTC_5x5 0x93B2
    #define GL_COMPRESSED_RGBA_ASTC_5x5_KHR 0x93B2
    #define GL_COMPRESSED_RGBA_ASTC_5x5x4_OES 0x93C5
    #define GL_COMPRESSED_RGBA_ASTC_5x5x5_OES 0x93C6
    #define GL_COMPRESSED_RGBA_ASTC_6x5 0x93B3
    #define GL_COMPRESSED_RGBA_ASTC_6x5_KHR 0x93B3
    #define GL_COMPRESSED_RGBA_ASTC_6x5x5_OES 0x93C7
    #define GL_COMPRESSED_RGBA_ASTC_6x6 0x93B4
    #define GL_COMPRESSED_RGBA_ASTC_6x6_KHR 0x93B4
    #define GL_COMPRESSED_RGBA_ASTC_6x6x5_OES 0x93C8
    #define GL_COMPRESSED_RGBA_ASTC_6x6x6_OES 0x93C9
    #define GL_COMPRESSED_RGBA_ASTC_8x5 0x93B5
    #define GL_COMPRESSED_RGBA_ASTC_8x5_KHR 0x93B5
    #define GL_COMPRESSED_RGBA_ASTC_8x6 0x93B6
    #define GL_COMPRESSED_RGBA_ASTC_8x6_KHR 0x93B6
    #define GL_COMPRESSED_RGBA_ASTC_8x8 0x93B7
    #define GL_COMPRESSED_RGBA_ASTC_8x8_KHR 0x93B7
    #define GL_COMPRESSED_RGBA_BPTC_UNORM 0x8E8C
    #define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB 0x8E8C
    #define GL_COMPRESSED_RGBA_FXT1_3DFX 0x86B1
    #define GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG 0x8C03
    #define GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG 0x9137
    #define GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG 0x8C02
    #define GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG 0x9138
    #define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT 0x83F1
    #define GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE 0x83F2
    #define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT 0x83F2
    #define GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE 0x83F3
    #define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT 0x83F3
    #define GL_COMPRESSED_RGB_ARB 0x84ED
    #define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
    #define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB 0x8E8E
    #define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
    #define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB 0x8E8F
    #define GL_COMPRESSED_RGB_FXT1_3DFX 0x86B0
    #define GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG 0x8C01
    #define GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG 0x8C00
    #define GL_COMPRESSED_RGB_S3TC_DXT1_EXT 0x83F0
    #define GL_COMPRESSED_RG_RGTC2 0x8DBD
    #define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT 0x8C73
    #define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT 0x8C71
    #define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
    #define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT 0x8DBE
    #define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
    #define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT 0x8DBC
    #define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
    #define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
    #define GL_COMPRESSED_SLUMINANCE 0x8C4A
    #define GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B
    #define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 0x8C4B
    #define GL_COMPRESSED_SLUMINANCE_EXT 0x8C4A
    #define GL_COMPRESSED_SRGB 0x8C48
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10 0x93DB
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5 0x93D8
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6 0x93D9
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8 0x93DA
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 0x93DC
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 0x93DD
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES 0x93E0
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES 0x93E1
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 0x93D0
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES 0x93E2
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES 0x93E3
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 0x93D1
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES 0x93E4
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 0x93D2
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES 0x93E5
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES 0x93E6
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 0x93D3
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES 0x93E7
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 0x93D4
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES 0x93E8
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES 0x93E9
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 0x93D5
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 0x93D6
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 0x93D7
    #define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7
    #define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
    #define GL_COMPRESSED_SRGB8_ETC2 0x9275
    #define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
    #define GL_COMPRESSED_SRGB_ALPHA 0x8C49
    #define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
    #define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB 0x8E8D
    #define GL_COMPRESSED_SRGB_ALPHA_EXT 0x8C49
    #define GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT 0x8A56
    #define GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG 0x93F0
    #define GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT 0x8A57
    #define GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG 0x93F1
    #define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 0x8C4D
    #define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV 0x8C4D
    #define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT 0x8C4E
    #define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV 0x8C4E
    #define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT 0x8C4F
    #define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV 0x8C4F
    #define GL_COMPRESSED_SRGB_EXT 0x8C48
    #define GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT 0x8A54
    #define GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT 0x8A55
    #define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT 0x8C4C
    #define GL_COMPRESSED_SRGB_S3TC_DXT1_NV 0x8C4C
    #define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
    #define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
    #define GL_COMPUTE_PROGRAM_NV 0x90FB
    #define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV 0x90FC
    #define GL_COMPUTE_SHADER 0x91B9
    #define GL_COMPUTE_SHADER_BIT 0x00000020
    #define GL_COMPUTE_SHADER_INVOCATIONS_ARB 0x82F5
    #define GL_COMPUTE_SUBROUTINE 0x92ED
    #define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
    #define GL_COMPUTE_TEXTURE 0x82A0
    #define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
    #define GL_COMP_BIT_ATI 0x00000002
    #define GL_CONDITION_SATISFIED 0x911C
    #define GL_CONDITION_SATISFIED_APPLE 0x911C
    #define GL_CONFORMANT_NV 0x9374
    #define GL_CONIC_CURVE_TO_NV 0x1A
    #define GL_CONJOINT_NV 0x9284
    #define GL_CONSERVATIVE_RASTERIZATION_INTEL 0x83FE
    #define GL_CONSERVATIVE_RASTERIZATION_NV 0x9346
    #define GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV 0x937B
    #define GL_CONSERVATIVE_RASTER_DILATE_NV 0x9379
    #define GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV 0x937A
    #define GL_CONSERVATIVE_RASTER_MODE_NV 0x954D
    #define GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV 0x954E
    #define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV 0x954F
    #define GL_CONSERVE_MEMORY_HINT_PGI 0x1A1FD
    #define GL_CONSTANT 0x8576
    #define GL_CONSTANT_ALPHA 0x8003
    #define GL_CONSTANT_ALPHA_EXT 0x8003
    #define GL_CONSTANT_ARB 0x8576
    #define GL_CONSTANT_BORDER 0x8151
    #define GL_CONSTANT_BORDER_HP 0x8151
    #define GL_CONSTANT_COLOR 0x8001
    #define GL_CONSTANT_COLOR0_NV 0x852A
    #define GL_CONSTANT_COLOR1_NV 0x852B
    #define GL_CONSTANT_COLOR_EXT 0x8001
    #define GL_CONSTANT_EXT 0x8576
    #define GL_CONSTANT_NV 0x8576
    #define GL_CONST_EYE_NV 0x86E5
    #define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
    #define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
    #define GL_CONTEXT_FLAGS 0x821E
    #define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
    #define GL_CONTEXT_FLAG_DEBUG_BIT_KHR 0x00000002
    #define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
    #define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR 0x00000008
    #define GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT 0x00000010
    #define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
    #define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
    #define GL_CONTEXT_LOST 0x0507
    #define GL_CONTEXT_LOST_KHR 0x0507
    #define GL_CONTEXT_PROFILE_MASK 0x9126
    #define GL_CONTEXT_RELEASE_BEHAVIOR 0x82FB
    #define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
    #define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR 0x82FC
    #define GL_CONTEXT_RELEASE_BEHAVIOR_KHR 0x82FB
    #define GL_CONTEXT_ROBUST_ACCESS 0x90F3
    #define GL_CONTEXT_ROBUST_ACCESS_EXT 0x90F3
    #define GL_CONTEXT_ROBUST_ACCESS_KHR 0x90F3
    #define GL_CONTINUOUS_AMD 0x9007
    #define GL_CONTRAST_NV 0x92A1
    #define GL_CONVEX_HULL_NV 0x908B
    #define GL_CONVOLUTION_1D 0x8010
    #define GL_CONVOLUTION_1D_EXT 0x8010
    #define GL_CONVOLUTION_2D 0x8011
    #define GL_CONVOLUTION_2D_EXT 0x8011
    #define GL_CONVOLUTION_BORDER_COLOR 0x8154
    #define GL_CONVOLUTION_BORDER_COLOR_HP 0x8154
    #define GL_CONVOLUTION_BORDER_MODE 0x8013
    #define GL_CONVOLUTION_BORDER_MODE_EXT 0x8013
    #define GL_CONVOLUTION_FILTER_BIAS 0x8015
    #define GL_CONVOLUTION_FILTER_BIAS_EXT 0x8015
    #define GL_CONVOLUTION_FILTER_SCALE 0x8014
    #define GL_CONVOLUTION_FILTER_SCALE_EXT 0x8014
    #define GL_CONVOLUTION_FORMAT 0x8017
    #define GL_CONVOLUTION_FORMAT_EXT 0x8017
    #define GL_CONVOLUTION_HEIGHT 0x8019
    #define GL_CONVOLUTION_HEIGHT_EXT 0x8019
    #define GL_CONVOLUTION_HINT_SGIX 0x8316
    #define GL_CONVOLUTION_WIDTH 0x8018
    #define GL_CONVOLUTION_WIDTH_EXT 0x8018
    #define GL_CON_0_ATI 0x8941
    #define GL_CON_10_ATI 0x894B
    #define GL_CON_11_ATI 0x894C
    #define GL_CON_12_ATI 0x894D
    #define GL_CON_13_ATI 0x894E
    #define GL_CON_14_ATI 0x894F
    #define GL_CON_15_ATI 0x8950
    #define GL_CON_16_ATI 0x8951
    #define GL_CON_17_ATI 0x8952
    #define GL_CON_18_ATI 0x8953
    #define GL_CON_19_ATI 0x8954
    #define GL_CON_1_ATI 0x8942
    #define GL_CON_20_ATI 0x8955
    #define GL_CON_21_ATI 0x8956
    #define GL_CON_22_ATI 0x8957
    #define GL_CON_23_ATI 0x8958
    #define GL_CON_24_ATI 0x8959
    #define GL_CON_25_ATI 0x895A
    #define GL_CON_26_ATI 0x895B
    #define GL_CON_27_ATI 0x895C
    #define GL_CON_28_ATI 0x895D
    #define GL_CON_29_ATI 0x895E
    #define GL_CON_2_ATI 0x8943
    #define GL_CON_30_ATI 0x895F
    #define GL_CON_31_ATI 0x8960
    #define GL_CON_3_ATI 0x8944
    #define GL_CON_4_ATI 0x8945
    #define GL_CON_5_ATI 0x8946
    #define GL_CON_6_ATI 0x8947
    #define GL_CON_7_ATI 0x8948
    #define GL_CON_8_ATI 0x8949
    #define GL_CON_9_ATI 0x894A
    #define GL_COORD_REPLACE 0x8862
    #define GL_COORD_REPLACE_ARB 0x8862
    #define GL_COORD_REPLACE_NV 0x8862
    #define GL_COPY 0x1503
    #define GL_COPY_INVERTED 0x150C
    #define GL_COPY_READ_BUFFER 0x8F36
    #define GL_COPY_READ_BUFFER_BINDING 0x8F36
    #define GL_COPY_READ_BUFFER_NV 0x8F36
    #define GL_COPY_WRITE_BUFFER 0x8F37
    #define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
    #define GL_COPY_WRITE_BUFFER_NV 0x8F37
    #define GL_COUNTER_RANGE_AMD 0x8BC1
    #define GL_COUNTER_TYPE_AMD 0x8BC0
    #define GL_COUNT_DOWN_NV 0x9089
    #define GL_COUNT_UP_NV 0x9088
    #define GL_COVERAGE_ALL_FRAGMENTS_NV 0x8ED5
    #define GL_COVERAGE_ATTACHMENT_NV 0x8ED2
    #define GL_COVERAGE_AUTOMATIC_NV 0x8ED7
    #define GL_COVERAGE_BUFFERS_NV 0x8ED3
    #define GL_COVERAGE_BUFFER_BIT_NV 0x00008000
    #define GL_COVERAGE_COMPONENT4_NV 0x8ED1
    #define GL_COVERAGE_COMPONENT_NV 0x8ED0
    #define GL_COVERAGE_EDGE_FRAGMENTS_NV 0x8ED6
    #define GL_COVERAGE_MODULATION_NV 0x9332
    #define GL_COVERAGE_MODULATION_TABLE_NV 0x9331
    #define GL_COVERAGE_MODULATION_TABLE_SIZE_NV 0x9333
    #define GL_COVERAGE_SAMPLES_NV 0x8ED4
    #define GL_CPU_OPTIMIZED_QCOM 0x8FB1
    #define GL_CUBIC_CURVE_TO_NV 0x0C
    #define GL_CUBIC_EXT 0x8334
    #define GL_CUBIC_HP 0x815F
    #define GL_CUBIC_IMG 0x9139
    #define GL_CUBIC_MIPMAP_LINEAR_IMG 0x913B
    #define GL_CUBIC_MIPMAP_NEAREST_IMG 0x913A
    #define GL_CULL_FACE 0x0B44
    #define GL_CULL_FACE_MODE 0x0B45
    #define GL_CULL_FRAGMENT_NV 0x86E7
    #define GL_CULL_MODES_NV 0x86E0
    #define GL_CULL_VERTEX_EXT 0x81AA
    #define GL_CULL_VERTEX_EYE_POSITION_EXT 0x81AB
    #define GL_CULL_VERTEX_IBM 103050
    #define GL_CULL_VERTEX_OBJECT_POSITION_EXT 0x81AC
    #define GL_CURRENT_ATTRIB_NV 0x8626
    #define GL_CURRENT_BINORMAL_EXT 0x843C
    #define GL_CURRENT_FOG_COORD 0x8453
    #define GL_CURRENT_FOG_COORDINATE 0x8453
    #define GL_CURRENT_FOG_COORDINATE_EXT 0x8453
    #define GL_CURRENT_MATRIX_ARB 0x8641
    #define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
    #define GL_CURRENT_MATRIX_NV 0x8641
    #define GL_CURRENT_MATRIX_STACK_DEPTH_ARB 0x8640
    #define GL_CURRENT_MATRIX_STACK_DEPTH_NV 0x8640
    #define GL_CURRENT_OCCLUSION_QUERY_ID_NV 0x8865
    #define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
    #define GL_CURRENT_PROGRAM 0x8B8D
    #define GL_CURRENT_QUERY 0x8865
    #define GL_CURRENT_QUERY_ARB 0x8865
    #define GL_CURRENT_QUERY_EXT 0x8865
    #define GL_CURRENT_RASTER_NORMAL_SGIX 0x8406
    #define GL_CURRENT_RASTER_SECONDARY_COLOR 0x845F
    #define GL_CURRENT_SECONDARY_COLOR 0x8459
    #define GL_CURRENT_SECONDARY_COLOR_EXT 0x8459
    #define GL_CURRENT_TANGENT_EXT 0x843B
    #define GL_CURRENT_TIME_NV 0x8E28
    #define GL_CURRENT_VERTEX_ATTRIB 0x8626
    #define GL_CURRENT_VERTEX_ATTRIB_ARB 0x8626
    #define GL_CURRENT_VERTEX_EXT 0x87E2
    #define GL_CURRENT_VERTEX_WEIGHT_EXT 0x850B
    #define GL_CURRENT_WEIGHT_ARB 0x86A8
    #define GL_CW 0x0900
    #define GL_D3D12_FENCE_VALUE_EXT 0x9595
    #define GL_DARKEN 0x9297
    #define GL_DARKEN_KHR 0x9297
    #define GL_DARKEN_NV 0x9297
    #define GL_DATA_BUFFER_AMD 0x9151
    #define GL_DEBUG_CALLBACK_FUNCTION 0x8244
    #define GL_DEBUG_CALLBACK_FUNCTION_ARB 0x8244
    #define GL_DEBUG_CALLBACK_FUNCTION_KHR 0x8244
    #define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
    #define GL_DEBUG_CALLBACK_USER_PARAM_ARB 0x8245
    #define GL_DEBUG_CALLBACK_USER_PARAM_KHR 0x8245
    #define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
    #define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
    #define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
    #define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
    #define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
    #define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
    #define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
    #define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
    #define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
    #define GL_DEBUG_GROUP_STACK_DEPTH_KHR 0x826D
    #define GL_DEBUG_LOGGED_MESSAGES 0x9145
    #define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
    #define GL_DEBUG_LOGGED_MESSAGES_ARB 0x9145
    #define GL_DEBUG_LOGGED_MESSAGES_KHR 0x9145
    #define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
    #define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
    #define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR 0x8243
    #define GL_DEBUG_OUTPUT 0x92E0
    #define GL_DEBUG_OUTPUT_KHR 0x92E0
    #define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
    #define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB 0x8242
    #define GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR 0x8242
    #define GL_DEBUG_SEVERITY_HIGH 0x9146
    #define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
    #define GL_DEBUG_SEVERITY_HIGH_ARB 0x9146
    #define GL_DEBUG_SEVERITY_HIGH_KHR 0x9146
    #define GL_DEBUG_SEVERITY_LOW 0x9148
    #define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
    #define GL_DEBUG_SEVERITY_LOW_ARB 0x9148
    #define GL_DEBUG_SEVERITY_LOW_KHR 0x9148
    #define GL_DEBUG_SEVERITY_MEDIUM 0x9147
    #define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
    #define GL_DEBUG_SEVERITY_MEDIUM_ARB 0x9147
    #define GL_DEBUG_SEVERITY_MEDIUM_KHR 0x9147
    #define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
    #define GL_DEBUG_SEVERITY_NOTIFICATION_KHR 0x826B
    #define GL_DEBUG_SOURCE_API 0x8246
    #define GL_DEBUG_SOURCE_API_ARB 0x8246
    #define GL_DEBUG_SOURCE_API_KHR 0x8246
    #define GL_DEBUG_SOURCE_APPLICATION 0x824A
    #define GL_DEBUG_SOURCE_APPLICATION_ARB 0x824A
    #define GL_DEBUG_SOURCE_APPLICATION_KHR 0x824A
    #define GL_DEBUG_SOURCE_OTHER 0x824B
    #define GL_DEBUG_SOURCE_OTHER_ARB 0x824B
    #define GL_DEBUG_SOURCE_OTHER_KHR 0x824B
    #define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
    #define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
    #define GL_DEBUG_SOURCE_SHADER_COMPILER_KHR 0x8248
    #define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
    #define GL_DEBUG_SOURCE_THIRD_PARTY_ARB 0x8249
    #define GL_DEBUG_SOURCE_THIRD_PARTY_KHR 0x8249
    #define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
    #define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
    #define GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR 0x8247
    #define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
    #define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
    #define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR 0x824D
    #define GL_DEBUG_TYPE_ERROR 0x824C
    #define GL_DEBUG_TYPE_ERROR_ARB 0x824C
    #define GL_DEBUG_TYPE_ERROR_KHR 0x824C
    #define GL_DEBUG_TYPE_MARKER 0x8268
    #define GL_DEBUG_TYPE_MARKER_KHR 0x8268
    #define GL_DEBUG_TYPE_OTHER 0x8251
    #define GL_DEBUG_TYPE_OTHER_ARB 0x8251
    #define GL_DEBUG_TYPE_OTHER_KHR 0x8251
    #define GL_DEBUG_TYPE_PERFORMANCE 0x8250
    #define GL_DEBUG_TYPE_PERFORMANCE_ARB 0x8250
    #define GL_DEBUG_TYPE_PERFORMANCE_KHR 0x8250
    #define GL_DEBUG_TYPE_POP_GROUP 0x826A
    #define GL_DEBUG_TYPE_POP_GROUP_KHR 0x826A
    #define GL_DEBUG_TYPE_PORTABILITY 0x824F
    #define GL_DEBUG_TYPE_PORTABILITY_ARB 0x824F
    #define GL_DEBUG_TYPE_PORTABILITY_KHR 0x824F
    #define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
    #define GL_DEBUG_TYPE_PUSH_GROUP_KHR 0x8269
    #define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
    #define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
    #define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR 0x824E
    #define GL_DECODE_EXT 0x8A49
    #define GL_DECR 0x1E03
    #define GL_DECR_WRAP 0x8508
    #define GL_DECR_WRAP_EXT 0x8508
    #define GL_DEDICATED_MEMORY_OBJECT_EXT 0x9581
    #define GL_DEFORMATIONS_MASK_SGIX 0x8196
    #define GL_DELETE_STATUS 0x8B80
    #define GL_DEPENDENT_AR_TEXTURE_2D_NV 0x86E9
    #define GL_DEPENDENT_GB_TEXTURE_2D_NV 0x86EA
    #define GL_DEPENDENT_HILO_TEXTURE_2D_NV 0x8858
    #define GL_DEPENDENT_RGB_TEXTURE_3D_NV 0x8859
    #define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV 0x885A
    #define GL_DEPTH 0x1801
    #define GL_DEPTH24_STENCIL8 0x88F0
    #define GL_DEPTH24_STENCIL8_EXT 0x88F0
    #define GL_DEPTH24_STENCIL8_OES 0x88F0
    #define GL_DEPTH32F_STENCIL8 0x8CAD
    #define GL_DEPTH32F_STENCIL8_NV 0x8DAC
    #define GL_DEPTH_ATTACHMENT 0x8D00
    #define GL_DEPTH_ATTACHMENT_EXT 0x8D00
    #define GL_DEPTH_BITS 0x0D56
    #define GL_DEPTH_BOUNDS_EXT 0x8891
    #define GL_DEPTH_BOUNDS_TEST_EXT 0x8890
    #define GL_DEPTH_BUFFER_BIT 0x00000100
    #define GL_DEPTH_BUFFER_BIT0_QCOM 0x00000100
    #define GL_DEPTH_BUFFER_BIT1_QCOM 0x00000200
    #define GL_DEPTH_BUFFER_BIT2_QCOM 0x00000400
    #define GL_DEPTH_BUFFER_BIT3_QCOM 0x00000800
    #define GL_DEPTH_BUFFER_BIT4_QCOM 0x00001000
    #define GL_DEPTH_BUFFER_BIT5_QCOM 0x00002000
    #define GL_DEPTH_BUFFER_BIT6_QCOM 0x00004000
    #define GL_DEPTH_BUFFER_BIT7_QCOM 0x00008000
    #define GL_DEPTH_BUFFER_FLOAT_MODE_NV 0x8DAF
    #define GL_DEPTH_CLAMP 0x864F
    #define GL_DEPTH_CLAMP_FAR_AMD 0x901F
    #define GL_DEPTH_CLAMP_NEAR_AMD 0x901E
    #define GL_DEPTH_CLAMP_NV 0x864F
    #define GL_DEPTH_CLEAR_VALUE 0x0B73
    #define GL_DEPTH_COMPONENT 0x1902
    #define GL_DEPTH_COMPONENT16 0x81A5
    #define GL_DEPTH_COMPONENT16_ARB 0x81A5
    #define GL_DEPTH_COMPONENT16_NONLINEAR_NV 0x8E2C
    #define GL_DEPTH_COMPONENT16_OES 0x81A5
    #define GL_DEPTH_COMPONENT16_SGIX 0x81A5
    #define GL_DEPTH_COMPONENT24 0x81A6
    #define GL_DEPTH_COMPONENT24_ARB 0x81A6
    #define GL_DEPTH_COMPONENT24_OES 0x81A6
    #define GL_DEPTH_COMPONENT24_SGIX 0x81A6
    #define GL_DEPTH_COMPONENT32 0x81A7
    #define GL_DEPTH_COMPONENT32F 0x8CAC
    #define GL_DEPTH_COMPONENT32F_NV 0x8DAB
    #define GL_DEPTH_COMPONENT32_ARB 0x81A7
    #define GL_DEPTH_COMPONENT32_OES 0x81A7
    #define GL_DEPTH_COMPONENT32_SGIX 0x81A7
    #define GL_DEPTH_COMPONENTS 0x8284
    #define GL_DEPTH_EXT 0x1801
    #define GL_DEPTH_FUNC 0x0B74
    #define GL_DEPTH_RANGE 0x0B70
    #define GL_DEPTH_RENDERABLE 0x8287
    #define GL_DEPTH_SAMPLES_NV 0x932D
    #define GL_DEPTH_STENCIL 0x84F9
    #define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
    #define GL_DEPTH_STENCIL_EXT 0x84F9
    #define GL_DEPTH_STENCIL_NV 0x84F9
    #define GL_DEPTH_STENCIL_OES 0x84F9
    #define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
    #define GL_DEPTH_STENCIL_TO_BGRA_NV 0x886F
    #define GL_DEPTH_STENCIL_TO_RGBA_NV 0x886E
    #define GL_DEPTH_TEST 0x0B71
    #define GL_DEPTH_TEXTURE_MODE 0x884B
    #define GL_DEPTH_TEXTURE_MODE_ARB 0x884B
    #define GL_DEPTH_WRITEMASK 0x0B72
    #define GL_DETAIL_TEXTURE_2D_BINDING_SGIS 0x8096
    #define GL_DETAIL_TEXTURE_2D_SGIS 0x8095
    #define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS 0x809C
    #define GL_DETAIL_TEXTURE_LEVEL_SGIS 0x809A
    #define GL_DETAIL_TEXTURE_MODE_SGIS 0x809B
    #define GL_DEVICE_LUID_EXT 0x9599
    #define GL_DEVICE_NODE_MASK_EXT 0x959A
    #define GL_DEVICE_UUID_EXT 0x9597
    #define GL_DIFFERENCE 0x929E
    #define GL_DIFFERENCE_KHR 0x929E
    #define GL_DIFFERENCE_NV 0x929E
    #define GL_DISCARD_ATI 0x8763
    #define GL_DISCARD_NV 0x8530
    #define GL_DISCRETE_AMD 0x9006
    #define GL_DISJOINT_NV 0x9283
    #define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
    #define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
    #define GL_DISPLAY_LIST 0x82E7
    #define GL_DISTANCE_ATTENUATION_EXT 0x8129
    #define GL_DISTANCE_ATTENUATION_SGIS 0x8129
    #define GL_DITHER 0x0BD0
    #define GL_DMP_PROGRAM_BINARY_DMP 0x9253
    #define GL_DONT_CARE 0x1100
    #define GL_DOT2_ADD_ATI 0x896C
    #define GL_DOT3_ATI 0x8966
    #define GL_DOT3_RGB 0x86AE
    #define GL_DOT3_RGBA 0x86AF
    #define GL_DOT3_RGBA_ARB 0x86AF
    #define GL_DOT3_RGBA_EXT 0x8741
    #define GL_DOT3_RGB_ARB 0x86AE
    #define GL_DOT3_RGB_EXT 0x8740
    #define GL_DOT4_ATI 0x8967
    #define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV 0x885D
    #define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV 0x86F3
    #define GL_DOT_PRODUCT_DEPTH_REPLACE_NV 0x86ED
    #define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV 0x86F1
    #define GL_DOT_PRODUCT_NV 0x86EC
    #define GL_DOT_PRODUCT_PASS_THROUGH_NV 0x885B
    #define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV 0x86F2
    #define GL_DOT_PRODUCT_TEXTURE_1D_NV 0x885C
    #define GL_DOT_PRODUCT_TEXTURE_2D_NV 0x86EE
    #define GL_DOT_PRODUCT_TEXTURE_3D_NV 0x86EF
    #define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV 0x86F0
    #define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV 0x864E
    #define GL_DOUBLE 0x140A
    #define GL_DOUBLEBUFFER 0x0C32
    #define GL_DOUBLE_MAT2 0x8F46
    #define GL_DOUBLE_MAT2_EXT 0x8F46
    #define GL_DOUBLE_MAT2x3 0x8F49
    #define GL_DOUBLE_MAT2x3_EXT 0x8F49
    #define GL_DOUBLE_MAT2x4 0x8F4A
    #define GL_DOUBLE_MAT2x4_EXT 0x8F4A
    #define GL_DOUBLE_MAT3 0x8F47
    #define GL_DOUBLE_MAT3_EXT 0x8F47
    #define GL_DOUBLE_MAT3x2 0x8F4B
    #define GL_DOUBLE_MAT3x2_EXT 0x8F4B
    #define GL_DOUBLE_MAT3x4 0x8F4C
    #define GL_DOUBLE_MAT3x4_EXT 0x8F4C
    #define GL_DOUBLE_MAT4 0x8F48
    #define GL_DOUBLE_MAT4_EXT 0x8F48
    #define GL_DOUBLE_MAT4x2 0x8F4D
    #define GL_DOUBLE_MAT4x2_EXT 0x8F4D
    #define GL_DOUBLE_MAT4x3 0x8F4E
    #define GL_DOUBLE_MAT4x3_EXT 0x8F4E
    #define GL_DOUBLE_VEC2 0x8FFC
    #define GL_DOUBLE_VEC2_EXT 0x8FFC
    #define GL_DOUBLE_VEC3 0x8FFD
    #define GL_DOUBLE_VEC3_EXT 0x8FFD
    #define GL_DOUBLE_VEC4 0x8FFE
    #define GL_DOUBLE_VEC4_EXT 0x8FFE
    #define GL_DOWNSAMPLE_SCALES_IMG 0x913E
    #define GL_DRAW_ARRAYS_COMMAND_NV 0x0003
    #define GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV 0x0007
    #define GL_DRAW_ARRAYS_STRIP_COMMAND_NV 0x0005
    #define GL_DRAW_BUFFER 0x0C01
    #define GL_DRAW_BUFFER0 0x8825
    #define GL_DRAW_BUFFER0_ARB 0x8825
    #define GL_DRAW_BUFFER0_ATI 0x8825
    #define GL_DRAW_BUFFER0_EXT 0x8825
    #define GL_DRAW_BUFFER0_NV 0x8825
    #define GL_DRAW_BUFFER1 0x8826
    #define GL_DRAW_BUFFER10 0x882F
    #define GL_DRAW_BUFFER10_ARB 0x882F
    #define GL_DRAW_BUFFER10_ATI 0x882F
    #define GL_DRAW_BUFFER10_EXT 0x882F
    #define GL_DRAW_BUFFER10_NV 0x882F
    #define GL_DRAW_BUFFER11 0x8830
    #define GL_DRAW_BUFFER11_ARB 0x8830
    #define GL_DRAW_BUFFER11_ATI 0x8830
    #define GL_DRAW_BUFFER11_EXT 0x8830
    #define GL_DRAW_BUFFER11_NV 0x8830
    #define GL_DRAW_BUFFER12 0x8831
    #define GL_DRAW_BUFFER12_ARB 0x8831
    #define GL_DRAW_BUFFER12_ATI 0x8831
    #define GL_DRAW_BUFFER12_EXT 0x8831
    #define GL_DRAW_BUFFER12_NV 0x8831
    #define GL_DRAW_BUFFER13 0x8832
    #define GL_DRAW_BUFFER13_ARB 0x8832
    #define GL_DRAW_BUFFER13_ATI 0x8832
    #define GL_DRAW_BUFFER13_EXT 0x8832
    #define GL_DRAW_BUFFER13_NV 0x8832
    #define GL_DRAW_BUFFER14 0x8833
    #define GL_DRAW_BUFFER14_ARB 0x8833
    #define GL_DRAW_BUFFER14_ATI 0x8833
    #define GL_DRAW_BUFFER14_EXT 0x8833
    #define GL_DRAW_BUFFER14_NV 0x8833
    #define GL_DRAW_BUFFER15 0x8834
    #define GL_DRAW_BUFFER15_ARB 0x8834
    #define GL_DRAW_BUFFER15_ATI 0x8834
    #define GL_DRAW_BUFFER15_EXT 0x8834
    #define GL_DRAW_BUFFER15_NV 0x8834
    #define GL_DRAW_BUFFER1_ARB 0x8826
    #define GL_DRAW_BUFFER1_ATI 0x8826
    #define GL_DRAW_BUFFER1_EXT 0x8826
    #define GL_DRAW_BUFFER1_NV 0x8826
    #define GL_DRAW_BUFFER2 0x8827
    #define GL_DRAW_BUFFER2_ARB 0x8827
    #define GL_DRAW_BUFFER2_ATI 0x8827
    #define GL_DRAW_BUFFER2_EXT 0x8827
    #define GL_DRAW_BUFFER2_NV 0x8827
    #define GL_DRAW_BUFFER3 0x8828
    #define GL_DRAW_BUFFER3_ARB 0x8828
    #define GL_DRAW_BUFFER3_ATI 0x8828
    #define GL_DRAW_BUFFER3_EXT 0x8828
    #define GL_DRAW_BUFFER3_NV 0x8828
    #define GL_DRAW_BUFFER4 0x8829
    #define GL_DRAW_BUFFER4_ARB 0x8829
    #define GL_DRAW_BUFFER4_ATI 0x8829
    #define GL_DRAW_BUFFER4_EXT 0x8829
    #define GL_DRAW_BUFFER4_NV 0x8829
    #define GL_DRAW_BUFFER5 0x882A
    #define GL_DRAW_BUFFER5_ARB 0x882A
    #define GL_DRAW_BUFFER5_ATI 0x882A
    #define GL_DRAW_BUFFER5_EXT 0x882A
    #define GL_DRAW_BUFFER5_NV 0x882A
    #define GL_DRAW_BUFFER6 0x882B
    #define GL_DRAW_BUFFER6_ARB 0x882B
    #define GL_DRAW_BUFFER6_ATI 0x882B
    #define GL_DRAW_BUFFER6_EXT 0x882B
    #define GL_DRAW_BUFFER6_NV 0x882B
    #define GL_DRAW_BUFFER7 0x882C
    #define GL_DRAW_BUFFER7_ARB 0x882C
    #define GL_DRAW_BUFFER7_ATI 0x882C
    #define GL_DRAW_BUFFER7_EXT 0x882C
    #define GL_DRAW_BUFFER7_NV 0x882C
    #define GL_DRAW_BUFFER8 0x882D
    #define GL_DRAW_BUFFER8_ARB 0x882D
    #define GL_DRAW_BUFFER8_ATI 0x882D
    #define GL_DRAW_BUFFER8_EXT 0x882D
    #define GL_DRAW_BUFFER8_NV 0x882D
    #define GL_DRAW_BUFFER9 0x882E
    #define GL_DRAW_BUFFER9_ARB 0x882E
    #define GL_DRAW_BUFFER9_ATI 0x882E
    #define GL_DRAW_BUFFER9_EXT 0x882E
    #define GL_DRAW_BUFFER9_NV 0x882E
    #define GL_DRAW_BUFFER_EXT 0x0C01
    #define GL_DRAW_ELEMENTS_COMMAND_NV 0x0002
    #define GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV 0x0006
    #define GL_DRAW_ELEMENTS_STRIP_COMMAND_NV 0x0004
    #define GL_DRAW_FRAMEBUFFER 0x8CA9
    #define GL_DRAW_FRAMEBUFFER_ANGLE 0x8CA9
    #define GL_DRAW_FRAMEBUFFER_APPLE 0x8CA9
    #define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
    #define GL_DRAW_FRAMEBUFFER_BINDING_ANGLE 0x8CA6
    #define GL_DRAW_FRAMEBUFFER_BINDING_APPLE 0x8CA6
    #define GL_DRAW_FRAMEBUFFER_BINDING_EXT 0x8CA6
    #define GL_DRAW_FRAMEBUFFER_BINDING_NV 0x8CA6
    #define GL_DRAW_FRAMEBUFFER_EXT 0x8CA9
    #define GL_DRAW_FRAMEBUFFER_NV 0x8CA9
    #define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
    #define GL_DRAW_INDIRECT_BUFFER 0x8F3F
    #define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
    #define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
    #define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
    #define GL_DRAW_PIXELS_APPLE 0x8A0A
    #define GL_DRIVER_UUID_EXT 0x9598
    #define GL_DSDT8_MAG8_INTENSITY8_NV 0x870B
    #define GL_DSDT8_MAG8_NV 0x870A
    #define GL_DSDT8_NV 0x8709
    #define GL_DSDT_MAG_INTENSITY_NV 0x86DC
    #define GL_DSDT_MAG_NV 0x86F6
    #define GL_DSDT_MAG_VIB_NV 0x86F7
    #define GL_DSDT_NV 0x86F5
    #define GL_DST_ALPHA 0x0304
    #define GL_DST_ATOP_NV 0x928F
    #define GL_DST_COLOR 0x0306
    #define GL_DST_IN_NV 0x928B
    #define GL_DST_NV 0x9287
    #define GL_DST_OUT_NV 0x928D
    #define GL_DST_OVER_NV 0x9289
    #define GL_DS_BIAS_NV 0x8716
    #define GL_DS_SCALE_NV 0x8710
    #define GL_DT_BIAS_NV 0x8717
    #define GL_DT_SCALE_NV 0x8711
    #define GL_DU8DV8_ATI 0x877A
    #define GL_DUAL_ALPHA12_SGIS 0x8112
    #define GL_DUAL_ALPHA16_SGIS 0x8113
    #define GL_DUAL_ALPHA4_SGIS 0x8110
    #define GL_DUAL_ALPHA8_SGIS 0x8111
    #define GL_DUAL_INTENSITY12_SGIS 0x811A
    #define GL_DUAL_INTENSITY16_SGIS 0x811B
    #define GL_DUAL_INTENSITY4_SGIS 0x8118
    #define GL_DUAL_INTENSITY8_SGIS 0x8119
    #define GL_DUAL_LUMINANCE12_SGIS 0x8116
    #define GL_DUAL_LUMINANCE16_SGIS 0x8117
    #define GL_DUAL_LUMINANCE4_SGIS 0x8114
    #define GL_DUAL_LUMINANCE8_SGIS 0x8115
    #define GL_DUAL_LUMINANCE_ALPHA4_SGIS 0x811C
    #define GL_DUAL_LUMINANCE_ALPHA8_SGIS 0x811D
    #define GL_DUAL_TEXTURE_SELECT_SGIS 0x8124
    #define GL_DUDV_ATI 0x8779
    #define GL_DUP_FIRST_CUBIC_CURVE_TO_NV 0xF2
    #define GL_DUP_LAST_CUBIC_CURVE_TO_NV 0xF4
    #define GL_DYNAMIC_ATI 0x8761
    #define GL_DYNAMIC_COPY 0x88EA
    #define GL_DYNAMIC_COPY_ARB 0x88EA
    #define GL_DYNAMIC_DRAW 0x88E8
    #define GL_DYNAMIC_DRAW_ARB 0x88E8
    #define GL_DYNAMIC_READ 0x88E9
    #define GL_DYNAMIC_READ_ARB 0x88E9
    #define GL_DYNAMIC_STORAGE_BIT 0x0100
    #define GL_DYNAMIC_STORAGE_BIT_EXT 0x0100
    #define GL_EDGEFLAG_BIT_PGI 0x00040000
    #define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
    #define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
    #define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB 0x889B
    #define GL_EDGE_FLAG_ARRAY_COUNT_EXT 0x808D
    #define GL_EDGE_FLAG_ARRAY_EXT 0x8079
    #define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
    #define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
    #define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
    #define GL_EDGE_FLAG_ARRAY_POINTER_EXT 0x8093
    #define GL_EDGE_FLAG_ARRAY_STRIDE_EXT 0x808C
    #define GL_EFFECTIVE_RASTER_SAMPLES_EXT 0x932C
    #define GL_EIGHTH_BIT_ATI 0x00000020
    #define GL_ELEMENT_ADDRESS_COMMAND_NV 0x0008
    #define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
    #define GL_ELEMENT_ARRAY_APPLE 0x8A0C
    #define GL_ELEMENT_ARRAY_ATI 0x8768
    #define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
    #define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT 0x00000002
    #define GL_ELEMENT_ARRAY_BUFFER 0x8893
    #define GL_ELEMENT_ARRAY_BUFFER_ARB 0x8893
    #define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
    #define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB 0x8895
    #define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
    #define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
    #define GL_ELEMENT_ARRAY_POINTER_ATI 0x876A
    #define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
    #define GL_ELEMENT_ARRAY_TYPE_ATI 0x8769
    #define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
    #define GL_EMBOSS_CONSTANT_NV 0x855E
    #define GL_EMBOSS_LIGHT_NV 0x855D
    #define GL_EMBOSS_MAP_NV 0x855F
    #define GL_EQUAL 0x0202
    #define GL_EQUIV 0x1509
    #define GL_ETC1_RGB8_OES 0x8D64
    #define GL_ETC1_SRGB8_NV 0x88EE
    #define GL_EVAL_2D_NV 0x86C0
    #define GL_EVAL_FRACTIONAL_TESSELLATION_NV 0x86C5
    #define GL_EVAL_TRIANGULAR_2D_NV 0x86C1
    #define GL_EVAL_VERTEX_ATTRIB0_NV 0x86C6
    #define GL_EVAL_VERTEX_ATTRIB10_NV 0x86D0
    #define GL_EVAL_VERTEX_ATTRIB11_NV 0x86D1
    #define GL_EVAL_VERTEX_ATTRIB12_NV 0x86D2
    #define GL_EVAL_VERTEX_ATTRIB13_NV 0x86D3
    #define GL_EVAL_VERTEX_ATTRIB14_NV 0x86D4
    #define GL_EVAL_VERTEX_ATTRIB15_NV 0x86D5
    #define GL_EVAL_VERTEX_ATTRIB1_NV 0x86C7
    #define GL_EVAL_VERTEX_ATTRIB2_NV 0x86C8
    #define GL_EVAL_VERTEX_ATTRIB3_NV 0x86C9
    #define GL_EVAL_VERTEX_ATTRIB4_NV 0x86CA
    #define GL_EVAL_VERTEX_ATTRIB5_NV 0x86CB
    #define GL_EVAL_VERTEX_ATTRIB6_NV 0x86CC
    #define GL_EVAL_VERTEX_ATTRIB7_NV 0x86CD
    #define GL_EVAL_VERTEX_ATTRIB8_NV 0x86CE
    #define GL_EVAL_VERTEX_ATTRIB9_NV 0x86CF
    #define GL_EXCLUSION 0x92A0
    #define GL_EXCLUSION_KHR 0x92A0
    #define GL_EXCLUSION_NV 0x92A0
    #define GL_EXCLUSIVE_EXT 0x8F11
    #define GL_EXPAND_NEGATE_NV 0x8539
    #define GL_EXPAND_NORMAL_NV 0x8538
    #define GL_EXTENSIONS 0x1F03
    #define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD 0x9160
    #define GL_EYE_DISTANCE_TO_LINE_SGIS 0x81F2
    #define GL_EYE_DISTANCE_TO_POINT_SGIS 0x81F0
    #define GL_EYE_LINEAR_NV 0x2400
    #define GL_EYE_LINE_SGIS 0x81F6
    #define GL_EYE_PLANE_ABSOLUTE_NV 0x855C
    #define GL_EYE_POINT_SGIS 0x81F4
    #define GL_EYE_RADIAL_NV 0x855B
    #define GL_E_TIMES_F_NV 0x8531
    #define GL_FACTOR_MAX_AMD 0x901D
    #define GL_FACTOR_MIN_AMD 0x901C
    #define GL_FAILURE_NV 0x9030
    #define GL_FALSE 0
    #define GL_FASTEST 0x1101
    #define GL_FENCE_APPLE 0x8A0B
    #define GL_FENCE_CONDITION_NV 0x84F4
    #define GL_FENCE_STATUS_NV 0x84F3
    #define GL_FETCH_PER_SAMPLE_ARM 0x8F65
    #define GL_FIELDS_NV 0x8E27
    #define GL_FIELD_LOWER_NV 0x9023
    #define GL_FIELD_UPPER_NV 0x9022
    #define GL_FILE_NAME_NV 0x9074
    #define GL_FILL 0x1B02
    #define GL_FILL_NV 0x1B02
    #define GL_FILL_RECTANGLE_NV 0x933C
    #define GL_FILTER 0x829A
    #define GL_FILTER4_SGIS 0x8146
    #define GL_FIRST_TO_REST_NV 0x90AF
    #define GL_FIRST_VERTEX_CONVENTION 0x8E4D
    #define GL_FIRST_VERTEX_CONVENTION_EXT 0x8E4D
    #define GL_FIRST_VERTEX_CONVENTION_OES 0x8E4D
    #define GL_FIXED 0x140C
    #define GL_FIXED_OES 0x140C
    #define GL_FIXED_ONLY 0x891D
    #define GL_FIXED_ONLY_ARB 0x891D
    #define GL_FLOAT 0x1406
    #define GL_FLOAT16_MAT2_AMD 0x91C5
    #define GL_FLOAT16_MAT2x3_AMD 0x91C8
    #define GL_FLOAT16_MAT2x4_AMD 0x91C9
    #define GL_FLOAT16_MAT3_AMD 0x91C6
    #define GL_FLOAT16_MAT3x2_AMD 0x91CA
    #define GL_FLOAT16_MAT3x4_AMD 0x91CB
    #define GL_FLOAT16_MAT4_AMD 0x91C7
    #define GL_FLOAT16_MAT4x2_AMD 0x91CC
    #define GL_FLOAT16_MAT4x3_AMD 0x91CD
    #define GL_FLOAT16_NV 0x8FF8
    #define GL_FLOAT16_VEC2_NV 0x8FF9
    #define GL_FLOAT16_VEC3_NV 0x8FFA
    #define GL_FLOAT16_VEC4_NV 0x8FFB
    #define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
    #define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV 0x8DAD
    #define GL_FLOAT_CLEAR_COLOR_VALUE_NV 0x888D
    #define GL_FLOAT_MAT2 0x8B5A
    #define GL_FLOAT_MAT2_ARB 0x8B5A
    #define GL_FLOAT_MAT2x3 0x8B65
    #define GL_FLOAT_MAT2x3_NV 0x8B65
    #define GL_FLOAT_MAT2x4 0x8B66
    #define GL_FLOAT_MAT2x4_NV 0x8B66
    #define GL_FLOAT_MAT3 0x8B5B
    #define GL_FLOAT_MAT3_ARB 0x8B5B
    #define GL_FLOAT_MAT3x2 0x8B67
    #define GL_FLOAT_MAT3x2_NV 0x8B67
    #define GL_FLOAT_MAT3x4 0x8B68
    #define GL_FLOAT_MAT3x4_NV 0x8B68
    #define GL_FLOAT_MAT4 0x8B5C
    #define GL_FLOAT_MAT4_ARB 0x8B5C
    #define GL_FLOAT_MAT4x2 0x8B69
    #define GL_FLOAT_MAT4x2_NV 0x8B69
    #define GL_FLOAT_MAT4x3 0x8B6A
    #define GL_FLOAT_MAT4x3_NV 0x8B6A
    #define GL_FLOAT_R16_NV 0x8884
    #define GL_FLOAT_R32_NV 0x8885
    #define GL_FLOAT_RG16_NV 0x8886
    #define GL_FLOAT_RG32_NV 0x8887
    #define GL_FLOAT_RGB16_NV 0x8888
    #define GL_FLOAT_RGB32_NV 0x8889
    #define GL_FLOAT_RGBA16_NV 0x888A
    #define GL_FLOAT_RGBA32_NV 0x888B
    #define GL_FLOAT_RGBA_MODE_NV 0x888E
    #define GL_FLOAT_RGBA_NV 0x8883
    #define GL_FLOAT_RGB_NV 0x8882
    #define GL_FLOAT_RG_NV 0x8881
    #define GL_FLOAT_R_NV 0x8880
    #define GL_FLOAT_VEC2 0x8B50
    #define GL_FLOAT_VEC2_ARB 0x8B50
    #define GL_FLOAT_VEC3 0x8B51
    #define GL_FLOAT_VEC3_ARB 0x8B51
    #define GL_FLOAT_VEC4 0x8B52
    #define GL_FLOAT_VEC4_ARB 0x8B52
    #define GL_FOG_COORD 0x8451
    #define GL_FOG_COORDINATE 0x8451
    #define GL_FOG_COORDINATE_ARRAY 0x8457
    #define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
    #define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB 0x889D
    #define GL_FOG_COORDINATE_ARRAY_EXT 0x8457
    #define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
    #define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
    #define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
    #define GL_FOG_COORDINATE_ARRAY_POINTER_EXT 0x8456
    #define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
    #define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 0x8455
    #define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
    #define GL_FOG_COORDINATE_ARRAY_TYPE_EXT 0x8454
    #define GL_FOG_COORDINATE_EXT 0x8451
    #define GL_FOG_COORDINATE_SOURCE 0x8450
    #define GL_FOG_COORDINATE_SOURCE_EXT 0x8450
    #define GL_FOG_COORD_ARRAY 0x8457
    #define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
    #define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
    #define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
    #define GL_FOG_COORD_ARRAY_POINTER 0x8456
    #define GL_FOG_COORD_ARRAY_STRIDE 0x8455
    #define GL_FOG_COORD_ARRAY_TYPE 0x8454
    #define GL_FOG_COORD_SRC 0x8450
    #define GL_FOG_DISTANCE_MODE_NV 0x855A
    #define GL_FOG_FUNC_POINTS_SGIS 0x812B
    #define GL_FOG_FUNC_SGIS 0x812A
    #define GL_FOG_OFFSET_SGIX 0x8198
    #define GL_FOG_OFFSET_VALUE_SGIX 0x8199
    #define GL_FOG_SPECULAR_TEXTURE_WIN 0x80EC
    #define GL_FONT_ASCENDER_BIT_NV 0x00200000
    #define GL_FONT_DESCENDER_BIT_NV 0x00400000
    #define GL_FONT_GLYPHS_AVAILABLE_NV 0x9368
    #define GL_FONT_HAS_KERNING_BIT_NV 0x10000000
    #define GL_FONT_HEIGHT_BIT_NV 0x00800000
    #define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV 0x02000000
    #define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV 0x01000000
    #define GL_FONT_NUM_GLYPH_INDICES_BIT_NV 0x20000000
    #define GL_FONT_TARGET_UNAVAILABLE_NV 0x9369
    #define GL_FONT_UNAVAILABLE_NV 0x936A
    #define GL_FONT_UNDERLINE_POSITION_BIT_NV 0x04000000
    #define GL_FONT_UNDERLINE_THICKNESS_BIT_NV 0x08000000
    #define GL_FONT_UNINTELLIGIBLE_NV 0x936B
    #define GL_FONT_UNITS_PER_EM_BIT_NV 0x00100000
    #define GL_FONT_X_MAX_BOUNDS_BIT_NV 0x00040000
    #define GL_FONT_X_MIN_BOUNDS_BIT_NV 0x00010000
    #define GL_FONT_Y_MAX_BOUNDS_BIT_NV 0x00080000
    #define GL_FONT_Y_MIN_BOUNDS_BIT_NV 0x00020000
    #define GL_FORCE_BLUE_TO_ONE_NV 0x8860
    #define GL_FORMAT_SUBSAMPLE_244_244_OML 0x8983
    #define GL_FORMAT_SUBSAMPLE_24_24_OML 0x8982
    #define GL_FOVEATION_ENABLE_BIT_QCOM 0x00000001
    #define GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM 0x00000002
    #define GL_FRACTIONAL_EVEN 0x8E7C
    #define GL_FRACTIONAL_EVEN_EXT 0x8E7C
    #define GL_FRACTIONAL_EVEN_OES 0x8E7C
    #define GL_FRACTIONAL_ODD 0x8E7B
    #define GL_FRACTIONAL_ODD_EXT 0x8E7B
    #define GL_FRACTIONAL_ODD_OES 0x8E7B
    #define GL_FRAGMENT_COLOR_EXT 0x834C
    #define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX 0x8402
    #define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX 0x8403
    #define GL_FRAGMENT_COLOR_MATERIAL_SGIX 0x8401
    #define GL_FRAGMENT_COVERAGE_COLOR_NV 0x92DE
    #define GL_FRAGMENT_COVERAGE_TO_COLOR_NV 0x92DD
    #define GL_FRAGMENT_DEPTH 0x8452
    #define GL_FRAGMENT_DEPTH_EXT 0x8452
    #define GL_FRAGMENT_INPUT_NV 0x936D
    #define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
    #define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES 0x8E5D
    #define GL_FRAGMENT_LIGHT0_SGIX 0x840C
    #define GL_FRAGMENT_LIGHT1_SGIX 0x840D
    #define GL_FRAGMENT_LIGHT2_SGIX 0x840E
    #define GL_FRAGMENT_LIGHT3_SGIX 0x840F
    #define GL_FRAGMENT_LIGHT4_SGIX 0x8410
    #define GL_FRAGMENT_LIGHT5_SGIX 0x8411
    #define GL_FRAGMENT_LIGHT6_SGIX 0x8412
    #define GL_FRAGMENT_LIGHT7_SGIX 0x8413
    #define GL_FRAGMENT_LIGHTING_SGIX 0x8400
    #define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX 0x840A
    #define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX 0x8408
    #define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX 0x840B
    #define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX 0x8409
    #define GL_FRAGMENT_MATERIAL_EXT 0x8349
    #define GL_FRAGMENT_NORMAL_EXT 0x834A
    #define GL_FRAGMENT_PROGRAM_ARB 0x8804
    #define GL_FRAGMENT_PROGRAM_BINDING_NV 0x8873
    #define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV 0x8E5D
    #define GL_FRAGMENT_PROGRAM_NV 0x8870
    #define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV 0x8DA4
    #define GL_FRAGMENT_SHADER 0x8B30
    #define GL_FRAGMENT_SHADER_ARB 0x8B30
    #define GL_FRAGMENT_SHADER_ATI 0x8920
    #define GL_FRAGMENT_SHADER_BIT 0x00000002
    #define GL_FRAGMENT_SHADER_BIT_EXT 0x00000002
    #define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
    #define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB 0x8B8B
    #define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES 0x8B8B
    #define GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT 0x8A52
    #define GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM 0x8F66
    #define GL_FRAGMENT_SHADER_INVOCATIONS_ARB 0x82F4
    #define GL_FRAGMENT_SUBROUTINE 0x92EC
    #define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
    #define GL_FRAGMENT_TEXTURE 0x829F
    #define GL_FRAMEBUFFER 0x8D40
    #define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
    #define GL_FRAMEBUFFER_ATTACHMENT_ANGLE 0x93A3
    #define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
    #define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
    #define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT 0x8210
    #define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
    #define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT 0x8211
    #define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
    #define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
    #define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
    #define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
    #define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 0x8DA7
    #define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES 0x8DA7
    #define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
    #define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
    #define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
    #define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
    #define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
    #define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
    #define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
    #define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES 0x8CD4
    #define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR 0x9632
    #define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
    #define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
    #define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
    #define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT 0x8CD4
    #define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
    #define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
    #define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR 0x9630
    #define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT 0x8D6C
    #define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG 0x913F
    #define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
    #define GL_FRAMEBUFFER_BARRIER_BIT_EXT 0x00000400
    #define GL_FRAMEBUFFER_BINDING 0x8CA6
    #define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
    #define GL_FRAMEBUFFER_BLEND 0x828B
    #define GL_FRAMEBUFFER_COMPLETE 0x8CD5
    #define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
    #define GL_FRAMEBUFFER_DEFAULT 0x8218
    #define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
    #define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
    #define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
    #define GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT 0x9312
    #define GL_FRAMEBUFFER_DEFAULT_LAYERS_OES 0x9312
    #define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
    #define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
    #define GL_FRAMEBUFFER_EXT 0x8D40
    #define GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM 0x96A2
    #define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
    #define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
    #define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS 0x8CD9
    #define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
    #define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
    #define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
    #define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
    #define GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT 0x9652
    #define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
    #define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT 0x8DA9
    #define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
    #define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
    #define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 0x8DA8
    #define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES 0x8DA8
    #define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
    #define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
    #define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
    #define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG 0x913C
    #define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE 0x8D56
    #define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE 0x8D56
    #define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT 0x8D56
    #define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG 0x9134
    #define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV 0x8D56
    #define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
    #define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
    #define GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR 0x9633
    #define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB 0x9342
    #define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV 0x9342
    #define GL_FRAMEBUFFER_RENDERABLE 0x8289
    #define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
    #define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB 0x9343
    #define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV 0x9343
    #define GL_FRAMEBUFFER_SRGB 0x8DB9
    #define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT 0x8DBA
    #define GL_FRAMEBUFFER_SRGB_EXT 0x8DB9
    #define GL_FRAMEBUFFER_UNDEFINED 0x8219
    #define GL_FRAMEBUFFER_UNDEFINED_OES 0x8219
    #define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
    #define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
    #define GL_FRAMEZOOM_FACTOR_SGIX 0x818C
    #define GL_FRAMEZOOM_SGIX 0x818B
    #define GL_FRAME_NV 0x8E26
    #define GL_FRONT 0x0404
    #define GL_FRONT_AND_BACK 0x0408
    #define GL_FRONT_FACE 0x0B46
    #define GL_FRONT_FACE_COMMAND_NV 0x0012
    #define GL_FRONT_LEFT 0x0400
    #define GL_FRONT_RIGHT 0x0401
    #define GL_FULL_RANGE_EXT 0x87E1
    #define GL_FULL_STIPPLE_HINT_PGI 0x1A219
    #define GL_FULL_SUPPORT 0x82B7
    #define GL_FUNC_ADD 0x8006
    #define GL_FUNC_ADD_EXT 0x8006
    #define GL_FUNC_REVERSE_SUBTRACT 0x800B
    #define GL_FUNC_REVERSE_SUBTRACT_EXT 0x800B
    #define GL_FUNC_SUBTRACT 0x800A
    #define GL_FUNC_SUBTRACT_EXT 0x800A
    #define GL_GCCSO_SHADER_BINARY_FJ 0x9260
    #define GL_GENERATE_MIPMAP 0x8191
    #define GL_GENERATE_MIPMAP_HINT 0x8192
    #define GL_GENERATE_MIPMAP_HINT_SGIS 0x8192
    #define GL_GENERATE_MIPMAP_SGIS 0x8191
    #define GL_GENERIC_ATTRIB_NV 0x8C7D
    #define GL_GEOMETRY_DEFORMATION_BIT_SGIX 0x00000002
    #define GL_GEOMETRY_DEFORMATION_SGIX 0x8194
    #define GL_GEOMETRY_INPUT_TYPE 0x8917
    #define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
    #define GL_GEOMETRY_INPUT_TYPE_EXT 0x8DDB
    #define GL_GEOMETRY_LINKED_INPUT_TYPE_EXT 0x8917
    #define GL_GEOMETRY_LINKED_INPUT_TYPE_OES 0x8917
    #define GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT 0x8918
    #define GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES 0x8918
    #define GL_GEOMETRY_LINKED_VERTICES_OUT_EXT 0x8916
    #define GL_GEOMETRY_LINKED_VERTICES_OUT_OES 0x8916
    #define GL_GEOMETRY_OUTPUT_TYPE 0x8918
    #define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
    #define GL_GEOMETRY_OUTPUT_TYPE_EXT 0x8DDC
    #define GL_GEOMETRY_PROGRAM_NV 0x8C26
    #define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV 0x8DA3
    #define GL_GEOMETRY_SHADER 0x8DD9
    #define GL_GEOMETRY_SHADER_ARB 0x8DD9
    #define GL_GEOMETRY_SHADER_BIT 0x00000004
    #define GL_GEOMETRY_SHADER_BIT_EXT 0x00000004
    #define GL_GEOMETRY_SHADER_BIT_OES 0x00000004
    #define GL_GEOMETRY_SHADER_EXT 0x8DD9
    #define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
    #define GL_GEOMETRY_SHADER_INVOCATIONS_EXT 0x887F
    #define GL_GEOMETRY_SHADER_INVOCATIONS_OES 0x887F
    #define GL_GEOMETRY_SHADER_OES 0x8DD9
    #define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB 0x82F3
    #define GL_GEOMETRY_SUBROUTINE 0x92EB
    #define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
    #define GL_GEOMETRY_TEXTURE 0x829E
    #define GL_GEOMETRY_VERTICES_OUT 0x8916
    #define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
    #define GL_GEOMETRY_VERTICES_OUT_EXT 0x8DDA
    #define GL_GEQUAL 0x0206
    #define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
    #define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
    #define GL_GLOBAL_ALPHA_FACTOR_SUN 0x81DA
    #define GL_GLOBAL_ALPHA_SUN 0x81D9
    #define GL_GLYPH_HAS_KERNING_BIT_NV 0x100
    #define GL_GLYPH_HEIGHT_BIT_NV 0x02
    #define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV 0x10
    #define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV 0x04
    #define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV 0x08
    #define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV 0x80
    #define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV 0x20
    #define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV 0x40
    #define GL_GLYPH_WIDTH_BIT_NV 0x01
    #define GL_GPU_ADDRESS_NV 0x8F34
    #define GL_GPU_DISJOINT_EXT 0x8FBB
    #define GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX 0x9049
    #define GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX 0x9047
    #define GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX 0x904B
    #define GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX 0x904A
    #define GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX 0x9048
    #define GL_GPU_OPTIMIZED_QCOM 0x8FB2
    #define GL_GREATER 0x0204
    #define GL_GREEN 0x1904
    #define GL_GREEN_BITS 0x0D53
    #define GL_GREEN_BIT_ATI 0x00000002
    #define GL_GREEN_INTEGER 0x8D95
    #define GL_GREEN_INTEGER_EXT 0x8D95
    #define GL_GREEN_MAX_CLAMP_INGR 0x8565
    #define GL_GREEN_MIN_CLAMP_INGR 0x8561
    #define GL_GREEN_NV 0x1904
    #define GL_GUILTY_CONTEXT_RESET 0x8253
    #define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
    #define GL_GUILTY_CONTEXT_RESET_EXT 0x8253
    #define GL_GUILTY_CONTEXT_RESET_KHR 0x8253
    #define GL_HALF_APPLE 0x140B
    #define GL_HALF_BIAS_NEGATE_NV 0x853B
    #define GL_HALF_BIAS_NORMAL_NV 0x853A
    #define GL_HALF_BIT_ATI 0x00000008
    #define GL_HALF_FLOAT 0x140B
    #define GL_HALF_FLOAT_ARB 0x140B
    #define GL_HALF_FLOAT_NV 0x140B
    #define GL_HALF_FLOAT_OES 0x8D61
    #define GL_HANDLE_TYPE_D3D11_IMAGE_EXT 0x958B
    #define GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT 0x958C
    #define GL_HANDLE_TYPE_D3D12_FENCE_EXT 0x9594
    #define GL_HANDLE_TYPE_D3D12_RESOURCE_EXT 0x958A
    #define GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT 0x9589
    #define GL_HANDLE_TYPE_OPAQUE_FD_EXT 0x9586
    #define GL_HANDLE_TYPE_OPAQUE_WIN32_EXT 0x9587
    #define GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT 0x9588
    #define GL_HARDLIGHT 0x929B
    #define GL_HARDLIGHT_KHR 0x929B
    #define GL_HARDLIGHT_NV 0x929B
    #define GL_HARDMIX_NV 0x92A9
    #define GL_HIGH_FLOAT 0x8DF2
    #define GL_HIGH_INT 0x8DF5
    #define GL_HILO16_NV 0x86F8
    #define GL_HILO8_NV 0x885E
    #define GL_HILO_NV 0x86F4
    #define GL_HISTOGRAM 0x8024
    #define GL_HISTOGRAM_ALPHA_SIZE 0x802B
    #define GL_HISTOGRAM_ALPHA_SIZE_EXT 0x802B
    #define GL_HISTOGRAM_BLUE_SIZE 0x802A
    #define GL_HISTOGRAM_BLUE_SIZE_EXT 0x802A
    #define GL_HISTOGRAM_EXT 0x8024
    #define GL_HISTOGRAM_FORMAT 0x8027
    #define GL_HISTOGRAM_FORMAT_EXT 0x8027
    #define GL_HISTOGRAM_GREEN_SIZE 0x8029
    #define GL_HISTOGRAM_GREEN_SIZE_EXT 0x8029
    #define GL_HISTOGRAM_LUMINANCE_SIZE 0x802C
    #define GL_HISTOGRAM_LUMINANCE_SIZE_EXT 0x802C
    #define GL_HISTOGRAM_RED_SIZE 0x8028
    #define GL_HISTOGRAM_RED_SIZE_EXT 0x8028
    #define GL_HISTOGRAM_SINK 0x802D
    #define GL_HISTOGRAM_SINK_EXT 0x802D
    #define GL_HISTOGRAM_WIDTH 0x8026
    #define GL_HISTOGRAM_WIDTH_EXT 0x8026
    #define GL_HI_BIAS_NV 0x8714
    #define GL_HI_SCALE_NV 0x870E
    #define GL_HORIZONTAL_LINE_TO_NV 0x06
    #define GL_HSL_COLOR 0x92AF
    #define GL_HSL_COLOR_KHR 0x92AF
    #define GL_HSL_COLOR_NV 0x92AF
    #define GL_HSL_HUE 0x92AD
    #define GL_HSL_HUE_KHR 0x92AD
    #define GL_HSL_HUE_NV 0x92AD
    #define GL_HSL_LUMINOSITY 0x92B0
    #define GL_HSL_LUMINOSITY_KHR 0x92B0
    #define GL_HSL_LUMINOSITY_NV 0x92B0
    #define GL_HSL_SATURATION 0x92AE
    #define GL_HSL_SATURATION_KHR 0x92AE
    #define GL_HSL_SATURATION_NV 0x92AE
    #define GL_IDENTITY_NV 0x862A
    #define GL_IGNORE_BORDER_HP 0x8150
    #define GL_IMAGE_1D 0x904C
    #define GL_IMAGE_1D_ARRAY 0x9052
    #define GL_IMAGE_1D_ARRAY_EXT 0x9052
    #define GL_IMAGE_1D_EXT 0x904C
    #define GL_IMAGE_2D 0x904D
    #define GL_IMAGE_2D_ARRAY 0x9053
    #define GL_IMAGE_2D_ARRAY_EXT 0x9053
    #define GL_IMAGE_2D_EXT 0x904D
    #define GL_IMAGE_2D_MULTISAMPLE 0x9055
    #define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
    #define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9056
    #define GL_IMAGE_2D_MULTISAMPLE_EXT 0x9055
    #define GL_IMAGE_2D_RECT 0x904F
    #define GL_IMAGE_2D_RECT_EXT 0x904F
    #define GL_IMAGE_3D 0x904E
    #define GL_IMAGE_3D_EXT 0x904E
    #define GL_IMAGE_BINDING_ACCESS 0x8F3E
    #define GL_IMAGE_BINDING_ACCESS_EXT 0x8F3E
    #define GL_IMAGE_BINDING_FORMAT 0x906E
    #define GL_IMAGE_BINDING_FORMAT_EXT 0x906E
    #define GL_IMAGE_BINDING_LAYER 0x8F3D
    #define GL_IMAGE_BINDING_LAYERED 0x8F3C
    #define GL_IMAGE_BINDING_LAYERED_EXT 0x8F3C
    #define GL_IMAGE_BINDING_LAYER_EXT 0x8F3D
    #define GL_IMAGE_BINDING_LEVEL 0x8F3B
    #define GL_IMAGE_BINDING_LEVEL_EXT 0x8F3B
    #define GL_IMAGE_BINDING_NAME 0x8F3A
    #define GL_IMAGE_BINDING_NAME_EXT 0x8F3A
    #define GL_IMAGE_BUFFER 0x9051
    #define GL_IMAGE_BUFFER_EXT 0x9051
    #define GL_IMAGE_BUFFER_OES 0x9051
    #define GL_IMAGE_CLASS_10_10_10_2 0x82C3
    #define GL_IMAGE_CLASS_11_11_10 0x82C2
    #define GL_IMAGE_CLASS_1_X_16 0x82BE
    #define GL_IMAGE_CLASS_1_X_32 0x82BB
    #define GL_IMAGE_CLASS_1_X_8 0x82C1
    #define GL_IMAGE_CLASS_2_X_16 0x82BD
    #define GL_IMAGE_CLASS_2_X_32 0x82BA
    #define GL_IMAGE_CLASS_2_X_8 0x82C0
    #define GL_IMAGE_CLASS_4_X_16 0x82BC
    #define GL_IMAGE_CLASS_4_X_32 0x82B9
    #define GL_IMAGE_CLASS_4_X_8 0x82BF
    #define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
    #define GL_IMAGE_CUBE 0x9050
    #define GL_IMAGE_CUBE_EXT 0x9050
    #define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
    #define GL_IMAGE_CUBE_MAP_ARRAY_EXT 0x9054
    #define GL_IMAGE_CUBE_MAP_ARRAY_OES 0x9054
    #define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
    #define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
    #define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
    #define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
    #define GL_IMAGE_MAG_FILTER_HP 0x815C
    #define GL_IMAGE_MIN_FILTER_HP 0x815D
    #define GL_IMAGE_PIXEL_FORMAT 0x82A9
    #define GL_IMAGE_PIXEL_TYPE 0x82AA
    #define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
    #define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
    #define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
    #define GL_IMAGE_SCALE_X_HP 0x8155
    #define GL_IMAGE_SCALE_Y_HP 0x8156
    #define GL_IMAGE_TEXEL_SIZE 0x82A7
    #define GL_IMAGE_TRANSFORM_2D_HP 0x8161
    #define GL_IMAGE_TRANSLATE_X_HP 0x8157
    #define GL_IMAGE_TRANSLATE_Y_HP 0x8158
    #define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
    #define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES 0x8B9B
    #define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
    #define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES 0x8B9A
    #define GL_INCLUSIVE_EXT 0x8F10
    #define GL_INCR 0x1E02
    #define GL_INCR_WRAP 0x8507
    #define GL_INCR_WRAP_EXT 0x8507
    #define GL_INDEX 0x8222
    #define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
    #define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
    #define GL_INDEX_ARRAY_BUFFER_BINDING_ARB 0x8899
    #define GL_INDEX_ARRAY_COUNT_EXT 0x8087
    #define GL_INDEX_ARRAY_EXT 0x8077
    #define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
    #define GL_INDEX_ARRAY_LIST_IBM 103073
    #define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
    #define GL_INDEX_ARRAY_POINTER_EXT 0x8091
    #define GL_INDEX_ARRAY_STRIDE_EXT 0x8086
    #define GL_INDEX_ARRAY_TYPE_EXT 0x8085
    #define GL_INDEX_BIT_PGI 0x00080000
    #define GL_INDEX_MATERIAL_EXT 0x81B8
    #define GL_INDEX_MATERIAL_FACE_EXT 0x81BA
    #define GL_INDEX_MATERIAL_PARAMETER_EXT 0x81B9
    #define GL_INDEX_TEST_EXT 0x81B5
    #define GL_INDEX_TEST_FUNC_EXT 0x81B6
    #define GL_INDEX_TEST_REF_EXT 0x81B7
    #define GL_INFO_LOG_LENGTH 0x8B84
    #define GL_INNOCENT_CONTEXT_RESET 0x8254
    #define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
    #define GL_INNOCENT_CONTEXT_RESET_EXT 0x8254
    #define GL_INNOCENT_CONTEXT_RESET_KHR 0x8254
    #define GL_INSTRUMENT_BUFFER_POINTER_SGIX 0x8180
    #define GL_INSTRUMENT_MEASUREMENTS_SGIX 0x8181
    #define GL_INT 0x1404
    #define GL_INT16_NV 0x8FE4
    #define GL_INT16_VEC2_NV 0x8FE5
    #define GL_INT16_VEC3_NV 0x8FE6
    #define GL_INT16_VEC4_NV 0x8FE7
    #define GL_INT64_ARB 0x140E
    #define GL_INT64_NV 0x140E
    #define GL_INT64_VEC2_ARB 0x8FE9
    #define GL_INT64_VEC2_NV 0x8FE9
    #define GL_INT64_VEC3_ARB 0x8FEA
    #define GL_INT64_VEC3_NV 0x8FEA
    #define GL_INT64_VEC4_ARB 0x8FEB
    #define GL_INT64_VEC4_NV 0x8FEB
    #define GL_INT8_NV 0x8FE0
    #define GL_INT8_VEC2_NV 0x8FE1
    #define GL_INT8_VEC3_NV 0x8FE2
    #define GL_INT8_VEC4_NV 0x8FE3
    #define GL_INTENSITY12_EXT 0x804C
    #define GL_INTENSITY16F_ARB 0x881D
    #define GL_INTENSITY16I_EXT 0x8D8B
    #define GL_INTENSITY16UI_EXT 0x8D79
    #define GL_INTENSITY16_EXT 0x804D
    #define GL_INTENSITY16_SNORM 0x901B
    #define GL_INTENSITY32F_ARB 0x8817
    #define GL_INTENSITY32I_EXT 0x8D85
    #define GL_INTENSITY32UI_EXT 0x8D73
    #define GL_INTENSITY4_EXT 0x804A
    #define GL_INTENSITY8I_EXT 0x8D91
    #define GL_INTENSITY8UI_EXT 0x8D7F
    #define GL_INTENSITY8_EXT 0x804B
    #define GL_INTENSITY8_SNORM 0x9017
    #define GL_INTENSITY_EXT 0x8049
    #define GL_INTENSITY_FLOAT16_APPLE 0x881D
    #define GL_INTENSITY_FLOAT16_ATI 0x881D
    #define GL_INTENSITY_FLOAT32_APPLE 0x8817
    #define GL_INTENSITY_FLOAT32_ATI 0x8817
    #define GL_INTENSITY_SNORM 0x9013
    #define GL_INTERLACE_OML 0x8980
    #define GL_INTERLACE_READ_INGR 0x8568
    #define GL_INTERLACE_READ_OML 0x8981
    #define GL_INTERLACE_SGIX 0x8094
    #define GL_INTERLEAVED_ATTRIBS 0x8C8C
    #define GL_INTERLEAVED_ATTRIBS_EXT 0x8C8C
    #define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
    #define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
    #define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
    #define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
    #define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
    #define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
    #define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
    #define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
    #define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
    #define GL_INTERNALFORMAT_PREFERRED 0x8270
    #define GL_INTERNALFORMAT_RED_SIZE 0x8271
    #define GL_INTERNALFORMAT_RED_TYPE 0x8278
    #define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
    #define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
    #define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
    #define GL_INTERNALFORMAT_SUPPORTED 0x826F
    #define GL_INTERPOLATE 0x8575
    #define GL_INTERPOLATE_ARB 0x8575
    #define GL_INTERPOLATE_EXT 0x8575
    #define GL_INT_10_10_10_2_OES 0x8DF7
    #define GL_INT_2_10_10_10_REV 0x8D9F
    #define GL_INT_IMAGE_1D 0x9057
    #define GL_INT_IMAGE_1D_ARRAY 0x905D
    #define GL_INT_IMAGE_1D_ARRAY_EXT 0x905D
    #define GL_INT_IMAGE_1D_EXT 0x9057
    #define GL_INT_IMAGE_2D 0x9058
    #define GL_INT_IMAGE_2D_ARRAY 0x905E
    #define GL_INT_IMAGE_2D_ARRAY_EXT 0x905E
    #define GL_INT_IMAGE_2D_EXT 0x9058
    #define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
    #define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
    #define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9061
    #define GL_INT_IMAGE_2D_MULTISAMPLE_EXT 0x9060
    #define GL_INT_IMAGE_2D_RECT 0x905A
    #define GL_INT_IMAGE_2D_RECT_EXT 0x905A
    #define GL_INT_IMAGE_3D 0x9059
    #define GL_INT_IMAGE_3D_EXT 0x9059
    #define GL_INT_IMAGE_BUFFER 0x905C
    #define GL_INT_IMAGE_BUFFER_EXT 0x905C
    #define GL_INT_IMAGE_BUFFER_OES 0x905C
    #define GL_INT_IMAGE_CUBE 0x905B
    #define GL_INT_IMAGE_CUBE_EXT 0x905B
    #define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
    #define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x905F
    #define GL_INT_IMAGE_CUBE_MAP_ARRAY_OES 0x905F
    #define GL_INT_SAMPLER_1D 0x8DC9
    #define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
    #define GL_INT_SAMPLER_1D_ARRAY_EXT 0x8DCE
    #define GL_INT_SAMPLER_1D_EXT 0x8DC9
    #define GL_INT_SAMPLER_2D 0x8DCA
    #define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
    #define GL_INT_SAMPLER_2D_ARRAY_EXT 0x8DCF
    #define GL_INT_SAMPLER_2D_EXT 0x8DCA
    #define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
    #define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
    #define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910C
    #define GL_INT_SAMPLER_2D_RECT 0x8DCD
    #define GL_INT_SAMPLER_2D_RECT_EXT 0x8DCD
    #define GL_INT_SAMPLER_3D 0x8DCB
    #define GL_INT_SAMPLER_3D_EXT 0x8DCB
    #define GL_INT_SAMPLER_BUFFER 0x8DD0
    #define GL_INT_SAMPLER_BUFFER_AMD 0x9002
    #define GL_INT_SAMPLER_BUFFER_EXT 0x8DD0
    #define GL_INT_SAMPLER_BUFFER_OES 0x8DD0
    #define GL_INT_SAMPLER_CUBE 0x8DCC
    #define GL_INT_SAMPLER_CUBE_EXT 0x8DCC
    #define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
    #define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900E
    #define GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT 0x900E
    #define GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES 0x900E
    #define GL_INT_SAMPLER_RENDERBUFFER_NV 0x8E57
    #define GL_INT_VEC2 0x8B53
    #define GL_INT_VEC2_ARB 0x8B53
    #define GL_INT_VEC3 0x8B54
    #define GL_INT_VEC3_ARB 0x8B54
    #define GL_INT_VEC4 0x8B55
    #define GL_INT_VEC4_ARB 0x8B55
    #define GL_INVALID_ENUM 0x0500
    #define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
    #define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
    #define GL_INVALID_INDEX 0xFFFFFFFFu
    #define GL_INVALID_OPERATION 0x0502
    #define GL_INVALID_VALUE 0x0501
    #define GL_INVARIANT_DATATYPE_EXT 0x87EB
    #define GL_INVARIANT_EXT 0x87C2
    #define GL_INVARIANT_VALUE_EXT 0x87EA
    #define GL_INVERSE_NV 0x862B
    #define GL_INVERSE_TRANSPOSE_NV 0x862D
    #define GL_INVERT 0x150A
    #define GL_INVERTED_SCREEN_W_REND 0x8491
    #define GL_INVERT_OVG_NV 0x92B4
    #define GL_INVERT_RGB_NV 0x92A3
    #define GL_IR_INSTRUMENT1_SGIX 0x817F
    #define GL_ISOLINES 0x8E7A
    #define GL_ISOLINES_EXT 0x8E7A
    #define GL_ISOLINES_OES 0x8E7A
    #define GL_IS_PER_PATCH 0x92E7
    #define GL_IS_PER_PATCH_EXT 0x92E7
    #define GL_IS_PER_PATCH_OES 0x92E7
    #define GL_IS_ROW_MAJOR 0x9300
    #define GL_ITALIC_BIT_NV 0x02
    #define GL_IUI_N3F_V2F_EXT 0x81AF
    #define GL_IUI_N3F_V3F_EXT 0x81B0
    #define GL_IUI_V2F_EXT 0x81AD
    #define GL_IUI_V3F_EXT 0x81AE
    #define GL_KEEP 0x1E00
    #define GL_KTX_BACK_REGION 0x1
    #define GL_KTX_FRONT_REGION 0x0
    #define GL_KTX_STENCIL_REGION 0x3
    #define GL_KTX_Z_REGION 0x2
    #define GL_LARGE_CCW_ARC_TO_NV 0x16
    #define GL_LARGE_CW_ARC_TO_NV 0x18
    #define GL_LAST_VERTEX_CONVENTION 0x8E4E
    #define GL_LAST_VERTEX_CONVENTION_EXT 0x8E4E
    #define GL_LAST_VERTEX_CONVENTION_OES 0x8E4E
    #define GL_LAST_VIDEO_CAPTURE_STATUS_NV 0x9027
    #define GL_LAYER_NV 0x8DAA
    #define GL_LAYER_PROVOKING_VERTEX 0x825E
    #define GL_LAYER_PROVOKING_VERTEX_EXT 0x825E
    #define GL_LAYER_PROVOKING_VERTEX_OES 0x825E
    #define GL_LAYOUT_COLOR_ATTACHMENT_EXT 0x958E
    #define GL_LAYOUT_DEFAULT_INTEL 0
    #define GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT 0x958F
    #define GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT 0x9590
    #define GL_LAYOUT_GENERAL_EXT 0x958D
    #define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL 2
    #define GL_LAYOUT_LINEAR_INTEL 1
    #define GL_LAYOUT_SHADER_READ_ONLY_EXT 0x9591
    #define GL_LAYOUT_TRANSFER_DST_EXT 0x9593
    #define GL_LAYOUT_TRANSFER_SRC_EXT 0x9592
    #define GL_LEFT 0x0406
    #define GL_LEQUAL 0x0203
    #define GL_LERP_ATI 0x8969
    #define GL_LESS 0x0201
    #define GL_LGPU_SEPARATE_STORAGE_BIT_NVX 0x0800
    #define GL_LIGHTEN 0x9298
    #define GL_LIGHTEN_KHR 0x9298
    #define GL_LIGHTEN_NV 0x9298
    #define GL_LIGHT_ENV_MODE_SGIX 0x8407
    #define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
    #define GL_LIGHT_MODEL_COLOR_CONTROL_EXT 0x81F8
    #define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 0x85B0
    #define GL_LINE 0x1B01
    #define GL_LINEAR 0x2601
    #define GL_LINEARBURN_NV 0x92A5
    #define GL_LINEARDODGE_NV 0x92A4
    #define GL_LINEARLIGHT_NV 0x92A7
    #define GL_LINEAR_CLIPMAP_LINEAR_SGIX 0x8170
    #define GL_LINEAR_CLIPMAP_NEAREST_SGIX 0x844F
    #define GL_LINEAR_DETAIL_ALPHA_SGIS 0x8098
    #define GL_LINEAR_DETAIL_COLOR_SGIS 0x8099
    #define GL_LINEAR_DETAIL_SGIS 0x8097
    #define GL_LINEAR_MIPMAP_LINEAR 0x2703
    #define GL_LINEAR_MIPMAP_NEAREST 0x2701
    #define GL_LINEAR_SHARPEN_ALPHA_SGIS 0x80AE
    #define GL_LINEAR_SHARPEN_COLOR_SGIS 0x80AF
    #define GL_LINEAR_SHARPEN_SGIS 0x80AD
    #define GL_LINEAR_TILING_EXT 0x9585
    #define GL_LINES 0x0001
    #define GL_LINES_ADJACENCY 0x000A
    #define GL_LINES_ADJACENCY_ARB 0x000A
    #define GL_LINES_ADJACENCY_EXT 0x000A
    #define GL_LINES_ADJACENCY_OES 0x000A
    #define GL_LINE_LOOP 0x0002
    #define GL_LINE_NV 0x1B01
    #define GL_LINE_SMOOTH 0x0B20
    #define GL_LINE_SMOOTH_HINT 0x0C52
    #define GL_LINE_STRIP 0x0003
    #define GL_LINE_STRIP_ADJACENCY 0x000B
    #define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
    #define GL_LINE_STRIP_ADJACENCY_EXT 0x000B
    #define GL_LINE_STRIP_ADJACENCY_OES 0x000B
    #define GL_LINE_TO_NV 0x04
    #define GL_LINE_WIDTH 0x0B21
    #define GL_LINE_WIDTH_COMMAND_NV 0x000D
    #define GL_LINE_WIDTH_GRANULARITY 0x0B23
    #define GL_LINE_WIDTH_RANGE 0x0B22
    #define GL_LINK_STATUS 0x8B82
    #define GL_LIST_PRIORITY_SGIX 0x8182
    #define GL_LOCAL_CONSTANT_DATATYPE_EXT 0x87ED
    #define GL_LOCAL_CONSTANT_EXT 0x87C3
    #define GL_LOCAL_CONSTANT_VALUE_EXT 0x87EC
    #define GL_LOCAL_EXT 0x87C4
    #define GL_LOCATION 0x930E
    #define GL_LOCATION_COMPONENT 0x934A
    #define GL_LOCATION_INDEX 0x930F
    #define GL_LOCATION_INDEX_EXT 0x930F
    #define GL_LOGIC_OP_MODE 0x0BF0
    #define GL_LOSE_CONTEXT_ON_RESET 0x8252
    #define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
    #define GL_LOSE_CONTEXT_ON_RESET_EXT 0x8252
    #define GL_LOSE_CONTEXT_ON_RESET_KHR 0x8252
    #define GL_LOWER_LEFT 0x8CA1
    #define GL_LOW_FLOAT 0x8DF0
    #define GL_LOW_INT 0x8DF3
    #define GL_LO_BIAS_NV 0x8715
    #define GL_LO_SCALE_NV 0x870F
    #define GL_LUID_SIZE_EXT 8
    #define GL_LUMINANCE 0x1909
    #define GL_LUMINANCE12_ALPHA12_EXT 0x8047
    #define GL_LUMINANCE12_ALPHA4_EXT 0x8046
    #define GL_LUMINANCE12_EXT 0x8041
    #define GL_LUMINANCE16F_ARB 0x881E
    #define GL_LUMINANCE16F_EXT 0x881E
    #define GL_LUMINANCE16I_EXT 0x8D8C
    #define GL_LUMINANCE16UI_EXT 0x8D7A
    #define GL_LUMINANCE16_ALPHA16_EXT 0x8048
    #define GL_LUMINANCE16_ALPHA16_SNORM 0x901A
    #define GL_LUMINANCE16_EXT 0x8042
    #define GL_LUMINANCE16_SNORM 0x9019
    #define GL_LUMINANCE32F_ARB 0x8818
    #define GL_LUMINANCE32F_EXT 0x8818
    #define GL_LUMINANCE32I_EXT 0x8D86
    #define GL_LUMINANCE32UI_EXT 0x8D74
    #define GL_LUMINANCE4_ALPHA4_EXT 0x8043
    #define GL_LUMINANCE4_ALPHA4_OES 0x8043
    #define GL_LUMINANCE4_EXT 0x803F
    #define GL_LUMINANCE6_ALPHA2_EXT 0x8044
    #define GL_LUMINANCE8I_EXT 0x8D92
    #define GL_LUMINANCE8UI_EXT 0x8D80
    #define GL_LUMINANCE8_ALPHA8_EXT 0x8045
    #define GL_LUMINANCE8_ALPHA8_OES 0x8045
    #define GL_LUMINANCE8_ALPHA8_SNORM 0x9016
    #define GL_LUMINANCE8_EXT 0x8040
    #define GL_LUMINANCE8_OES 0x8040
    #define GL_LUMINANCE8_SNORM 0x9015
    #define GL_LUMINANCE_ALPHA 0x190A
    #define GL_LUMINANCE_ALPHA16F_ARB 0x881F
    #define GL_LUMINANCE_ALPHA16F_EXT 0x881F
    #define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
    #define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
    #define GL_LUMINANCE_ALPHA32F_ARB 0x8819
    #define GL_LUMINANCE_ALPHA32F_EXT 0x8819
    #define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
    #define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
    #define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
    #define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
    #define GL_LUMINANCE_ALPHA_FLOAT16_APPLE 0x881F
    #define GL_LUMINANCE_ALPHA_FLOAT16_ATI 0x881F
    #define GL_LUMINANCE_ALPHA_FLOAT32_APPLE 0x8819
    #define GL_LUMINANCE_ALPHA_FLOAT32_ATI 0x8819
    #define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
    #define GL_LUMINANCE_ALPHA_SNORM 0x9012
    #define GL_LUMINANCE_FLOAT16_APPLE 0x881E
    #define GL_LUMINANCE_FLOAT16_ATI 0x881E
    #define GL_LUMINANCE_FLOAT32_APPLE 0x8818
    #define GL_LUMINANCE_FLOAT32_ATI 0x8818
    #define GL_LUMINANCE_INTEGER_EXT 0x8D9C
    #define GL_LUMINANCE_SNORM 0x9011
    #define GL_MAD_ATI 0x8968
    #define GL_MAGNITUDE_BIAS_NV 0x8718
    #define GL_MAGNITUDE_SCALE_NV 0x8712
    #define GL_MAJOR_VERSION 0x821B
    #define GL_MALI_PROGRAM_BINARY_ARM 0x8F61
    #define GL_MALI_SHADER_BINARY_ARM 0x8F60
    #define GL_MANUAL_GENERATE_MIPMAP 0x8294
    #define GL_MAP1_BINORMAL_EXT 0x8446
    #define GL_MAP1_TANGENT_EXT 0x8444
    #define GL_MAP1_VERTEX_ATTRIB0_4_NV 0x8660
    #define GL_MAP1_VERTEX_ATTRIB10_4_NV 0x866A
    #define GL_MAP1_VERTEX_ATTRIB11_4_NV 0x866B
    #define GL_MAP1_VERTEX_ATTRIB12_4_NV 0x866C
    #define GL_MAP1_VERTEX_ATTRIB13_4_NV 0x866D
    #define GL_MAP1_VERTEX_ATTRIB14_4_NV 0x866E
    #define GL_MAP1_VERTEX_ATTRIB15_4_NV 0x866F
    #define GL_MAP1_VERTEX_ATTRIB1_4_NV 0x8661
    #define GL_MAP1_VERTEX_ATTRIB2_4_NV 0x8662
    #define GL_MAP1_VERTEX_ATTRIB3_4_NV 0x8663
    #define GL_MAP1_VERTEX_ATTRIB4_4_NV 0x8664
    #define GL_MAP1_VERTEX_ATTRIB5_4_NV 0x8665
    #define GL_MAP1_VERTEX_ATTRIB6_4_NV 0x8666
    #define GL_MAP1_VERTEX_ATTRIB7_4_NV 0x8667
    #define GL_MAP1_VERTEX_ATTRIB8_4_NV 0x8668
    #define GL_MAP1_VERTEX_ATTRIB9_4_NV 0x8669
    #define GL_MAP2_BINORMAL_EXT 0x8447
    #define GL_MAP2_TANGENT_EXT 0x8445
    #define GL_MAP2_VERTEX_ATTRIB0_4_NV 0x8670
    #define GL_MAP2_VERTEX_ATTRIB10_4_NV 0x867A
    #define GL_MAP2_VERTEX_ATTRIB11_4_NV 0x867B
    #define GL_MAP2_VERTEX_ATTRIB12_4_NV 0x867C
    #define GL_MAP2_VERTEX_ATTRIB13_4_NV 0x867D
    #define GL_MAP2_VERTEX_ATTRIB14_4_NV 0x867E
    #define GL_MAP2_VERTEX_ATTRIB15_4_NV 0x867F
    #define GL_MAP2_VERTEX_ATTRIB1_4_NV 0x8671
    #define GL_MAP2_VERTEX_ATTRIB2_4_NV 0x8672
    #define GL_MAP2_VERTEX_ATTRIB3_4_NV 0x8673
    #define GL_MAP2_VERTEX_ATTRIB4_4_NV 0x8674
    #define GL_MAP2_VERTEX_ATTRIB5_4_NV 0x8675
    #define GL_MAP2_VERTEX_ATTRIB6_4_NV 0x8676
    #define GL_MAP2_VERTEX_ATTRIB7_4_NV 0x8677
    #define GL_MAP2_VERTEX_ATTRIB8_4_NV 0x8678
    #define GL_MAP2_VERTEX_ATTRIB9_4_NV 0x8679
    #define GL_MAP_ATTRIB_U_ORDER_NV 0x86C3
    #define GL_MAP_ATTRIB_V_ORDER_NV 0x86C4
    #define GL_MAP_COHERENT_BIT 0x0080
    #define GL_MAP_COHERENT_BIT_EXT 0x0080
    #define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
    #define GL_MAP_FLUSH_EXPLICIT_BIT_EXT 0x0010
    #define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
    #define GL_MAP_INVALIDATE_BUFFER_BIT_EXT 0x0008
    #define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
    #define GL_MAP_INVALIDATE_RANGE_BIT_EXT 0x0004
    #define GL_MAP_PERSISTENT_BIT 0x0040
    #define GL_MAP_PERSISTENT_BIT_EXT 0x0040
    #define GL_MAP_READ_BIT 0x0001
    #define GL_MAP_READ_BIT_EXT 0x0001
    #define GL_MAP_TESSELLATION_NV 0x86C2
    #define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
    #define GL_MAP_UNSYNCHRONIZED_BIT_EXT 0x0020
    #define GL_MAP_WRITE_BIT 0x0002
    #define GL_MAP_WRITE_BIT_EXT 0x0002
    #define GL_MATERIAL_SIDE_HINT_PGI 0x1A22C
    #define GL_MATRIX0_ARB 0x88C0
    #define GL_MATRIX0_NV 0x8630
    #define GL_MATRIX10_ARB 0x88CA
    #define GL_MATRIX11_ARB 0x88CB
    #define GL_MATRIX12_ARB 0x88CC
    #define GL_MATRIX13_ARB 0x88CD
    #define GL_MATRIX14_ARB 0x88CE
    #define GL_MATRIX15_ARB 0x88CF
    #define GL_MATRIX16_ARB 0x88D0
    #define GL_MATRIX17_ARB 0x88D1
    #define GL_MATRIX18_ARB 0x88D2
    #define GL_MATRIX19_ARB 0x88D3
    #define GL_MATRIX1_ARB 0x88C1
    #define GL_MATRIX1_NV 0x8631
    #define GL_MATRIX20_ARB 0x88D4
    #define GL_MATRIX21_ARB 0x88D5
    #define GL_MATRIX22_ARB 0x88D6
    #define GL_MATRIX23_ARB 0x88D7
    #define GL_MATRIX24_ARB 0x88D8
    #define GL_MATRIX25_ARB 0x88D9
    #define GL_MATRIX26_ARB 0x88DA
    #define GL_MATRIX27_ARB 0x88DB
    #define GL_MATRIX28_ARB 0x88DC
    #define GL_MATRIX29_ARB 0x88DD
    #define GL_MATRIX2_ARB 0x88C2
    #define GL_MATRIX2_NV 0x8632
    #define GL_MATRIX30_ARB 0x88DE
    #define GL_MATRIX31_ARB 0x88DF
    #define GL_MATRIX3_ARB 0x88C3
    #define GL_MATRIX3_NV 0x8633
    #define GL_MATRIX4_ARB 0x88C4
    #define GL_MATRIX4_NV 0x8634
    #define GL_MATRIX5_ARB 0x88C5
    #define GL_MATRIX5_NV 0x8635
    #define GL_MATRIX6_ARB 0x88C6
    #define GL_MATRIX6_NV 0x8636
    #define GL_MATRIX7_ARB 0x88C7
    #define GL_MATRIX7_NV 0x8637
    #define GL_MATRIX8_ARB 0x88C8
    #define GL_MATRIX9_ARB 0x88C9
    #define GL_MATRIX_EXT 0x87C0
    #define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
    #define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
    #define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
    #define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
    #define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
    #define GL_MATRIX_PALETTE_ARB 0x8840
    #define GL_MATRIX_STRIDE 0x92FF
    #define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI 0x00200000
    #define GL_MAT_AMBIENT_BIT_PGI 0x00100000
    #define GL_MAT_COLOR_INDEXES_BIT_PGI 0x01000000
    #define GL_MAT_DIFFUSE_BIT_PGI 0x00400000
    #define GL_MAT_EMISSION_BIT_PGI 0x00800000
    #define GL_MAT_SHININESS_BIT_PGI 0x02000000
    #define GL_MAT_SPECULAR_BIT_PGI 0x04000000
    #define GL_MAX 0x8008
    #define GL_MAX_3D_TEXTURE_SIZE 0x8073
    #define GL_MAX_3D_TEXTURE_SIZE_EXT 0x8073
    #define GL_MAX_3D_TEXTURE_SIZE_OES 0x8073
    #define GL_MAX_4D_TEXTURE_SIZE_SGIS 0x8138
    #define GL_MAX_ACTIVE_LIGHTS_SGIX 0x8405
    #define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
    #define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT 0x88FF
    #define GL_MAX_ASYNC_DRAW_PIXELS_SGIX 0x8360
    #define GL_MAX_ASYNC_HISTOGRAM_SGIX 0x832D
    #define GL_MAX_ASYNC_READ_PIXELS_SGIX 0x8361
    #define GL_MAX_ASYNC_TEX_IMAGE_SGIX 0x835F
    #define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
    #define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
    #define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
    #define GL_MAX_CLIPMAP_DEPTH_SGIX 0x8177
    #define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8178
    #define GL_MAX_CLIP_DISTANCES 0x0D32
    #define GL_MAX_CLIP_DISTANCES_APPLE 0x0D32
    #define GL_MAX_CLIP_DISTANCES_EXT 0x0D32
    #define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
    #define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
    #define GL_MAX_COLOR_ATTACHMENTS_NV 0x8CDF
    #define GL_MAX_COLOR_MATRIX_STACK_DEPTH 0x80B3
    #define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B3
    #define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
    #define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
    #define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
    #define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA
    #define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT 0x82FA
    #define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
    #define GL_MAX_COMBINED_DIMENSIONS 0x8282
    #define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
    #define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
    #define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8A32
    #define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES 0x8A32
    #define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
    #define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
    #define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT 0x8F39
    #define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
    #define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
    #define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
    #define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT 0x8E1E
    #define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES 0x8E1E
    #define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
    #define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT 0x8E1F
    #define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES 0x8E1F
    #define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
    #define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB 0x8B4D
    #define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
    #define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
    #define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
    #define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
    #define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB 0x90EB
    #define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB 0x91BF
    #define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
    #define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
    #define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
    #define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
    #define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
    #define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
    #define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB 0x9344
    #define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB 0x9345
    #define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
    #define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
    #define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
    #define GL_MAX_CONVOLUTION_HEIGHT 0x801B
    #define GL_MAX_CONVOLUTION_HEIGHT_EXT 0x801B
    #define GL_MAX_CONVOLUTION_WIDTH 0x801A
    #define GL_MAX_CONVOLUTION_WIDTH_EXT 0x801A
    #define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
    #define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB 0x851C
    #define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT 0x851C
    #define GL_MAX_CULL_DISTANCES 0x82F9
    #define GL_MAX_CULL_DISTANCES_EXT 0x82F9
    #define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
    #define GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR 0x826C
    #define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
    #define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
    #define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB 0x9144
    #define GL_MAX_DEBUG_LOGGED_MESSAGES_KHR 0x9144
    #define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
    #define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
    #define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB 0x9143
    #define GL_MAX_DEBUG_MESSAGE_LENGTH_KHR 0x9143
    #define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV 0x90D1
    #define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV 0x90D0
    #define GL_MAX_DEFORMATION_ORDER_SGIX 0x8197
    #define GL_MAX_DEPTH 0x8280
    #define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
    #define GL_MAX_DRAW_BUFFERS 0x8824
    #define GL_MAX_DRAW_BUFFERS_ARB 0x8824
    #define GL_MAX_DRAW_BUFFERS_ATI 0x8824
    #define GL_MAX_DRAW_BUFFERS_EXT 0x8824
    #define GL_MAX_DRAW_BUFFERS_NV 0x8824
    #define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
    #define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT 0x88FC
    #define GL_MAX_ELEMENTS_INDICES 0x80E9
    #define GL_MAX_ELEMENTS_INDICES_EXT 0x80E9
    #define GL_MAX_ELEMENTS_VERTICES 0x80E8
    #define GL_MAX_ELEMENTS_VERTICES_EXT 0x80E8
    #define GL_MAX_ELEMENT_INDEX 0x8D6B
    #define GL_MAX_EXT 0x8008
    #define GL_MAX_FOG_FUNC_POINTS_SGIS 0x812C
    #define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
    #define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
    #define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
    #define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
    #define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
    #define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
    #define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5C
    #define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES 0x8E5C
    #define GL_MAX_FRAGMENT_LIGHTS_SGIX 0x8404
    #define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV 0x8868
    #define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
    #define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
    #define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
    #define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB 0x8B49
    #define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
    #define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
    #define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
    #define GL_MAX_FRAMEBUFFER_LAYERS_EXT 0x9317
    #define GL_MAX_FRAMEBUFFER_LAYERS_OES 0x9317
    #define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
    #define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
    #define GL_MAX_FRAMEZOOM_FACTOR_SGIX 0x818D
    #define GL_MAX_GENERAL_COMBINERS_NV 0x854D
    #define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
    #define GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT 0x92D5
    #define GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES 0x92D5
    #define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
    #define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT 0x92CF
    #define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES 0x92CF
    #define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
    #define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
    #define GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT 0x90CD
    #define GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES 0x90CD
    #define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
    #define GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT 0x9123
    #define GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES 0x9123
    #define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
    #define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT 0x9124
    #define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES 0x9124
    #define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
    #define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
    #define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT 0x8DE0
    #define GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES 0x8DE0
    #define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV 0x8E5A
    #define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
    #define GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT 0x8E5A
    #define GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES 0x8E5A
    #define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
    #define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT 0x90D7
    #define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES 0x90D7
    #define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
    #define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
    #define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 0x8C29
    #define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES 0x8C29
    #define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
    #define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
    #define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT 0x8DE1
    #define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES 0x8DE1
    #define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
    #define GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT 0x8A2C
    #define GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES 0x8A2C
    #define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
    #define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
    #define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8DDF
    #define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES 0x8DDF
    #define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
    #define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT 0x8DDD
    #define GL_MAX_HEIGHT 0x827F
    #define GL_MAX_IMAGE_SAMPLES 0x906D
    #define GL_MAX_IMAGE_SAMPLES_EXT 0x906D
    #define GL_MAX_IMAGE_UNITS 0x8F38
    #define GL_MAX_IMAGE_UNITS_EXT 0x8F38
    #define GL_MAX_INTEGER_SAMPLES 0x9110
    #define GL_MAX_LABEL_LENGTH 0x82E8
    #define GL_MAX_LABEL_LENGTH_KHR 0x82E8
    #define GL_MAX_LAYERS 0x8281
    #define GL_MAX_LGPU_GPUS_NVX 0x92BA
    #define GL_MAX_MAP_TESSELLATION_NV 0x86D6
    #define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
    #define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV 0x8E11
    #define GL_MAX_MULTIVIEW_BUFFERS_EXT 0x90F2
    #define GL_MAX_NAME_LENGTH 0x92F6
    #define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
    #define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
    #define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CA
    #define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT 0x87CD
    #define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT 0x87CE
    #define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87CC
    #define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT 0x87CB
    #define GL_MAX_PALETTE_MATRICES_ARB 0x8842
    #define GL_MAX_PATCH_VERTICES 0x8E7D
    #define GL_MAX_PATCH_VERTICES_EXT 0x8E7D
    #define GL_MAX_PATCH_VERTICES_OES 0x8E7D
    #define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8337
    #define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F1
    #define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B1
    #define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB 0x880B
    #define GL_MAX_PROGRAM_ATTRIBS_ARB 0x88AD
    #define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV 0x8908
    #define GL_MAX_PROGRAM_CALL_DEPTH_NV 0x88F5
    #define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 0x88B5
    #define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV 0x88F4
    #define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV 0x8DA5
    #define GL_MAX_PROGRAM_GENERIC_RESULTS_NV 0x8DA6
    #define GL_MAX_PROGRAM_IF_DEPTH_NV 0x88F6
    #define GL_MAX_PROGRAM_INSTRUCTIONS_ARB 0x88A1
    #define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 0x88B4
    #define GL_MAX_PROGRAM_LOOP_COUNT_NV 0x88F8
    #define GL_MAX_PROGRAM_LOOP_DEPTH_NV 0x88F7
    #define GL_MAX_PROGRAM_MATRICES_ARB 0x862F
    #define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB 0x862E
    #define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B3
    #define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x880E
    #define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AF
    #define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A3
    #define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AB
    #define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A7
    #define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x8810
    #define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x880F
    #define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV 0x8C27
    #define GL_MAX_PROGRAM_PARAMETERS_ARB 0x88A9
    #define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV 0x8DA0
    #define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV 0x8DA1
    #define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV 0x86D8
    #define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV 0x8909
    #define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV 0x8F45
    #define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV 0x8F44
    #define GL_MAX_PROGRAM_TEMPORARIES_ARB 0x88A5
    #define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
    #define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT 0x8905
    #define GL_MAX_PROGRAM_TEXEL_OFFSET_NV 0x8905
    #define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F
    #define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
    #define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5F
    #define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5F
    #define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB 0x880D
    #define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB 0x880C
    #define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV 0x8C28
    #define GL_MAX_RASTER_SAMPLES_EXT 0x9329
    #define GL_MAX_RATIONAL_EVAL_ORDER_NV 0x86D7
    #define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
    #define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB 0x84F8
    #define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV 0x84F8
    #define GL_MAX_RENDERBUFFER_SIZE 0x84E8
    #define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
    #define GL_MAX_SAMPLES 0x8D57
    #define GL_MAX_SAMPLES_ANGLE 0x8D57
    #define GL_MAX_SAMPLES_APPLE 0x8D57
    #define GL_MAX_SAMPLES_EXT 0x8D57
    #define GL_MAX_SAMPLES_IMG 0x9135
    #define GL_MAX_SAMPLES_NV 0x8D57
    #define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
    #define GL_MAX_SAMPLE_MASK_WORDS_NV 0x8E59
    #define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
    #define GL_MAX_SERVER_WAIT_TIMEOUT_APPLE 0x9111
    #define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
    #define GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT 0x9650
    #define GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT 0x9651
    #define GL_MAX_SHADER_COMPILER_THREADS_ARB 0x91B0
    #define GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT 0x8F63
    #define GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT 0x8F67
    #define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
    #define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
    #define GL_MAX_SHININESS_NV 0x8504
    #define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD 0x9199
    #define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB 0x9199
    #define GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT 0x9199
    #define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS 0x919A
    #define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB 0x919A
    #define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT 0x919A
    #define GL_MAX_SPARSE_TEXTURE_SIZE_AMD 0x9198
    #define GL_MAX_SPARSE_TEXTURE_SIZE_ARB 0x9198
    #define GL_MAX_SPARSE_TEXTURE_SIZE_EXT 0x9198
    #define GL_MAX_SPOT_EXPONENT_NV 0x8505
    #define GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV 0x9349
    #define GL_MAX_SUBROUTINES 0x8DE7
    #define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
    #define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
    #define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT 0x92D3
    #define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES 0x92D3
    #define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
    #define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT 0x92CD
    #define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES 0x92CD
    #define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
    #define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT 0x90CB
    #define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES 0x90CB
    #define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
    #define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT 0x886C
    #define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES 0x886C
    #define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
    #define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT 0x8E83
    #define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES 0x8E83
    #define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
    #define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT 0x90D8
    #define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES 0x90D8
    #define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
    #define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT 0x8E81
    #define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES 0x8E81
    #define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
    #define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT 0x8E85
    #define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES 0x8E85
    #define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
    #define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT 0x8E89
    #define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES 0x8E89
    #define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
    #define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT 0x8E7F
    #define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES 0x8E7F
    #define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
    #define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT 0x92D4
    #define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES 0x92D4
    #define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
    #define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT 0x92CE
    #define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES 0x92CE
    #define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
    #define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT 0x90CC
    #define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES 0x90CC
    #define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
    #define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT 0x886D
    #define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES 0x886D
    #define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
    #define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT 0x8E86
    #define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES 0x8E86
    #define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
    #define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT 0x90D9
    #define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES 0x90D9
    #define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
    #define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT 0x8E82
    #define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES 0x8E82
    #define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
    #define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT 0x8E8A
    #define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES 0x8E8A
    #define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
    #define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT 0x8E80
    #define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES 0x8E80
    #define GL_MAX_TESS_GEN_LEVEL 0x8E7E
    #define GL_MAX_TESS_GEN_LEVEL_EXT 0x8E7E
    #define GL_MAX_TESS_GEN_LEVEL_OES 0x8E7E
    #define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
    #define GL_MAX_TESS_PATCH_COMPONENTS_EXT 0x8E84
    #define GL_MAX_TESS_PATCH_COMPONENTS_OES 0x8E84
    #define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
    #define GL_MAX_TEXTURE_BUFFER_SIZE_ARB 0x8C2B
    #define GL_MAX_TEXTURE_BUFFER_SIZE_EXT 0x8C2B
    #define GL_MAX_TEXTURE_BUFFER_SIZE_OES 0x8C2B
    #define GL_MAX_TEXTURE_COORDS 0x8871
    #define GL_MAX_TEXTURE_COORDS_ARB 0x8871
    #define GL_MAX_TEXTURE_COORDS_NV 0x8871
    #define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
    #define GL_MAX_TEXTURE_IMAGE_UNITS_ARB 0x8872
    #define GL_MAX_TEXTURE_IMAGE_UNITS_NV 0x8872
    #define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
    #define GL_MAX_TEXTURE_LOD_BIAS_EXT 0x84FD
    #define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
    #define GL_MAX_TEXTURE_SIZE 0x0D33
    #define GL_MAX_TEXTURE_UNITS 0x84E2
    #define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
    #define GL_MAX_TRACK_MATRICES_NV 0x862F
    #define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV 0x862E
    #define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
    #define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
    #define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 0x8C8A
    #define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
    #define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
    #define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT 0x8C8B
    #define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
    #define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
    #define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT 0x8C80
    #define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
    #define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
    #define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
    #define GL_MAX_UNIFORM_LOCATIONS 0x826E
    #define GL_MAX_VARYING_COMPONENTS 0x8B4B
    #define GL_MAX_VARYING_COMPONENTS_EXT 0x8B4B
    #define GL_MAX_VARYING_FLOATS 0x8B4B
    #define GL_MAX_VARYING_FLOATS_ARB 0x8B4B
    #define GL_MAX_VARYING_VECTORS 0x8DFC
    #define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV 0x8520
    #define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
    #define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
    #define GL_MAX_VERTEX_ATTRIBS 0x8869
    #define GL_MAX_VERTEX_ATTRIBS_ARB 0x8869
    #define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
    #define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
    #define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
    #define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
    #define GL_MAX_VERTEX_HINT_PGI 0x1A22D
    #define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
    #define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
    #define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87C5
    #define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT 0x87C7
    #define GL_MAX_VERTEX_SHADER_LOCALS_EXT 0x87C9
    #define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87C8
    #define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
    #define GL_MAX_VERTEX_SHADER_VARIANTS_EXT 0x87C6
    #define GL_MAX_VERTEX_STREAMS 0x8E71
    #define GL_MAX_VERTEX_STREAMS_ATI 0x876B
    #define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
    #define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB 0x8B4C
    #define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
    #define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
    #define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB 0x8B4A
    #define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
    #define GL_MAX_VERTEX_UNITS_ARB 0x86A4
    #define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
    #define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT 0x8DDE
    #define GL_MAX_VIEWPORTS 0x825B
    #define GL_MAX_VIEWPORTS_NV 0x825B
    #define GL_MAX_VIEWPORTS_OES 0x825B
    #define GL_MAX_VIEWPORT_DIMS 0x0D3A
    #define GL_MAX_VIEWS_OVR 0x9631
    #define GL_MAX_WIDTH 0x827E
    #define GL_MAX_WINDOW_RECTANGLES_EXT 0x8F14
    #define GL_MEDIUM_FLOAT 0x8DF1
    #define GL_MEDIUM_INT 0x8DF4
    #define GL_MIN 0x8007
    #define GL_MINMAX 0x802E
    #define GL_MINMAX_EXT 0x802E
    #define GL_MINMAX_FORMAT 0x802F
    #define GL_MINMAX_FORMAT_EXT 0x802F
    #define GL_MINMAX_SINK 0x8030
    #define GL_MINMAX_SINK_EXT 0x8030
    #define GL_MINOR_VERSION 0x821C
    #define GL_MINUS_CLAMPED_NV 0x92B3
    #define GL_MINUS_NV 0x929F
    #define GL_MIN_EXT 0x8007
    #define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
    #define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5B
    #define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES 0x8E5B
    #define GL_MIN_LOD_WARNING_AMD 0x919C
    #define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
    #define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
    #define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT 0x8904
    #define GL_MIN_PROGRAM_TEXEL_OFFSET_NV 0x8904
    #define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
    #define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5E
    #define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5E
    #define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
    #define GL_MIN_SAMPLE_SHADING_VALUE_ARB 0x8C37
    #define GL_MIN_SAMPLE_SHADING_VALUE_OES 0x8C37
    #define GL_MIN_SPARSE_LEVEL_AMD 0x919B
    #define GL_MIPMAP 0x8293
    #define GL_MIRRORED_REPEAT 0x8370
    #define GL_MIRRORED_REPEAT_ARB 0x8370
    #define GL_MIRRORED_REPEAT_IBM 0x8370
    #define GL_MIRROR_CLAMP_ATI 0x8742
    #define GL_MIRROR_CLAMP_EXT 0x8742
    #define GL_MIRROR_CLAMP_TO_BORDER_EXT 0x8912
    #define GL_MIRROR_CLAMP_TO_EDGE 0x8743
    #define GL_MIRROR_CLAMP_TO_EDGE_ATI 0x8743
    #define GL_MIRROR_CLAMP_TO_EDGE_EXT 0x8743
    #define GL_MITER_REVERT_NV 0x90A7
    #define GL_MITER_TRUNCATE_NV 0x90A8
    #define GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV 0x932F
    #define GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV 0x9330
    #define GL_MODELVIEW0_ARB 0x1700
    #define GL_MODELVIEW0_EXT 0x1700
    #define GL_MODELVIEW0_MATRIX_EXT 0x0BA6
    #define GL_MODELVIEW0_STACK_DEPTH_EXT 0x0BA3
    #define GL_MODELVIEW10_ARB 0x872A
    #define GL_MODELVIEW11_ARB 0x872B
    #define GL_MODELVIEW12_ARB 0x872C
    #define GL_MODELVIEW13_ARB 0x872D
    #define GL_MODELVIEW14_ARB 0x872E
    #define GL_MODELVIEW15_ARB 0x872F
    #define GL_MODELVIEW16_ARB 0x8730
    #define GL_MODELVIEW17_ARB 0x8731
    #define GL_MODELVIEW18_ARB 0x8732
    #define GL_MODELVIEW19_ARB 0x8733
    #define GL_MODELVIEW1_ARB 0x850A
    #define GL_MODELVIEW1_EXT 0x850A
    #define GL_MODELVIEW1_MATRIX_EXT 0x8506
    #define GL_MODELVIEW1_STACK_DEPTH_EXT 0x8502
    #define GL_MODELVIEW20_ARB 0x8734
    #define GL_MODELVIEW21_ARB 0x8735
    #define GL_MODELVIEW22_ARB 0x8736
    #define GL_MODELVIEW23_ARB 0x8737
    #define GL_MODELVIEW24_ARB 0x8738
    #define GL_MODELVIEW25_ARB 0x8739
    #define GL_MODELVIEW26_ARB 0x873A
    #define GL_MODELVIEW27_ARB 0x873B
    #define GL_MODELVIEW28_ARB 0x873C
    #define GL_MODELVIEW29_ARB 0x873D
    #define GL_MODELVIEW2_ARB 0x8722
    #define GL_MODELVIEW30_ARB 0x873E
    #define GL_MODELVIEW31_ARB 0x873F
    #define GL_MODELVIEW3_ARB 0x8723
    #define GL_MODELVIEW4_ARB 0x8724
    #define GL_MODELVIEW5_ARB 0x8725
    #define GL_MODELVIEW6_ARB 0x8726
    #define GL_MODELVIEW7_ARB 0x8727
    #define GL_MODELVIEW8_ARB 0x8728
    #define GL_MODELVIEW9_ARB 0x8729
    #define GL_MODELVIEW_PROJECTION_NV 0x8629
    #define GL_MODULATE_ADD_ATI 0x8744
    #define GL_MODULATE_SIGNED_ADD_ATI 0x8745
    #define GL_MODULATE_SUBTRACT_ATI 0x8746
    #define GL_MOVE_TO_CONTINUES_NV 0x90B6
    #define GL_MOVE_TO_NV 0x02
    #define GL_MOVE_TO_RESETS_NV 0x90B5
    #define GL_MOV_ATI 0x8961
    #define GL_MULTICAST_GPUS_NV 0x92BA
    #define GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV 0x9549
    #define GL_MULTIPLY 0x9294
    #define GL_MULTIPLY_KHR 0x9294
    #define GL_MULTIPLY_NV 0x9294
    #define GL_MULTISAMPLE 0x809D
    #define GL_MULTISAMPLES_NV 0x9371
    #define GL_MULTISAMPLE_3DFX 0x86B2
    #define GL_MULTISAMPLE_ARB 0x809D
    #define GL_MULTISAMPLE_BIT 0x20000000
    #define GL_MULTISAMPLE_BIT_3DFX 0x20000000
    #define GL_MULTISAMPLE_BIT_ARB 0x20000000
    #define GL_MULTISAMPLE_BIT_EXT 0x20000000
    #define GL_MULTISAMPLE_BUFFER_BIT0_QCOM 0x01000000
    #define GL_MULTISAMPLE_BUFFER_BIT1_QCOM 0x02000000
    #define GL_MULTISAMPLE_BUFFER_BIT2_QCOM 0x04000000
    #define GL_MULTISAMPLE_BUFFER_BIT3_QCOM 0x08000000
    #define GL_MULTISAMPLE_BUFFER_BIT4_QCOM 0x10000000
    #define GL_MULTISAMPLE_BUFFER_BIT5_QCOM 0x20000000
    #define GL_MULTISAMPLE_BUFFER_BIT6_QCOM 0x40000000
    #define GL_MULTISAMPLE_BUFFER_BIT7_QCOM 0x80000000
    #define GL_MULTISAMPLE_COVERAGE_MODES_NV 0x8E12
    #define GL_MULTISAMPLE_EXT 0x809D
    #define GL_MULTISAMPLE_FILTER_HINT_NV 0x8534
    #define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY 0x9382
    #define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB 0x9382
    #define GL_MULTISAMPLE_LINE_WIDTH_RANGE 0x9381
    #define GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB 0x9381
    #define GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT 0x932B
    #define GL_MULTISAMPLE_SGIS 0x809D
    #define GL_MULTIVIEW_EXT 0x90F1
    #define GL_MUL_ATI 0x8964
    #define GL_MVP_MATRIX_EXT 0x87E3
    #define GL_NAMED_STRING_LENGTH_ARB 0x8DE9
    #define GL_NAMED_STRING_TYPE_ARB 0x8DEA
    #define GL_NAME_LENGTH 0x92F9
    #define GL_NAND 0x150E
    #define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI 0x1A203
    #define GL_NATIVE_GRAPHICS_END_HINT_PGI 0x1A204
    #define GL_NATIVE_GRAPHICS_HANDLE_PGI 0x1A202
    #define GL_NEAREST 0x2600
    #define GL_NEAREST_CLIPMAP_LINEAR_SGIX 0x844E
    #define GL_NEAREST_CLIPMAP_NEAREST_SGIX 0x844D
    #define GL_NEAREST_MIPMAP_LINEAR 0x2702
    #define GL_NEAREST_MIPMAP_NEAREST 0x2700
    #define GL_NEGATE_BIT_ATI 0x00000004
    #define GL_NEGATIVE_ONE_EXT 0x87DF
    #define GL_NEGATIVE_ONE_TO_ONE 0x935E
    #define GL_NEGATIVE_W_EXT 0x87DC
    #define GL_NEGATIVE_X_EXT 0x87D9
    #define GL_NEGATIVE_Y_EXT 0x87DA
    #define GL_NEGATIVE_Z_EXT 0x87DB
    #define GL_NEVER 0x0200
    #define GL_NEXT_BUFFER_NV -2
    #define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV 0x9025
    #define GL_NICEST 0x1102
    #define GL_NONE 0
    #define GL_NOOP 0x1505
    #define GL_NOP_COMMAND_NV 0x0001
    #define GL_NOR 0x1508
    #define GL_NORMALIZED_RANGE_EXT 0x87E0
    #define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
    #define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
    #define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB 0x8897
    #define GL_NORMAL_ARRAY_COUNT_EXT 0x8080
    #define GL_NORMAL_ARRAY_EXT 0x8075
    #define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
    #define GL_NORMAL_ARRAY_LIST_IBM 103071
    #define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
    #define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL 0x83F6
    #define GL_NORMAL_ARRAY_POINTER_EXT 0x808F
    #define GL_NORMAL_ARRAY_STRIDE_EXT 0x807F
    #define GL_NORMAL_ARRAY_TYPE_EXT 0x807E
    #define GL_NORMAL_BIT_PGI 0x08000000
    #define GL_NORMAL_MAP 0x8511
    #define GL_NORMAL_MAP_ARB 0x8511
    #define GL_NORMAL_MAP_EXT 0x8511
    #define GL_NORMAL_MAP_NV 0x8511
    #define GL_NOTEQUAL 0x0205
    #define GL_NO_ERROR 0
    #define GL_NO_RESET_NOTIFICATION 0x8261
    #define GL_NO_RESET_NOTIFICATION_ARB 0x8261
    #define GL_NO_RESET_NOTIFICATION_EXT 0x8261
    #define GL_NO_RESET_NOTIFICATION_KHR 0x8261
    #define GL_NUM_ACTIVE_VARIABLES 0x9304
    #define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
    #define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
    #define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
    #define GL_NUM_DEVICE_UUIDS_EXT 0x9596
    #define GL_NUM_DOWNSAMPLE_SCALES_IMG 0x913D
    #define GL_NUM_EXTENSIONS 0x821D
    #define GL_NUM_FILL_STREAMS_NV 0x8E29
    #define GL_NUM_FRAGMENT_CONSTANTS_ATI 0x896F
    #define GL_NUM_FRAGMENT_REGISTERS_ATI 0x896E
    #define GL_NUM_GENERAL_COMBINERS_NV 0x854E
    #define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI 0x8973
    #define GL_NUM_INSTRUCTIONS_PER_PASS_ATI 0x8971
    #define GL_NUM_INSTRUCTIONS_TOTAL_ATI 0x8972
    #define GL_NUM_LOOPBACK_COMPONENTS_ATI 0x8974
    #define GL_NUM_PASSES_ATI 0x8970
    #define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
    #define GL_NUM_PROGRAM_BINARY_FORMATS_OES 0x87FE
    #define GL_NUM_SAMPLE_COUNTS 0x9380
    #define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
    #define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
    #define GL_NUM_SPARSE_LEVELS_ARB 0x91AA
    #define GL_NUM_SPARSE_LEVELS_EXT 0x91AA
    #define GL_NUM_TILING_TYPES_EXT 0x9582
    #define GL_NUM_VIDEO_CAPTURE_STREAMS_NV 0x9024
    #define GL_NUM_VIRTUAL_PAGE_SIZES_ARB 0x91A8
    #define GL_NUM_VIRTUAL_PAGE_SIZES_EXT 0x91A8
    #define GL_NUM_WINDOW_RECTANGLES_EXT 0x8F15
    #define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB 0x8B89
    #define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB 0x8B8A
    #define GL_OBJECT_ACTIVE_UNIFORMS_ARB 0x8B86
    #define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB 0x8B87
    #define GL_OBJECT_ATTACHED_OBJECTS_ARB 0x8B85
    #define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
    #define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
    #define GL_OBJECT_COMPILE_STATUS_ARB 0x8B81
    #define GL_OBJECT_DELETE_STATUS_ARB 0x8B80
    #define GL_OBJECT_DISTANCE_TO_LINE_SGIS 0x81F3
    #define GL_OBJECT_DISTANCE_TO_POINT_SGIS 0x81F1
    #define GL_OBJECT_INFO_LOG_LENGTH_ARB 0x8B84
    #define GL_OBJECT_LINEAR_NV 0x2401
    #define GL_OBJECT_LINE_SGIS 0x81F7
    #define GL_OBJECT_LINK_STATUS_ARB 0x8B82
    #define GL_OBJECT_POINT_SGIS 0x81F5
    #define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB 0x8B88
    #define GL_OBJECT_SUBTYPE_ARB 0x8B4F
    #define GL_OBJECT_TYPE 0x9112
    #define GL_OBJECT_TYPE_APPLE 0x9112
    #define GL_OBJECT_TYPE_ARB 0x8B4E
    #define GL_OBJECT_VALIDATE_STATUS_ARB 0x8B83
    #define GL_OCCLUSION_QUERY_EVENT_MASK_AMD 0x874F
    #define GL_OCCLUSION_TEST_HP 0x8165
    #define GL_OCCLUSION_TEST_RESULT_HP 0x8166
    #define GL_OFFSET 0x92FC
    #define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV 0x8856
    #define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8857
    #define GL_OFFSET_HILO_TEXTURE_2D_NV 0x8854
    #define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV 0x8855
    #define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV 0x8850
    #define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV 0x8851
    #define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8852
    #define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV 0x8853
    #define GL_OFFSET_TEXTURE_2D_BIAS_NV 0x86E3
    #define GL_OFFSET_TEXTURE_2D_MATRIX_NV 0x86E1
    #define GL_OFFSET_TEXTURE_2D_NV 0x86E8
    #define GL_OFFSET_TEXTURE_2D_SCALE_NV 0x86E2
    #define GL_OFFSET_TEXTURE_BIAS_NV 0x86E3
    #define GL_OFFSET_TEXTURE_MATRIX_NV 0x86E1
    #define GL_OFFSET_TEXTURE_RECTANGLE_NV 0x864C
    #define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV 0x864D
    #define GL_OFFSET_TEXTURE_SCALE_NV 0x86E2
    #define GL_ONE 1
    #define GL_ONE_EXT 0x87DE
    #define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
    #define GL_ONE_MINUS_CONSTANT_ALPHA_EXT 0x8004
    #define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
    #define GL_ONE_MINUS_CONSTANT_COLOR_EXT 0x8002
    #define GL_ONE_MINUS_DST_ALPHA 0x0305
    #define GL_ONE_MINUS_DST_COLOR 0x0307
    #define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
    #define GL_ONE_MINUS_SRC1_ALPHA_EXT 0x88FB
    #define GL_ONE_MINUS_SRC1_COLOR 0x88FA
    #define GL_ONE_MINUS_SRC1_COLOR_EXT 0x88FA
    #define GL_ONE_MINUS_SRC_ALPHA 0x0303
    #define GL_ONE_MINUS_SRC_COLOR 0x0301
    #define GL_OPERAND0_ALPHA 0x8598
    #define GL_OPERAND0_ALPHA_ARB 0x8598
    #define GL_OPERAND0_ALPHA_EXT 0x8598
    #define GL_OPERAND0_RGB 0x8590
    #define GL_OPERAND0_RGB_ARB 0x8590
    #define GL_OPERAND0_RGB_EXT 0x8590
    #define GL_OPERAND1_ALPHA 0x8599
    #define GL_OPERAND1_ALPHA_ARB 0x8599
    #define GL_OPERAND1_ALPHA_EXT 0x8599
    #define GL_OPERAND1_RGB 0x8591
    #define GL_OPERAND1_RGB_ARB 0x8591
    #define GL_OPERAND1_RGB_EXT 0x8591
    #define GL_OPERAND2_ALPHA 0x859A
    #define GL_OPERAND2_ALPHA_ARB 0x859A
    #define GL_OPERAND2_ALPHA_EXT 0x859A
    #define GL_OPERAND2_RGB 0x8592
    #define GL_OPERAND2_RGB_ARB 0x8592
    #define GL_OPERAND2_RGB_EXT 0x8592
    #define GL_OPERAND3_ALPHA_NV 0x859B
    #define GL_OPERAND3_RGB_NV 0x8593
    #define GL_OPTIMAL_TILING_EXT 0x9584
    #define GL_OP_ADD_EXT 0x8787
    #define GL_OP_CLAMP_EXT 0x878E
    #define GL_OP_CROSS_PRODUCT_EXT 0x8797
    #define GL_OP_DOT3_EXT 0x8784
    #define GL_OP_DOT4_EXT 0x8785
    #define GL_OP_EXP_BASE_2_EXT 0x8791
    #define GL_OP_FLOOR_EXT 0x878F
    #define GL_OP_FRAC_EXT 0x8789
    #define GL_OP_INDEX_EXT 0x8782
    #define GL_OP_LOG_BASE_2_EXT 0x8792
    #define GL_OP_MADD_EXT 0x8788
    #define GL_OP_MAX_EXT 0x878A
    #define GL_OP_MIN_EXT 0x878B
    #define GL_OP_MOV_EXT 0x8799
    #define GL_OP_MULTIPLY_MATRIX_EXT 0x8798
    #define GL_OP_MUL_EXT 0x8786
    #define GL_OP_NEGATE_EXT 0x8783
    #define GL_OP_POWER_EXT 0x8793
    #define GL_OP_RECIP_EXT 0x8794
    #define GL_OP_RECIP_SQRT_EXT 0x8795
    #define GL_OP_ROUND_EXT 0x8790
    #define GL_OP_SET_GE_EXT 0x878C
    #define GL_OP_SET_LT_EXT 0x878D
    #define GL_OP_SUB_EXT 0x8796
    #define GL_OR 0x1507
    #define GL_OR_INVERTED 0x150D
    #define GL_OR_REVERSE 0x150B
    #define GL_OUTPUT_COLOR0_EXT 0x879B
    #define GL_OUTPUT_COLOR1_EXT 0x879C
    #define GL_OUTPUT_FOG_EXT 0x87BD
    #define GL_OUTPUT_TEXTURE_COORD0_EXT 0x879D
    #define GL_OUTPUT_TEXTURE_COORD10_EXT 0x87A7
    #define GL_OUTPUT_TEXTURE_COORD11_EXT 0x87A8
    #define GL_OUTPUT_TEXTURE_COORD12_EXT 0x87A9
    #define GL_OUTPUT_TEXTURE_COORD13_EXT 0x87AA
    #define GL_OUTPUT_TEXTURE_COORD14_EXT 0x87AB
    #define GL_OUTPUT_TEXTURE_COORD15_EXT 0x87AC
    #define GL_OUTPUT_TEXTURE_COORD16_EXT 0x87AD
    #define GL_OUTPUT_TEXTURE_COORD17_EXT 0x87AE
    #define GL_OUTPUT_TEXTURE_COORD18_EXT 0x87AF
    #define GL_OUTPUT_TEXTURE_COORD19_EXT 0x87B0
    #define GL_OUTPUT_TEXTURE_COORD1_EXT 0x879E
    #define GL_OUTPUT_TEXTURE_COORD20_EXT 0x87B1
    #define GL_OUTPUT_TEXTURE_COORD21_EXT 0x87B2
    #define GL_OUTPUT_TEXTURE_COORD22_EXT 0x87B3
    #define GL_OUTPUT_TEXTURE_COORD23_EXT 0x87B4
    #define GL_OUTPUT_TEXTURE_COORD24_EXT 0x87B5
    #define GL_OUTPUT_TEXTURE_COORD25_EXT 0x87B6
    #define GL_OUTPUT_TEXTURE_COORD26_EXT 0x87B7
    #define GL_OUTPUT_TEXTURE_COORD27_EXT 0x87B8
    #define GL_OUTPUT_TEXTURE_COORD28_EXT 0x87B9
    #define GL_OUTPUT_TEXTURE_COORD29_EXT 0x87BA
    #define GL_OUTPUT_TEXTURE_COORD2_EXT 0x879F
    #define GL_OUTPUT_TEXTURE_COORD30_EXT 0x87BB
    #define GL_OUTPUT_TEXTURE_COORD31_EXT 0x87BC
    #define GL_OUTPUT_TEXTURE_COORD3_EXT 0x87A0
    #define GL_OUTPUT_TEXTURE_COORD4_EXT 0x87A1
    #define GL_OUTPUT_TEXTURE_COORD5_EXT 0x87A2
    #define GL_OUTPUT_TEXTURE_COORD6_EXT 0x87A3
    #define GL_OUTPUT_TEXTURE_COORD7_EXT 0x87A4
    #define GL_OUTPUT_TEXTURE_COORD8_EXT 0x87A5
    #define GL_OUTPUT_TEXTURE_COORD9_EXT 0x87A6
    #define GL_OUTPUT_VERTEX_EXT 0x879A
    #define GL_OUT_OF_MEMORY 0x0505
    #define GL_OVERLAY 0x9296
    #define GL_OVERLAY_KHR 0x9296
    #define GL_OVERLAY_NV 0x9296
    #define GL_PACK_ALIGNMENT 0x0D05
    #define GL_PACK_CMYK_HINT_EXT 0x800E
    #define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
    #define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
    #define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
    #define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
    #define GL_PACK_IMAGE_DEPTH_SGIS 0x8131
    #define GL_PACK_IMAGE_HEIGHT 0x806C
    #define GL_PACK_IMAGE_HEIGHT_EXT 0x806C
    #define GL_PACK_INVERT_MESA 0x8758
    #define GL_PACK_LSB_FIRST 0x0D01
    #define GL_PACK_RESAMPLE_OML 0x8984
    #define GL_PACK_RESAMPLE_SGIX 0x842E
    #define GL_PACK_REVERSE_ROW_ORDER_ANGLE 0x93A4
    #define GL_PACK_ROW_BYTES_APPLE 0x8A15
    #define GL_PACK_ROW_LENGTH 0x0D02
    #define GL_PACK_SKIP_IMAGES 0x806B
    #define GL_PACK_SKIP_IMAGES_EXT 0x806B
    #define GL_PACK_SKIP_PIXELS 0x0D04
    #define GL_PACK_SKIP_ROWS 0x0D03
    #define GL_PACK_SKIP_VOLUMES_SGIS 0x8130
    #define GL_PACK_SUBSAMPLE_RATE_SGIX 0x85A0
    #define GL_PACK_SWAP_BYTES 0x0D00
    #define GL_PALETTE4_R5_G6_B5_OES 0x8B92
    #define GL_PALETTE4_RGB5_A1_OES 0x8B94
    #define GL_PALETTE4_RGB8_OES 0x8B90
    #define GL_PALETTE4_RGBA4_OES 0x8B93
    #define GL_PALETTE4_RGBA8_OES 0x8B91
    #define GL_PALETTE8_R5_G6_B5_OES 0x8B97
    #define GL_PALETTE8_RGB5_A1_OES 0x8B99
    #define GL_PALETTE8_RGB8_OES 0x8B95
    #define GL_PALETTE8_RGBA4_OES 0x8B98
    #define GL_PALETTE8_RGBA8_OES 0x8B96
    #define GL_PARALLEL_ARRAYS_INTEL 0x83F4
    #define GL_PARAMETER_BUFFER_ARB 0x80EE
    #define GL_PARAMETER_BUFFER_BINDING_ARB 0x80EF
    #define GL_PARTIAL_SUCCESS_NV 0x902E
    #define GL_PASS_THROUGH_NV 0x86E6
    #define GL_PATCHES 0x000E
    #define GL_PATCHES_EXT 0x000E
    #define GL_PATCHES_OES 0x000E
    #define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
    #define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
    #define GL_PATCH_VERTICES 0x8E72
    #define GL_PATCH_VERTICES_EXT 0x8E72
    #define GL_PATCH_VERTICES_OES 0x8E72
    #define GL_PATH_CLIENT_LENGTH_NV 0x907F
    #define GL_PATH_COMMAND_COUNT_NV 0x909D
    #define GL_PATH_COMPUTED_LENGTH_NV 0x90A0
    #define GL_PATH_COORD_COUNT_NV 0x909E
    #define GL_PATH_COVER_DEPTH_FUNC_NV 0x90BF
    #define GL_PATH_DASH_ARRAY_COUNT_NV 0x909F
    #define GL_PATH_DASH_CAPS_NV 0x907B
    #define GL_PATH_DASH_OFFSET_NV 0x907E
    #define GL_PATH_DASH_OFFSET_RESET_NV 0x90B4
    #define GL_PATH_END_CAPS_NV 0x9076
    #define GL_PATH_ERROR_POSITION_NV 0x90AB
    #define GL_PATH_FILL_BOUNDING_BOX_NV 0x90A1
    #define GL_PATH_FILL_COVER_MODE_NV 0x9082
    #define GL_PATH_FILL_MASK_NV 0x9081
    #define GL_PATH_FILL_MODE_NV 0x9080
    #define GL_PATH_FOG_GEN_MODE_NV 0x90AC
    #define GL_PATH_FORMAT_PS_NV 0x9071
    #define GL_PATH_FORMAT_SVG_NV 0x9070
    #define GL_PATH_GEN_COEFF_NV 0x90B1
    #define GL_PATH_GEN_COLOR_FORMAT_NV 0x90B2
    #define GL_PATH_GEN_COMPONENTS_NV 0x90B3
    #define GL_PATH_GEN_MODE_NV 0x90B0
    #define GL_PATH_INITIAL_DASH_CAP_NV 0x907C
    #define GL_PATH_INITIAL_END_CAP_NV 0x9077
    #define GL_PATH_JOIN_STYLE_NV 0x9079
    #define GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV 0x0D36
    #define GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV 0x0D38
    #define GL_PATH_MITER_LIMIT_NV 0x907A
    #define GL_PATH_MODELVIEW_MATRIX_NV 0x0BA6
    #define GL_PATH_MODELVIEW_NV 0x1700
    #define GL_PATH_MODELVIEW_STACK_DEPTH_NV 0x0BA3
    #define GL_PATH_OBJECT_BOUNDING_BOX_NV 0x908A
    #define GL_PATH_PROJECTION_MATRIX_NV 0x0BA7
    #define GL_PATH_PROJECTION_NV 0x1701
    #define GL_PATH_PROJECTION_STACK_DEPTH_NV 0x0BA4
    #define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV 0x90BD
    #define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV 0x90BE
    #define GL_PATH_STENCIL_FUNC_NV 0x90B7
    #define GL_PATH_STENCIL_REF_NV 0x90B8
    #define GL_PATH_STENCIL_VALUE_MASK_NV 0x90B9
    #define GL_PATH_STROKE_BOUNDING_BOX_NV 0x90A2
    #define GL_PATH_STROKE_COVER_MODE_NV 0x9083
    #define GL_PATH_STROKE_MASK_NV 0x9084
    #define GL_PATH_STROKE_WIDTH_NV 0x9075
    #define GL_PATH_TERMINAL_DASH_CAP_NV 0x907D
    #define GL_PATH_TERMINAL_END_CAP_NV 0x9078
    #define GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV 0x84E3
    #define GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV 0x84E4
    #define GL_PERCENTAGE_AMD 0x8BC3
    #define GL_PERFMON_GLOBAL_MODE_QCOM 0x8FA0
    #define GL_PERFMON_RESULT_AMD 0x8BC6
    #define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
    #define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
    #define GL_PERFORMANCE_MONITOR_AMD 0x9152
    #define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL 0x94FC
    #define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL 0x94FB
    #define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL 0x94FA
    #define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL 0x94F8
    #define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL 0x94F9
    #define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL 0x94FF
    #define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL 0x94F1
    #define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL 0x94F2
    #define GL_PERFQUERY_COUNTER_EVENT_INTEL 0x94F0
    #define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL 0x94FE
    #define GL_PERFQUERY_COUNTER_RAW_INTEL 0x94F4
    #define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL 0x94F3
    #define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL 0x94F5
    #define GL_PERFQUERY_DONOT_FLUSH_INTEL 0x83F9
    #define GL_PERFQUERY_FLUSH_INTEL 0x83FA
    #define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL 0x00000001
    #define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL 0x9500
    #define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL 0x94FD
    #define GL_PERFQUERY_SINGLE_CONTEXT_INTEL 0x00000000
    #define GL_PERFQUERY_WAIT_INTEL 0x83FB
    #define GL_PERTURB_EXT 0x85AE
    #define GL_PER_GPU_STORAGE_BIT_NV 0x0800
    #define GL_PER_GPU_STORAGE_NV 0x9548
    #define GL_PER_STAGE_CONSTANTS_NV 0x8535
    #define GL_PHONG_HINT_WIN 0x80EB
    #define GL_PHONG_WIN 0x80EA
    #define GL_PINLIGHT_NV 0x92A8
    #define GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD 0x91AE
    #define GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD 0x91AF
    #define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
    #define GL_PIXEL_BUFFER_BARRIER_BIT_EXT 0x00000080
    #define GL_PIXEL_COUNTER_BITS_NV 0x8864
    #define GL_PIXEL_COUNT_AVAILABLE_NV 0x8867
    #define GL_PIXEL_COUNT_NV 0x8866
    #define GL_PIXEL_CUBIC_WEIGHT_EXT 0x8333
    #define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS 0x8355
    #define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS 0x8354
    #define GL_PIXEL_GROUP_COLOR_SGIS 0x8356
    #define GL_PIXEL_MAG_FILTER_EXT 0x8331
    #define GL_PIXEL_MIN_FILTER_EXT 0x8332
    #define GL_PIXEL_PACK_BUFFER 0x88EB
    #define GL_PIXEL_PACK_BUFFER_ARB 0x88EB
    #define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
    #define GL_PIXEL_PACK_BUFFER_BINDING_ARB 0x88ED
    #define GL_PIXEL_PACK_BUFFER_BINDING_EXT 0x88ED
    #define GL_PIXEL_PACK_BUFFER_EXT 0x88EB
    #define GL_PIXEL_SUBSAMPLE_2424_SGIX 0x85A3
    #define GL_PIXEL_SUBSAMPLE_4242_SGIX 0x85A4
    #define GL_PIXEL_SUBSAMPLE_4444_SGIX 0x85A2
    #define GL_PIXEL_TEXTURE_SGIS 0x8353
    #define GL_PIXEL_TEX_GEN_MODE_SGIX 0x832B
    #define GL_PIXEL_TEX_GEN_SGIX 0x8139
    #define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX 0x813E
    #define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX 0x813F
    #define GL_PIXEL_TILE_CACHE_SIZE_SGIX 0x8145
    #define GL_PIXEL_TILE_GRID_DEPTH_SGIX 0x8144
    #define GL_PIXEL_TILE_GRID_HEIGHT_SGIX 0x8143
    #define GL_PIXEL_TILE_GRID_WIDTH_SGIX 0x8142
    #define GL_PIXEL_TILE_HEIGHT_SGIX 0x8141
    #define GL_PIXEL_TILE_WIDTH_SGIX 0x8140
    #define GL_PIXEL_TRANSFORM_2D_EXT 0x8330
    #define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT 0x8338
    #define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8336
    #define GL_PIXEL_UNPACK_BUFFER 0x88EC
    #define GL_PIXEL_UNPACK_BUFFER_ARB 0x88EC
    #define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
    #define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB 0x88EF
    #define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT 0x88EF
    #define GL_PIXEL_UNPACK_BUFFER_EXT 0x88EC
    #define GL_PLUS_CLAMPED_ALPHA_NV 0x92B2
    #define GL_PLUS_CLAMPED_NV 0x92B1
    #define GL_PLUS_DARKER_NV 0x9292
    #define GL_PLUS_NV 0x9291
    #define GL_PN_TRIANGLES_ATI 0x87F0
    #define GL_PN_TRIANGLES_NORMAL_MODE_ATI 0x87F3
    #define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI 0x87F7
    #define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI 0x87F8
    #define GL_PN_TRIANGLES_POINT_MODE_ATI 0x87F2
    #define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI 0x87F6
    #define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI 0x87F5
    #define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F4
    #define GL_POINT 0x1B00
    #define GL_POINTS 0x0000
    #define GL_POINT_DISTANCE_ATTENUATION 0x8129
    #define GL_POINT_DISTANCE_ATTENUATION_ARB 0x8129
    #define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
    #define GL_POINT_FADE_THRESHOLD_SIZE_ARB 0x8128
    #define GL_POINT_FADE_THRESHOLD_SIZE_EXT 0x8128
    #define GL_POINT_FADE_THRESHOLD_SIZE_SGIS 0x8128
    #define GL_POINT_NV 0x1B00
    #define GL_POINT_SIZE 0x0B11
    #define GL_POINT_SIZE_GRANULARITY 0x0B13
    #define GL_POINT_SIZE_MAX 0x8127
    #define GL_POINT_SIZE_MAX_ARB 0x8127
    #define GL_POINT_SIZE_MAX_EXT 0x8127
    #define GL_POINT_SIZE_MAX_SGIS 0x8127
    #define GL_POINT_SIZE_MIN 0x8126
    #define GL_POINT_SIZE_MIN_ARB 0x8126
    #define GL_POINT_SIZE_MIN_EXT 0x8126
    #define GL_POINT_SIZE_MIN_SGIS 0x8126
    #define GL_POINT_SIZE_RANGE 0x0B12
    #define GL_POINT_SPRITE 0x8861
    #define GL_POINT_SPRITE_ARB 0x8861
    #define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
    #define GL_POINT_SPRITE_NV 0x8861
    #define GL_POINT_SPRITE_R_MODE_NV 0x8863
    #define GL_POLYGON_MODE 0x0B40
    #define GL_POLYGON_MODE_NV 0x0B40
    #define GL_POLYGON_OFFSET_BIAS_EXT 0x8039
    #define GL_POLYGON_OFFSET_CLAMP_EXT 0x8E1B
    #define GL_POLYGON_OFFSET_COMMAND_NV 0x000E
    #define GL_POLYGON_OFFSET_EXT 0x8037
    #define GL_POLYGON_OFFSET_FACTOR 0x8038
    #define GL_POLYGON_OFFSET_FACTOR_EXT 0x8038
    #define GL_POLYGON_OFFSET_FILL 0x8037
    #define GL_POLYGON_OFFSET_LINE 0x2A02
    #define GL_POLYGON_OFFSET_LINE_NV 0x2A02
    #define GL_POLYGON_OFFSET_POINT 0x2A01
    #define GL_POLYGON_OFFSET_POINT_NV 0x2A01
    #define GL_POLYGON_OFFSET_UNITS 0x2A00
    #define GL_POLYGON_SMOOTH 0x0B41
    #define GL_POLYGON_SMOOTH_HINT 0x0C53
    #define GL_POST_COLOR_MATRIX_ALPHA_BIAS 0x80BB
    #define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI 0x80BB
    #define GL_POST_COLOR_MATRIX_ALPHA_SCALE 0x80B7
    #define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI 0x80B7
    #define GL_POST_COLOR_MATRIX_BLUE_BIAS 0x80BA
    #define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI 0x80BA
    #define GL_POST_COLOR_MATRIX_BLUE_SCALE 0x80B6
    #define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI 0x80B6
    #define GL_POST_COLOR_MATRIX_COLOR_TABLE 0x80D2
    #define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D2
    #define GL_POST_COLOR_MATRIX_GREEN_BIAS 0x80B9
    #define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI 0x80B9
    #define GL_POST_COLOR_MATRIX_GREEN_SCALE 0x80B5
    #define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI 0x80B5
    #define GL_POST_COLOR_MATRIX_RED_BIAS 0x80B8
    #define GL_POST_COLOR_MATRIX_RED_BIAS_SGI 0x80B8
    #define GL_POST_COLOR_MATRIX_RED_SCALE 0x80B4
    #define GL_POST_COLOR_MATRIX_RED_SCALE_SGI 0x80B4
    #define GL_POST_CONVOLUTION_ALPHA_BIAS 0x8023
    #define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT 0x8023
    #define GL_POST_CONVOLUTION_ALPHA_SCALE 0x801F
    #define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT 0x801F
    #define GL_POST_CONVOLUTION_BLUE_BIAS 0x8022
    #define GL_POST_CONVOLUTION_BLUE_BIAS_EXT 0x8022
    #define GL_POST_CONVOLUTION_BLUE_SCALE 0x801E
    #define GL_POST_CONVOLUTION_BLUE_SCALE_EXT 0x801E
    #define GL_POST_CONVOLUTION_COLOR_TABLE 0x80D1
    #define GL_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D1
    #define GL_POST_CONVOLUTION_GREEN_BIAS 0x8021
    #define GL_POST_CONVOLUTION_GREEN_BIAS_EXT 0x8021
    #define GL_POST_CONVOLUTION_GREEN_SCALE 0x801D
    #define GL_POST_CONVOLUTION_GREEN_SCALE_EXT 0x801D
    #define GL_POST_CONVOLUTION_RED_BIAS 0x8020
    #define GL_POST_CONVOLUTION_RED_BIAS_EXT 0x8020
    #define GL_POST_CONVOLUTION_RED_SCALE 0x801C
    #define GL_POST_CONVOLUTION_RED_SCALE_EXT 0x801C
    #define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
    #define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX 0x817B
    #define GL_POST_TEXTURE_FILTER_BIAS_SGIX 0x8179
    #define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX 0x817C
    #define GL_POST_TEXTURE_FILTER_SCALE_SGIX 0x817A
    #define GL_PREFER_DOUBLEBUFFER_HINT_PGI 0x1A1F8
    #define GL_PRESENT_DURATION_NV 0x8E2B
    #define GL_PRESENT_TIME_NV 0x8E2A
    #define GL_PRESERVE_ATI 0x8762
    #define GL_PREVIOUS 0x8578
    #define GL_PREVIOUS_ARB 0x8578
    #define GL_PREVIOUS_EXT 0x8578
    #define GL_PREVIOUS_TEXTURE_INPUT_NV 0x86E4
    #define GL_PRIMARY_COLOR 0x8577
    #define GL_PRIMARY_COLOR_ARB 0x8577
    #define GL_PRIMARY_COLOR_EXT 0x8577
    #define GL_PRIMARY_COLOR_NV 0x852C
    #define GL_PRIMITIVES_GENERATED 0x8C87
    #define GL_PRIMITIVES_GENERATED_EXT 0x8C87
    #define GL_PRIMITIVES_GENERATED_NV 0x8C87
    #define GL_PRIMITIVES_GENERATED_OES 0x8C87
    #define GL_PRIMITIVES_SUBMITTED_ARB 0x82EF
    #define GL_PRIMITIVE_BOUNDING_BOX 0x92BE
    #define GL_PRIMITIVE_BOUNDING_BOX_ARB 0x92BE
    #define GL_PRIMITIVE_BOUNDING_BOX_EXT 0x92BE
    #define GL_PRIMITIVE_BOUNDING_BOX_OES 0x92BE
    #define GL_PRIMITIVE_ID_NV 0x8C7C
    #define GL_PRIMITIVE_RESTART 0x8F9D
    #define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
    #define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
    #define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES 0x8221
    #define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
    #define GL_PRIMITIVE_RESTART_INDEX_NV 0x8559
    #define GL_PRIMITIVE_RESTART_NV 0x8558
    #define GL_PROGRAM 0x82E2
    #define GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB 0x9341
    #define GL_PROGRAMMABLE_SAMPLE_LOCATION_NV 0x9341
    #define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB 0x9340
    #define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV 0x9340
    #define GL_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B0
    #define GL_PROGRAM_ALU_INSTRUCTIONS_ARB 0x8805
    #define GL_PROGRAM_ATTRIBS_ARB 0x88AC
    #define GL_PROGRAM_ATTRIB_COMPONENTS_NV 0x8906
    #define GL_PROGRAM_BINARY_ANGLE 0x93A6
    #define GL_PROGRAM_BINARY_FORMATS 0x87FF
    #define GL_PROGRAM_BINARY_FORMATS_OES 0x87FF
    #define GL_PROGRAM_BINARY_LENGTH 0x8741
    #define GL_PROGRAM_BINARY_LENGTH_OES 0x8741
    #define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
    #define GL_PROGRAM_BINDING_ARB 0x8677
    #define GL_PROGRAM_ERROR_POSITION_ARB 0x864B
    #define GL_PROGRAM_ERROR_POSITION_NV 0x864B
    #define GL_PROGRAM_ERROR_STRING_ARB 0x8874
    #define GL_PROGRAM_ERROR_STRING_NV 0x8874
    #define GL_PROGRAM_FORMAT_ARB 0x8876
    #define GL_PROGRAM_FORMAT_ASCII_ARB 0x8875
    #define GL_PROGRAM_INPUT 0x92E3
    #define GL_PROGRAM_INSTRUCTIONS_ARB 0x88A0
    #define GL_PROGRAM_KHR 0x82E2
    #define GL_PROGRAM_LENGTH_ARB 0x8627
    #define GL_PROGRAM_LENGTH_NV 0x8627
    #define GL_PROGRAM_MATRIX_EXT 0x8E2D
    #define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT 0x8E2F
    #define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B2
    #define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x8808
    #define GL_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AE
    #define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A2
    #define GL_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AA
    #define GL_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A6
    #define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x880A
    #define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x8809
    #define GL_PROGRAM_OBJECT_ARB 0x8B40
    #define GL_PROGRAM_OBJECT_EXT 0x8B40
    #define GL_PROGRAM_OUTPUT 0x92E4
    #define GL_PROGRAM_PARAMETERS_ARB 0x88A8
    #define GL_PROGRAM_PARAMETER_NV 0x8644
    #define GL_PROGRAM_PIPELINE 0x82E4
    #define GL_PROGRAM_PIPELINE_BINDING 0x825A
    #define GL_PROGRAM_PIPELINE_BINDING_EXT 0x825A
    #define GL_PROGRAM_PIPELINE_KHR 0x82E4
    #define GL_PROGRAM_PIPELINE_OBJECT_EXT 0x8A4F
    #define GL_PROGRAM_POINT_SIZE 0x8642
    #define GL_PROGRAM_POINT_SIZE_ARB 0x8642
    #define GL_PROGRAM_POINT_SIZE_EXT 0x8642
    #define GL_PROGRAM_RESIDENT_NV 0x8647
    #define GL_PROGRAM_RESULT_COMPONENTS_NV 0x8907
    #define GL_PROGRAM_SEPARABLE 0x8258
    #define GL_PROGRAM_SEPARABLE_EXT 0x8258
    #define GL_PROGRAM_STRING_ARB 0x8628
    #define GL_PROGRAM_STRING_NV 0x8628
    #define GL_PROGRAM_TARGET_NV 0x8646
    #define GL_PROGRAM_TEMPORARIES_ARB 0x88A4
    #define GL_PROGRAM_TEX_INDIRECTIONS_ARB 0x8807
    #define GL_PROGRAM_TEX_INSTRUCTIONS_ARB 0x8806
    #define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 0x88B6
    #define GL_PROTECTED_MEMORY_OBJECT_EXT 0x959B
    #define GL_PROVOKING_VERTEX 0x8E4F
    #define GL_PROVOKING_VERTEX_EXT 0x8E4F
    #define GL_PROXY_COLOR_TABLE 0x80D3
    #define GL_PROXY_COLOR_TABLE_SGI 0x80D3
    #define GL_PROXY_HISTOGRAM 0x8025
    #define GL_PROXY_HISTOGRAM_EXT 0x8025
    #define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
    #define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D5
    #define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
    #define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D4
    #define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
    #define GL_PROXY_TEXTURE_1D 0x8063
    #define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
    #define GL_PROXY_TEXTURE_1D_ARRAY_EXT 0x8C19
    #define GL_PROXY_TEXTURE_1D_EXT 0x8063
    #define GL_PROXY_TEXTURE_1D_STACK_MESAX 0x875B
    #define GL_PROXY_TEXTURE_2D 0x8064
    #define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
    #define GL_PROXY_TEXTURE_2D_ARRAY_EXT 0x8C1B
    #define GL_PROXY_TEXTURE_2D_EXT 0x8064
    #define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
    #define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
    #define GL_PROXY_TEXTURE_2D_STACK_MESAX 0x875C
    #define GL_PROXY_TEXTURE_3D 0x8070
    #define GL_PROXY_TEXTURE_3D_EXT 0x8070
    #define GL_PROXY_TEXTURE_4D_SGIS 0x8135
    #define GL_PROXY_TEXTURE_COLOR_TABLE_SGI 0x80BD
    #define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
    #define GL_PROXY_TEXTURE_CUBE_MAP_ARB 0x851B
    #define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
    #define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB 0x900B
    #define GL_PROXY_TEXTURE_CUBE_MAP_EXT 0x851B
    #define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
    #define GL_PROXY_TEXTURE_RECTANGLE_ARB 0x84F7
    #define GL_PROXY_TEXTURE_RECTANGLE_NV 0x84F7
    #define GL_PURGEABLE_APPLE 0x8A1D
    #define GL_PURGED_CONTEXT_RESET_NV 0x92BB
    #define GL_QUADRATIC_CURVE_TO_NV 0x0A
    #define GL_QUADS 0x0007
    #define GL_QUADS_EXT 0x0007
    #define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
    #define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT 0x8E4C
    #define GL_QUADS_OES 0x0007
    #define GL_QUAD_ALPHA4_SGIS 0x811E
    #define GL_QUAD_ALPHA8_SGIS 0x811F
    #define GL_QUAD_INTENSITY4_SGIS 0x8122
    #define GL_QUAD_INTENSITY8_SGIS 0x8123
    #define GL_QUAD_LUMINANCE4_SGIS 0x8120
    #define GL_QUAD_LUMINANCE8_SGIS 0x8121
    #define GL_QUAD_MESH_SUN 0x8614
    #define GL_QUAD_TEXTURE_SELECT_SGIS 0x8125
    #define GL_QUARTER_BIT_ATI 0x00000010
    #define GL_QUERY 0x82E3
    #define GL_QUERY_ALL_EVENT_BITS_AMD 0xFFFFFFFF
    #define GL_QUERY_BUFFER 0x9192
    #define GL_QUERY_BUFFER_AMD 0x9192
    #define GL_QUERY_BUFFER_BARRIER_BIT 0x00008000
    #define GL_QUERY_BUFFER_BINDING 0x9193
    #define GL_QUERY_BUFFER_BINDING_AMD 0x9193
    #define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
    #define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A
    #define GL_QUERY_BY_REGION_NO_WAIT_NV 0x8E16
    #define GL_QUERY_BY_REGION_WAIT 0x8E15
    #define GL_QUERY_BY_REGION_WAIT_INVERTED 0x8E19
    #define GL_QUERY_BY_REGION_WAIT_NV 0x8E15
    #define GL_QUERY_COUNTER_BITS 0x8864
    #define GL_QUERY_COUNTER_BITS_ARB 0x8864
    #define GL_QUERY_COUNTER_BITS_EXT 0x8864
    #define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD 0x00000008
    #define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD 0x00000002
    #define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD 0x00000001
    #define GL_QUERY_KHR 0x82E3
    #define GL_QUERY_NO_WAIT 0x8E14
    #define GL_QUERY_NO_WAIT_INVERTED 0x8E18
    #define GL_QUERY_NO_WAIT_NV 0x8E14
    #define GL_QUERY_OBJECT_AMD 0x9153
    #define GL_QUERY_OBJECT_EXT 0x9153
    #define GL_QUERY_RESULT 0x8866
    #define GL_QUERY_RESULT_ARB 0x8866
    #define GL_QUERY_RESULT_AVAILABLE 0x8867
    #define GL_QUERY_RESULT_AVAILABLE_ARB 0x8867
    #define GL_QUERY_RESULT_AVAILABLE_EXT 0x8867
    #define GL_QUERY_RESULT_EXT 0x8866
    #define GL_QUERY_RESULT_NO_WAIT 0x9194
    #define GL_QUERY_RESULT_NO_WAIT_AMD 0x9194
    #define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD 0x00000004
    #define GL_QUERY_TARGET 0x82EA
    #define GL_QUERY_WAIT 0x8E13
    #define GL_QUERY_WAIT_INVERTED 0x8E17
    #define GL_QUERY_WAIT_NV 0x8E13
    #define GL_R11F_G11F_B10F 0x8C3A
    #define GL_R11F_G11F_B10F_APPLE 0x8C3A
    #define GL_R11F_G11F_B10F_EXT 0x8C3A
    #define GL_R16 0x822A
    #define GL_R16F 0x822D
    #define GL_R16F_EXT 0x822D
    #define GL_R16I 0x8233
    #define GL_R16UI 0x8234
    #define GL_R16_EXT 0x822A
    #define GL_R16_SNORM 0x8F98
    #define GL_R16_SNORM_EXT 0x8F98
    #define GL_R1UI_C3F_V3F_SUN 0x85C6
    #define GL_R1UI_C4F_N3F_V3F_SUN 0x85C8
    #define GL_R1UI_C4UB_V3F_SUN 0x85C5
    #define GL_R1UI_N3F_V3F_SUN 0x85C7
    #define GL_R1UI_T2F_C4F_N3F_V3F_SUN 0x85CB
    #define GL_R1UI_T2F_N3F_V3F_SUN 0x85CA
    #define GL_R1UI_T2F_V3F_SUN 0x85C9
    #define GL_R1UI_V3F_SUN 0x85C4
    #define GL_R32F 0x822E
    #define GL_R32F_EXT 0x822E
    #define GL_R32I 0x8235
    #define GL_R32UI 0x8236
    #define GL_R3_G3_B2 0x2A10
    #define GL_R8 0x8229
    #define GL_R8I 0x8231
    #define GL_R8UI 0x8232
    #define GL_R8_EXT 0x8229
    #define GL_R8_SNORM 0x8F94
    #define GL_RASTERIZER_DISCARD 0x8C89
    #define GL_RASTERIZER_DISCARD_EXT 0x8C89
    #define GL_RASTERIZER_DISCARD_NV 0x8C89
    #define GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT 0x932A
    #define GL_RASTER_MULTISAMPLE_EXT 0x9327
    #define GL_RASTER_POSITION_UNCLIPPED_IBM 0x19262
    #define GL_RASTER_SAMPLES_EXT 0x9328
    #define GL_READ_BUFFER 0x0C02
    #define GL_READ_BUFFER_EXT 0x0C02
    #define GL_READ_BUFFER_NV 0x0C02
    #define GL_READ_FRAMEBUFFER 0x8CA8
    #define GL_READ_FRAMEBUFFER_ANGLE 0x8CA8
    #define GL_READ_FRAMEBUFFER_APPLE 0x8CA8
    #define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
    #define GL_READ_FRAMEBUFFER_BINDING_ANGLE 0x8CAA
    #define GL_READ_FRAMEBUFFER_BINDING_APPLE 0x8CAA
    #define GL_READ_FRAMEBUFFER_BINDING_EXT 0x8CAA
    #define GL_READ_FRAMEBUFFER_BINDING_NV 0x8CAA
    #define GL_READ_FRAMEBUFFER_EXT 0x8CA8
    #define GL_READ_FRAMEBUFFER_NV 0x8CA8
    #define GL_READ_ONLY 0x88B8
    #define GL_READ_ONLY_ARB 0x88B8
    #define GL_READ_PIXELS 0x828C
    #define GL_READ_PIXELS_FORMAT 0x828D
    #define GL_READ_PIXELS_TYPE 0x828E
    #define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV 0x887B
    #define GL_READ_PIXEL_DATA_RANGE_NV 0x8879
    #define GL_READ_PIXEL_DATA_RANGE_POINTER_NV 0x887D
    #define GL_READ_WRITE 0x88BA
    #define GL_READ_WRITE_ARB 0x88BA
    #define GL_RECLAIM_MEMORY_HINT_PGI 0x1A1FE
    #define GL_RECT_NV 0xF6
    #define GL_RED 0x1903
    #define GL_REDUCE 0x8016
    #define GL_REDUCE_EXT 0x8016
    #define GL_RED_BITS 0x0D52
    #define GL_RED_BIT_ATI 0x00000001
    #define GL_RED_EXT 0x1903
    #define GL_RED_INTEGER 0x8D94
    #define GL_RED_INTEGER_EXT 0x8D94
    #define GL_RED_MAX_CLAMP_INGR 0x8564
    #define GL_RED_MIN_CLAMP_INGR 0x8560
    #define GL_RED_NV 0x1903
    #define GL_RED_SNORM 0x8F90
    #define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
    #define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
    #define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
    #define GL_REFERENCED_BY_GEOMETRY_SHADER_EXT 0x9309
    #define GL_REFERENCED_BY_GEOMETRY_SHADER_OES 0x9309
    #define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
    #define GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT 0x9307
    #define GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES 0x9307
    #define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
    #define GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT 0x9308
    #define GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES 0x9308
    #define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
    #define GL_REFERENCE_PLANE_EQUATION_SGIX 0x817E
    #define GL_REFERENCE_PLANE_SGIX 0x817D
    #define GL_REFLECTION_MAP 0x8512
    #define GL_REFLECTION_MAP_ARB 0x8512
    #define GL_REFLECTION_MAP_EXT 0x8512
    #define GL_REFLECTION_MAP_NV 0x8512
    #define GL_REGISTER_COMBINERS_NV 0x8522
    #define GL_REG_0_ATI 0x8921
    #define GL_REG_10_ATI 0x892B
    #define GL_REG_11_ATI 0x892C
    #define GL_REG_12_ATI 0x892D
    #define GL_REG_13_ATI 0x892E
    #define GL_REG_14_ATI 0x892F
    #define GL_REG_15_ATI 0x8930
    #define GL_REG_16_ATI 0x8931
    #define GL_REG_17_ATI 0x8932
    #define GL_REG_18_ATI 0x8933
    #define GL_REG_19_ATI 0x8934
    #define GL_REG_1_ATI 0x8922
    #define GL_REG_20_ATI 0x8935
    #define GL_REG_21_ATI 0x8936
    #define GL_REG_22_ATI 0x8937
    #define GL_REG_23_ATI 0x8938
    #define GL_REG_24_ATI 0x8939
    #define GL_REG_25_ATI 0x893A
    #define GL_REG_26_ATI 0x893B
    #define GL_REG_27_ATI 0x893C
    #define GL_REG_28_ATI 0x893D
    #define GL_REG_29_ATI 0x893E
    #define GL_REG_2_ATI 0x8923
    #define GL_REG_30_ATI 0x893F
    #define GL_REG_31_ATI 0x8940
    #define GL_REG_3_ATI 0x8924
    #define GL_REG_4_ATI 0x8925
    #define GL_REG_5_ATI 0x8926
    #define GL_REG_6_ATI 0x8927
    #define GL_REG_7_ATI 0x8928
    #define GL_REG_8_ATI 0x8929
    #define GL_REG_9_ATI 0x892A
    #define GL_RELATIVE_ARC_TO_NV 0xFF
    #define GL_RELATIVE_CONIC_CURVE_TO_NV 0x1B
    #define GL_RELATIVE_CUBIC_CURVE_TO_NV 0x0D
    #define GL_RELATIVE_HORIZONTAL_LINE_TO_NV 0x07
    #define GL_RELATIVE_LARGE_CCW_ARC_TO_NV 0x17
    #define GL_RELATIVE_LARGE_CW_ARC_TO_NV 0x19
    #define GL_RELATIVE_LINE_TO_NV 0x05
    #define GL_RELATIVE_MOVE_TO_NV 0x03
    #define GL_RELATIVE_QUADRATIC_CURVE_TO_NV 0x0B
    #define GL_RELATIVE_RECT_NV 0xF7
    #define GL_RELATIVE_ROUNDED_RECT2_NV 0xEB
    #define GL_RELATIVE_ROUNDED_RECT4_NV 0xED
    #define GL_RELATIVE_ROUNDED_RECT8_NV 0xEF
    #define GL_RELATIVE_ROUNDED_RECT_NV 0xE9
    #define GL_RELATIVE_SMALL_CCW_ARC_TO_NV 0x13
    #define GL_RELATIVE_SMALL_CW_ARC_TO_NV 0x15
    #define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV 0x11
    #define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0F
    #define GL_RELATIVE_VERTICAL_LINE_TO_NV 0x09
    #define GL_RELEASED_APPLE 0x8A19
    #define GL_RENDERBUFFER 0x8D41
    #define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
    #define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
    #define GL_RENDERBUFFER_BINDING 0x8CA7
    #define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
    #define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
    #define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
    #define GL_RENDERBUFFER_COLOR_SAMPLES_NV 0x8E10
    #define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV 0x8CAB
    #define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
    #define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
    #define GL_RENDERBUFFER_EXT 0x8D41
    #define GL_RENDERBUFFER_FREE_MEMORY_ATI 0x87FD
    #define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
    #define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
    #define GL_RENDERBUFFER_HEIGHT 0x8D43
    #define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
    #define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
    #define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
    #define GL_RENDERBUFFER_RED_SIZE 0x8D50
    #define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
    #define GL_RENDERBUFFER_SAMPLES 0x8CAB
    #define GL_RENDERBUFFER_SAMPLES_ANGLE 0x8CAB
    #define GL_RENDERBUFFER_SAMPLES_APPLE 0x8CAB
    #define GL_RENDERBUFFER_SAMPLES_EXT 0x8CAB
    #define GL_RENDERBUFFER_SAMPLES_IMG 0x9133
    #define GL_RENDERBUFFER_SAMPLES_NV 0x8CAB
    #define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
    #define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
    #define GL_RENDERBUFFER_WIDTH 0x8D42
    #define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
    #define GL_RENDERER 0x1F01
    #define GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM 0x8FB3
    #define GL_RENDER_GPU_MASK_NV 0x9558
    #define GL_REPEAT 0x2901
    #define GL_REPLACE 0x1E01
    #define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN 0x85C3
    #define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN 0x85C2
    #define GL_REPLACEMENT_CODE_ARRAY_SUN 0x85C0
    #define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN 0x85C1
    #define GL_REPLACEMENT_CODE_SUN 0x81D8
    #define GL_REPLACE_EXT 0x8062
    #define GL_REPLACE_MIDDLE_SUN 0x0002
    #define GL_REPLACE_OLDEST_SUN 0x0003
    #define GL_REPLACE_VALUE_AMD 0x874B
    #define GL_REPLICATE_BORDER 0x8153
    #define GL_REPLICATE_BORDER_HP 0x8153
    #define GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES 0x8D68
    #define GL_RESAMPLE_AVERAGE_OML 0x8988
    #define GL_RESAMPLE_DECIMATE_OML 0x8989
    #define GL_RESAMPLE_DECIMATE_SGIX 0x8430
    #define GL_RESAMPLE_REPLICATE_OML 0x8986
    #define GL_RESAMPLE_REPLICATE_SGIX 0x8433
    #define GL_RESAMPLE_ZERO_FILL_OML 0x8987
    #define GL_RESAMPLE_ZERO_FILL_SGIX 0x8434
    #define GL_RESCALE_NORMAL 0x803A
    #define GL_RESCALE_NORMAL_EXT 0x803A
    #define GL_RESET_NOTIFICATION_STRATEGY 0x8256
    #define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
    #define GL_RESET_NOTIFICATION_STRATEGY_EXT 0x8256
    #define GL_RESET_NOTIFICATION_STRATEGY_KHR 0x8256
    #define GL_RESTART_PATH_NV 0xF0
    #define GL_RESTART_SUN 0x0001
    #define GL_RETAINED_APPLE 0x8A1B
    #define GL_RG 0x8227
    #define GL_RG16 0x822C
    #define GL_RG16F 0x822F
    #define GL_RG16F_EXT 0x822F
    #define GL_RG16I 0x8239
    #define GL_RG16UI 0x823A
    #define GL_RG16_EXT 0x822C
    #define GL_RG16_SNORM 0x8F99
    #define GL_RG16_SNORM_EXT 0x8F99
    #define GL_RG32F 0x8230
    #define GL_RG32F_EXT 0x8230
    #define GL_RG32I 0x823B
    #define GL_RG32UI 0x823C
    #define GL_RG8 0x822B
    #define GL_RG8I 0x8237
    #define GL_RG8UI 0x8238
    #define GL_RG8_EXT 0x822B
    #define GL_RG8_SNORM 0x8F95
    #define GL_RGB 0x1907
    #define GL_RGB10 0x8052
    #define GL_RGB10_A2 0x8059
    #define GL_RGB10_A2UI 0x906F
    #define GL_RGB10_A2_EXT 0x8059
    #define GL_RGB10_EXT 0x8052
    #define GL_RGB12 0x8053
    #define GL_RGB12_EXT 0x8053
    #define GL_RGB16 0x8054
    #define GL_RGB16F 0x881B
    #define GL_RGB16F_ARB 0x881B
    #define GL_RGB16F_EXT 0x881B
    #define GL_RGB16I 0x8D89
    #define GL_RGB16I_EXT 0x8D89
    #define GL_RGB16UI 0x8D77
    #define GL_RGB16UI_EXT 0x8D77
    #define GL_RGB16_EXT 0x8054
    #define GL_RGB16_SNORM 0x8F9A
    #define GL_RGB16_SNORM_EXT 0x8F9A
    #define GL_RGB2_EXT 0x804E
    #define GL_RGB32F 0x8815
    #define GL_RGB32F_ARB 0x8815
    #define GL_RGB32F_EXT 0x8815
    #define GL_RGB32I 0x8D83
    #define GL_RGB32I_EXT 0x8D83
    #define GL_RGB32UI 0x8D71
    #define GL_RGB32UI_EXT 0x8D71
    #define GL_RGB4 0x804F
    #define GL_RGB4_EXT 0x804F
    #define GL_RGB4_S3TC 0x83A1
    #define GL_RGB5 0x8050
    #define GL_RGB565 0x8D62
    #define GL_RGB565_OES 0x8D62
    #define GL_RGB5_A1 0x8057
    #define GL_RGB5_A1_EXT 0x8057
    #define GL_RGB5_A1_OES 0x8057
    #define GL_RGB5_EXT 0x8050
    #define GL_RGB8 0x8051
    #define GL_RGB8I 0x8D8F
    #define GL_RGB8I_EXT 0x8D8F
    #define GL_RGB8UI 0x8D7D
    #define GL_RGB8UI_EXT 0x8D7D
    #define GL_RGB8_EXT 0x8051
    #define GL_RGB8_OES 0x8051
    #define GL_RGB8_SNORM 0x8F96
    #define GL_RGB9_E5 0x8C3D
    #define GL_RGB9_E5_APPLE 0x8C3D
    #define GL_RGB9_E5_EXT 0x8C3D
    #define GL_RGBA 0x1908
    #define GL_RGBA12 0x805A
    #define GL_RGBA12_EXT 0x805A
    #define GL_RGBA16 0x805B
    #define GL_RGBA16F 0x881A
    #define GL_RGBA16F_ARB 0x881A
    #define GL_RGBA16F_EXT 0x881A
    #define GL_RGBA16I 0x8D88
    #define GL_RGBA16I_EXT 0x8D88
    #define GL_RGBA16UI 0x8D76
    #define GL_RGBA16UI_EXT 0x8D76
    #define GL_RGBA16_EXT 0x805B
    #define GL_RGBA16_SNORM 0x8F9B
    #define GL_RGBA16_SNORM_EXT 0x8F9B
    #define GL_RGBA2 0x8055
    #define GL_RGBA2_EXT 0x8055
    #define GL_RGBA32F 0x8814
    #define GL_RGBA32F_ARB 0x8814
    #define GL_RGBA32F_EXT 0x8814
    #define GL_RGBA32I 0x8D82
    #define GL_RGBA32I_EXT 0x8D82
    #define GL_RGBA32UI 0x8D70
    #define GL_RGBA32UI_EXT 0x8D70
    #define GL_RGBA4 0x8056
    #define GL_RGBA4_DXT5_S3TC 0x83A5
    #define GL_RGBA4_EXT 0x8056
    #define GL_RGBA4_OES 0x8056
    #define GL_RGBA4_S3TC 0x83A3
    #define GL_RGBA8 0x8058
    #define GL_RGBA8I 0x8D8E
    #define GL_RGBA8I_EXT 0x8D8E
    #define GL_RGBA8UI 0x8D7C
    #define GL_RGBA8UI_EXT 0x8D7C
    #define GL_RGBA8_EXT 0x8058
    #define GL_RGBA8_OES 0x8058
    #define GL_RGBA8_SNORM 0x8F97
    #define GL_RGBA_DXT5_S3TC 0x83A4
    #define GL_RGBA_FLOAT16_APPLE 0x881A
    #define GL_RGBA_FLOAT16_ATI 0x881A
    #define GL_RGBA_FLOAT32_APPLE 0x8814
    #define GL_RGBA_FLOAT32_ATI 0x8814
    #define GL_RGBA_FLOAT_MODE_ARB 0x8820
    #define GL_RGBA_FLOAT_MODE_ATI 0x8820
    #define GL_RGBA_INTEGER 0x8D99
    #define GL_RGBA_INTEGER_EXT 0x8D99
    #define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
    #define GL_RGBA_S3TC 0x83A2
    #define GL_RGBA_SIGNED_COMPONENTS_EXT 0x8C3C
    #define GL_RGBA_SNORM 0x8F93
    #define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV 0x86D9
    #define GL_RGB_422_APPLE 0x8A1F
    #define GL_RGB_FLOAT16_APPLE 0x881B
    #define GL_RGB_FLOAT16_ATI 0x881B
    #define GL_RGB_FLOAT32_APPLE 0x8815
    #define GL_RGB_FLOAT32_ATI 0x8815
    #define GL_RGB_INTEGER 0x8D98
    #define GL_RGB_INTEGER_EXT 0x8D98
    #define GL_RGB_RAW_422_APPLE 0x8A51
    #define GL_RGB_S3TC 0x83A0
    #define GL_RGB_SCALE 0x8573
    #define GL_RGB_SCALE_ARB 0x8573
    #define GL_RGB_SCALE_EXT 0x8573
    #define GL_RGB_SNORM 0x8F92
    #define GL_RG_EXT 0x8227
    #define GL_RG_INTEGER 0x8228
    #define GL_RG_SNORM 0x8F91
    #define GL_RIGHT 0x0407
    #define GL_ROUNDED_RECT2_NV 0xEA
    #define GL_ROUNDED_RECT4_NV 0xEC
    #define GL_ROUNDED_RECT8_NV 0xEE
    #define GL_ROUNDED_RECT_NV 0xE8
    #define GL_ROUND_NV 0x90A4
    #define GL_SAMPLER 0x82E6
    #define GL_SAMPLER_1D 0x8B5D
    #define GL_SAMPLER_1D_ARB 0x8B5D
    #define GL_SAMPLER_1D_ARRAY 0x8DC0
    #define GL_SAMPLER_1D_ARRAY_EXT 0x8DC0
    #define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
    #define GL_SAMPLER_1D_ARRAY_SHADOW_EXT 0x8DC3
    #define GL_SAMPLER_1D_SHADOW 0x8B61
    #define GL_SAMPLER_1D_SHADOW_ARB 0x8B61
    #define GL_SAMPLER_2D 0x8B5E
    #define GL_SAMPLER_2D_ARB 0x8B5E
    #define GL_SAMPLER_2D_ARRAY 0x8DC1
    #define GL_SAMPLER_2D_ARRAY_EXT 0x8DC1
    #define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
    #define GL_SAMPLER_2D_ARRAY_SHADOW_EXT 0x8DC4
    #define GL_SAMPLER_2D_ARRAY_SHADOW_NV 0x8DC4
    #define GL_SAMPLER_2D_MULTISAMPLE 0x9108
    #define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
    #define GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910B
    #define GL_SAMPLER_2D_RECT 0x8B63
    #define GL_SAMPLER_2D_RECT_ARB 0x8B63
    #define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
    #define GL_SAMPLER_2D_RECT_SHADOW_ARB 0x8B64
    #define GL_SAMPLER_2D_SHADOW 0x8B62
    #define GL_SAMPLER_2D_SHADOW_ARB 0x8B62
    #define GL_SAMPLER_2D_SHADOW_EXT 0x8B62
    #define GL_SAMPLER_3D 0x8B5F
    #define GL_SAMPLER_3D_ARB 0x8B5F
    #define GL_SAMPLER_3D_OES 0x8B5F
    #define GL_SAMPLER_BINDING 0x8919
    #define GL_SAMPLER_BUFFER 0x8DC2
    #define GL_SAMPLER_BUFFER_AMD 0x9001
    #define GL_SAMPLER_BUFFER_EXT 0x8DC2
    #define GL_SAMPLER_BUFFER_OES 0x8DC2
    #define GL_SAMPLER_CUBE 0x8B60
    #define GL_SAMPLER_CUBE_ARB 0x8B60
    #define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
    #define GL_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900C
    #define GL_SAMPLER_CUBE_MAP_ARRAY_EXT 0x900C
    #define GL_SAMPLER_CUBE_MAP_ARRAY_OES 0x900C
    #define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
    #define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB 0x900D
    #define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT 0x900D
    #define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES 0x900D
    #define GL_SAMPLER_CUBE_SHADOW 0x8DC5
    #define GL_SAMPLER_CUBE_SHADOW_EXT 0x8DC5
    #define GL_SAMPLER_CUBE_SHADOW_NV 0x8DC5
    #define GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT 0x8BE7
    #define GL_SAMPLER_EXTERNAL_OES 0x8D66
    #define GL_SAMPLER_KHR 0x82E6
    #define GL_SAMPLER_OBJECT_AMD 0x9155
    #define GL_SAMPLER_RENDERBUFFER_NV 0x8E56
    #define GL_SAMPLES 0x80A9
    #define GL_SAMPLES_3DFX 0x86B4
    #define GL_SAMPLES_ARB 0x80A9
    #define GL_SAMPLES_EXT 0x80A9
    #define GL_SAMPLES_PASSED 0x8914
    #define GL_SAMPLES_PASSED_ARB 0x8914
    #define GL_SAMPLES_SGIS 0x80A9
    #define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
    #define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB 0x809E
    #define GL_SAMPLE_ALPHA_TO_MASK_EXT 0x809E
    #define GL_SAMPLE_ALPHA_TO_MASK_SGIS 0x809E
    #define GL_SAMPLE_ALPHA_TO_ONE 0x809F
    #define GL_SAMPLE_ALPHA_TO_ONE_ARB 0x809F
    #define GL_SAMPLE_ALPHA_TO_ONE_EXT 0x809F
    #define GL_SAMPLE_ALPHA_TO_ONE_SGIS 0x809F
    #define GL_SAMPLE_BUFFERS 0x80A8
    #define GL_SAMPLE_BUFFERS_3DFX 0x86B3
    #define GL_SAMPLE_BUFFERS_ARB 0x80A8
    #define GL_SAMPLE_BUFFERS_EXT 0x80A8
    #define GL_SAMPLE_BUFFERS_SGIS 0x80A8
    #define GL_SAMPLE_COVERAGE 0x80A0
    #define GL_SAMPLE_COVERAGE_ARB 0x80A0
    #define GL_SAMPLE_COVERAGE_INVERT 0x80AB
    #define GL_SAMPLE_COVERAGE_INVERT_ARB 0x80AB
    #define GL_SAMPLE_COVERAGE_VALUE 0x80AA
    #define GL_SAMPLE_COVERAGE_VALUE_ARB 0x80AA
    #define GL_SAMPLE_LOCATION_ARB 0x8E50
    #define GL_SAMPLE_LOCATION_NV 0x8E50
    #define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB 0x933F
    #define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV 0x933F
    #define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB 0x933E
    #define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV 0x933E
    #define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB 0x933D
    #define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV 0x933D
    #define GL_SAMPLE_MASK 0x8E51
    #define GL_SAMPLE_MASK_EXT 0x80A0
    #define GL_SAMPLE_MASK_INVERT_EXT 0x80AB
    #define GL_SAMPLE_MASK_INVERT_SGIS 0x80AB
    #define GL_SAMPLE_MASK_NV 0x8E51
    #define GL_SAMPLE_MASK_SGIS 0x80A0
    #define GL_SAMPLE_MASK_VALUE 0x8E52
    #define GL_SAMPLE_MASK_VALUE_EXT 0x80AA
    #define GL_SAMPLE_MASK_VALUE_NV 0x8E52
    #define GL_SAMPLE_MASK_VALUE_SGIS 0x80AA
    #define GL_SAMPLE_PATTERN_EXT 0x80AC
    #define GL_SAMPLE_PATTERN_SGIS 0x80AC
    #define GL_SAMPLE_POSITION 0x8E50
    #define GL_SAMPLE_POSITION_NV 0x8E50
    #define GL_SAMPLE_SHADING 0x8C36
    #define GL_SAMPLE_SHADING_ARB 0x8C36
    #define GL_SAMPLE_SHADING_OES 0x8C36
    #define GL_SATURATE_BIT_ATI 0x00000040
    #define GL_SCALAR_EXT 0x87BE
    #define GL_SCALEBIAS_HINT_SGIX 0x8322
    #define GL_SCALED_RESOLVE_FASTEST_EXT 0x90BA
    #define GL_SCALED_RESOLVE_NICEST_EXT 0x90BB
    #define GL_SCALE_BY_FOUR_NV 0x853F
    #define GL_SCALE_BY_ONE_HALF_NV 0x8540
    #define GL_SCALE_BY_TWO_NV 0x853E
    #define GL_SCISSOR_BOX 0x0C10
    #define GL_SCISSOR_COMMAND_NV 0x0011
    #define GL_SCISSOR_TEST 0x0C11
    #define GL_SCREEN 0x9295
    #define GL_SCREEN_COORDINATES_REND 0x8490
    #define GL_SCREEN_KHR 0x9295
    #define GL_SCREEN_NV 0x9295
    #define GL_SECONDARY_COLOR_ARRAY 0x845E
    #define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
    #define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
    #define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB 0x889C
    #define GL_SECONDARY_COLOR_ARRAY_EXT 0x845E
    #define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
    #define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
    #define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
    #define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
    #define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT 0x845D
    #define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
    #define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT 0x845A
    #define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
    #define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT 0x845C
    #define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
    #define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT 0x845B
    #define GL_SECONDARY_COLOR_NV 0x852D
    #define GL_SECONDARY_INTERPOLATOR_ATI 0x896D
    #define GL_SEPARABLE_2D 0x8012
    #define GL_SEPARABLE_2D_EXT 0x8012
    #define GL_SEPARATE_ATTRIBS 0x8C8D
    #define GL_SEPARATE_ATTRIBS_EXT 0x8C8D
    #define GL_SEPARATE_ATTRIBS_NV 0x8C8D
    #define GL_SEPARATE_SPECULAR_COLOR 0x81FA
    #define GL_SEPARATE_SPECULAR_COLOR_EXT 0x81FA
    #define GL_SET 0x150F
    #define GL_SET_AMD 0x874A
    #define GL_SGX_BINARY_IMG 0x8C0A
    #define GL_SGX_PROGRAM_BINARY_IMG 0x9130
    #define GL_SHADER 0x82E1
    #define GL_SHADER_BINARY_DMP 0x9250
    #define GL_SHADER_BINARY_FORMATS 0x8DF8
    #define GL_SHADER_BINARY_FORMAT_SPIR_V_ARB 0x9551
    #define GL_SHADER_BINARY_VIV 0x8FC4
    #define GL_SHADER_COMPILER 0x8DFA
    #define GL_SHADER_CONSISTENT_NV 0x86DD
    #define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV 0x00000010
    #define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
    #define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT 0x00000020
    #define GL_SHADER_IMAGE_ATOMIC 0x82A6
    #define GL_SHADER_IMAGE_LOAD 0x82A4
    #define GL_SHADER_IMAGE_STORE 0x82A5
    #define GL_SHADER_INCLUDE_ARB 0x8DAE
    #define GL_SHADER_KHR 0x82E1
    #define GL_SHADER_OBJECT_ARB 0x8B48
    #define GL_SHADER_OBJECT_EXT 0x8B48
    #define GL_SHADER_OPERATION_NV 0x86DF
    #define GL_SHADER_PIXEL_LOCAL_STORAGE_EXT 0x8F64
    #define GL_SHADER_SOURCE_LENGTH 0x8B88
    #define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
    #define GL_SHADER_STORAGE_BLOCK 0x92E6
    #define GL_SHADER_STORAGE_BUFFER 0x90D2
    #define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
    #define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
    #define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
    #define GL_SHADER_STORAGE_BUFFER_START 0x90D4
    #define GL_SHADER_TYPE 0x8B4F
    #define GL_SHADING_LANGUAGE_VERSION 0x8B8C
    #define GL_SHADING_LANGUAGE_VERSION_ARB 0x8B8C
    #define GL_SHADOW_AMBIENT_SGIX 0x80BF
    #define GL_SHADOW_ATTENUATION_EXT 0x834E
    #define GL_SHARED_EDGE_NV 0xC0
    #define GL_SHARED_TEXTURE_PALETTE_EXT 0x81FB
    #define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS 0x80B0
    #define GL_SHORT 0x1402
    #define GL_SIGNALED 0x9119
    #define GL_SIGNALED_APPLE 0x9119
    #define GL_SIGNED_ALPHA8_NV 0x8706
    #define GL_SIGNED_ALPHA_NV 0x8705
    #define GL_SIGNED_HILO16_NV 0x86FA
    #define GL_SIGNED_HILO8_NV 0x885F
    #define GL_SIGNED_HILO_NV 0x86F9
    #define GL_SIGNED_IDENTITY_NV 0x853C
    #define GL_SIGNED_INTENSITY8_NV 0x8708
    #define GL_SIGNED_INTENSITY_NV 0x8707
    #define GL_SIGNED_LUMINANCE8_ALPHA8_NV 0x8704
    #define GL_SIGNED_LUMINANCE8_NV 0x8702
    #define GL_SIGNED_LUMINANCE_ALPHA_NV 0x8703
    #define GL_SIGNED_LUMINANCE_NV 0x8701
    #define GL_SIGNED_NEGATE_NV 0x853D
    #define GL_SIGNED_NORMALIZED 0x8F9C
    #define GL_SIGNED_RGB8_NV 0x86FF
    #define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV 0x870D
    #define GL_SIGNED_RGBA8_NV 0x86FC
    #define GL_SIGNED_RGBA_NV 0x86FB
    #define GL_SIGNED_RGB_NV 0x86FE
    #define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV 0x870C
    #define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
    #define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
    #define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
    #define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
    #define GL_SINGLE_COLOR 0x81F9
    #define GL_SINGLE_COLOR_EXT 0x81F9
    #define GL_SKIP_COMPONENTS1_NV -6
    #define GL_SKIP_COMPONENTS2_NV -5
    #define GL_SKIP_COMPONENTS3_NV -4
    #define GL_SKIP_COMPONENTS4_NV -3
    #define GL_SKIP_DECODE_EXT 0x8A4A
    #define GL_SKIP_MISSING_GLYPH_NV 0x90A9
    #define GL_SLICE_ACCUM_SUN 0x85CC
    #define GL_SLUMINANCE 0x8C46
    #define GL_SLUMINANCE8 0x8C47
    #define GL_SLUMINANCE8_ALPHA8 0x8C45
    #define GL_SLUMINANCE8_ALPHA8_EXT 0x8C45
    #define GL_SLUMINANCE8_ALPHA8_NV 0x8C45
    #define GL_SLUMINANCE8_EXT 0x8C47
    #define GL_SLUMINANCE8_NV 0x8C47
    #define GL_SLUMINANCE_ALPHA 0x8C44
    #define GL_SLUMINANCE_ALPHA_EXT 0x8C44
    #define GL_SLUMINANCE_ALPHA_NV 0x8C44
    #define GL_SLUMINANCE_EXT 0x8C46
    #define GL_SLUMINANCE_NV 0x8C46
    #define GL_SMALL_CCW_ARC_TO_NV 0x12
    #define GL_SMALL_CW_ARC_TO_NV 0x14
    #define GL_SMAPHS30_PROGRAM_BINARY_DMP 0x9251
    #define GL_SMAPHS_PROGRAM_BINARY_DMP 0x9252
    #define GL_SMOOTH_CUBIC_CURVE_TO_NV 0x10
    #define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
    #define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
    #define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
    #define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
    #define GL_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0E
    #define GL_SM_COUNT_NV 0x933B
    #define GL_SOFTLIGHT 0x929C
    #define GL_SOFTLIGHT_KHR 0x929C
    #define GL_SOFTLIGHT_NV 0x929C
    #define GL_SOURCE0_ALPHA 0x8588
    #define GL_SOURCE0_ALPHA_ARB 0x8588
    #define GL_SOURCE0_ALPHA_EXT 0x8588
    #define GL_SOURCE0_RGB 0x8580
    #define GL_SOURCE0_RGB_ARB 0x8580
    #define GL_SOURCE0_RGB_EXT 0x8580
    #define GL_SOURCE1_ALPHA 0x8589
    #define GL_SOURCE1_ALPHA_ARB 0x8589
    #define GL_SOURCE1_ALPHA_EXT 0x8589
    #define GL_SOURCE1_RGB 0x8581
    #define GL_SOURCE1_RGB_ARB 0x8581
    #define GL_SOURCE1_RGB_EXT 0x8581
    #define GL_SOURCE2_ALPHA 0x858A
    #define GL_SOURCE2_ALPHA_ARB 0x858A
    #define GL_SOURCE2_ALPHA_EXT 0x858A
    #define GL_SOURCE2_RGB 0x8582
    #define GL_SOURCE2_RGB_ARB 0x8582
    #define GL_SOURCE2_RGB_EXT 0x8582
    #define GL_SOURCE3_ALPHA_NV 0x858B
    #define GL_SOURCE3_RGB_NV 0x8583
    #define GL_SPARE0_NV 0x852E
    #define GL_SPARE0_PLUS_SECONDARY_COLOR_NV 0x8532
    #define GL_SPARE1_NV 0x852F
    #define GL_SPARSE_BUFFER_PAGE_SIZE_ARB 0x82F8
    #define GL_SPARSE_STORAGE_BIT_ARB 0x0400
    #define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB 0x91A9
    #define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT 0x91A9
    #define GL_SPIR_V_BINARY_ARB 0x9552
    #define GL_SPRITE_AXIAL_SGIX 0x814C
    #define GL_SPRITE_AXIS_SGIX 0x814A
    #define GL_SPRITE_EYE_ALIGNED_SGIX 0x814E
    #define GL_SPRITE_MODE_SGIX 0x8149
    #define GL_SPRITE_OBJECT_ALIGNED_SGIX 0x814D
    #define GL_SPRITE_SGIX 0x8148
    #define GL_SPRITE_TRANSLATION_SGIX 0x814B
    #define GL_SQUARE_NV 0x90A3
    #define GL_SR8_EXT 0x8FBD
    #define GL_SRC0_ALPHA 0x8588
    #define GL_SRC0_RGB 0x8580
    #define GL_SRC1_ALPHA 0x8589
    #define GL_SRC1_ALPHA_EXT 0x8589
    #define GL_SRC1_COLOR 0x88F9
    #define GL_SRC1_COLOR_EXT 0x88F9
    #define GL_SRC1_RGB 0x8581
    #define GL_SRC2_ALPHA 0x858A
    #define GL_SRC2_RGB 0x8582
    #define GL_SRC_ALPHA 0x0302
    #define GL_SRC_ALPHA_SATURATE 0x0308
    #define GL_SRC_ALPHA_SATURATE_EXT 0x0308
    #define GL_SRC_ATOP_NV 0x928E
    #define GL_SRC_COLOR 0x0300
    #define GL_SRC_IN_NV 0x928A
    #define GL_SRC_NV 0x9286
    #define GL_SRC_OUT_NV 0x928C
    #define GL_SRC_OVER_NV 0x9288
    #define GL_SRG8_EXT 0x8FBE
    #define GL_SRGB 0x8C40
    #define GL_SRGB8 0x8C41
    #define GL_SRGB8_ALPHA8 0x8C43
    #define GL_SRGB8_ALPHA8_EXT 0x8C43
    #define GL_SRGB8_EXT 0x8C41
    #define GL_SRGB8_NV 0x8C41
    #define GL_SRGB_ALPHA 0x8C42
    #define GL_SRGB_ALPHA_EXT 0x8C42
    #define GL_SRGB_DECODE_ARB 0x8299
    #define GL_SRGB_EXT 0x8C40
    #define GL_SRGB_READ 0x8297
    #define GL_SRGB_WRITE 0x8298
    #define GL_STACK_OVERFLOW 0x0503
    #define GL_STACK_OVERFLOW_KHR 0x0503
    #define GL_STACK_UNDERFLOW 0x0504
    #define GL_STACK_UNDERFLOW_KHR 0x0504
    #define GL_STANDARD_FONT_FORMAT_NV 0x936C
    #define GL_STANDARD_FONT_NAME_NV 0x9072
    #define GL_STATE_RESTORE 0x8BDC
    #define GL_STATIC_ATI 0x8760
    #define GL_STATIC_COPY 0x88E6
    #define GL_STATIC_COPY_ARB 0x88E6
    #define GL_STATIC_DRAW 0x88E4
    #define GL_STATIC_DRAW_ARB 0x88E4
    #define GL_STATIC_READ 0x88E5
    #define GL_STATIC_READ_ARB 0x88E5
    #define GL_STATIC_VERTEX_ARRAY_IBM 103061
    #define GL_STENCIL 0x1802
    #define GL_STENCIL_ATTACHMENT 0x8D20
    #define GL_STENCIL_ATTACHMENT_EXT 0x8D20
    #define GL_STENCIL_BACK_FAIL 0x8801
    #define GL_STENCIL_BACK_FAIL_ATI 0x8801
    #define GL_STENCIL_BACK_FUNC 0x8800
    #define GL_STENCIL_BACK_FUNC_ATI 0x8800
    #define GL_STENCIL_BACK_OP_VALUE_AMD 0x874D
    #define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
    #define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI 0x8802
    #define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
    #define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI 0x8803
    #define GL_STENCIL_BACK_REF 0x8CA3
    #define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
    #define GL_STENCIL_BACK_WRITEMASK 0x8CA5
    #define GL_STENCIL_BITS 0x0D57
    #define GL_STENCIL_BUFFER_BIT 0x00000400
    #define GL_STENCIL_BUFFER_BIT0_QCOM 0x00010000
    #define GL_STENCIL_BUFFER_BIT1_QCOM 0x00020000
    #define GL_STENCIL_BUFFER_BIT2_QCOM 0x00040000
    #define GL_STENCIL_BUFFER_BIT3_QCOM 0x00080000
    #define GL_STENCIL_BUFFER_BIT4_QCOM 0x00100000
    #define GL_STENCIL_BUFFER_BIT5_QCOM 0x00200000
    #define GL_STENCIL_BUFFER_BIT6_QCOM 0x00400000
    #define GL_STENCIL_BUFFER_BIT7_QCOM 0x00800000
    #define GL_STENCIL_CLEAR_TAG_VALUE_EXT 0x88F3
    #define GL_STENCIL_CLEAR_VALUE 0x0B91
    #define GL_STENCIL_COMPONENTS 0x8285
    #define GL_STENCIL_EXT 0x1802
    #define GL_STENCIL_FAIL 0x0B94
    #define GL_STENCIL_FUNC 0x0B92
    #define GL_STENCIL_INDEX 0x1901
    #define GL_STENCIL_INDEX1 0x8D46
    #define GL_STENCIL_INDEX16 0x8D49
    #define GL_STENCIL_INDEX16_EXT 0x8D49
    #define GL_STENCIL_INDEX1_EXT 0x8D46
    #define GL_STENCIL_INDEX1_OES 0x8D46
    #define GL_STENCIL_INDEX4 0x8D47
    #define GL_STENCIL_INDEX4_EXT 0x8D47
    #define GL_STENCIL_INDEX4_OES 0x8D47
    #define GL_STENCIL_INDEX8 0x8D48
    #define GL_STENCIL_INDEX8_EXT 0x8D48
    #define GL_STENCIL_INDEX8_OES 0x8D48
    #define GL_STENCIL_INDEX_OES 0x1901
    #define GL_STENCIL_OP_VALUE_AMD 0x874C
    #define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
    #define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
    #define GL_STENCIL_REF 0x0B97
    #define GL_STENCIL_REF_COMMAND_NV 0x000C
    #define GL_STENCIL_RENDERABLE 0x8288
    #define GL_STENCIL_SAMPLES_NV 0x932E
    #define GL_STENCIL_TAG_BITS_EXT 0x88F2
    #define GL_STENCIL_TEST 0x0B90
    #define GL_STENCIL_TEST_TWO_SIDE_EXT 0x8910
    #define GL_STENCIL_VALUE_MASK 0x0B93
    #define GL_STENCIL_WRITEMASK 0x0B98
    #define GL_STEREO 0x0C33
    #define GL_STORAGE_CACHED_APPLE 0x85BE
    #define GL_STORAGE_CLIENT_APPLE 0x85B4
    #define GL_STORAGE_PRIVATE_APPLE 0x85BD
    #define GL_STORAGE_SHARED_APPLE 0x85BF
    #define GL_STREAM_COPY 0x88E2
    #define GL_STREAM_COPY_ARB 0x88E2
    #define GL_STREAM_DRAW 0x88E0
    #define GL_STREAM_DRAW_ARB 0x88E0
    #define GL_STREAM_RASTERIZATION_AMD 0x91A0
    #define GL_STREAM_READ 0x88E1
    #define GL_STREAM_READ_ARB 0x88E1
    #define GL_STRICT_DEPTHFUNC_HINT_PGI 0x1A216
    #define GL_STRICT_LIGHTING_HINT_PGI 0x1A217
    #define GL_STRICT_SCISSOR_HINT_PGI 0x1A218
    #define GL_SUBPIXEL_BITS 0x0D50
    #define GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV 0x9347
    #define GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV 0x9348
    #define GL_SUBSAMPLE_DISTANCE_AMD 0x883F
    #define GL_SUBTRACT 0x84E7
    #define GL_SUBTRACT_ARB 0x84E7
    #define GL_SUB_ATI 0x8965
    #define GL_SUCCESS_NV 0x902F
    #define GL_SUPERSAMPLE_SCALE_X_NV 0x9372
    #define GL_SUPERSAMPLE_SCALE_Y_NV 0x9373
    #define GL_SURFACE_MAPPED_NV 0x8700
    #define GL_SURFACE_REGISTERED_NV 0x86FD
    #define GL_SURFACE_STATE_NV 0x86EB
    #define GL_SWIZZLE_STQ_ATI 0x8977
    #define GL_SWIZZLE_STQ_DQ_ATI 0x8979
    #define GL_SWIZZLE_STRQ_ATI 0x897A
    #define GL_SWIZZLE_STRQ_DQ_ATI 0x897B
    #define GL_SWIZZLE_STR_ATI 0x8976
    #define GL_SWIZZLE_STR_DR_ATI 0x8978
    #define GL_SYNC_CL_EVENT_ARB 0x8240
    #define GL_SYNC_CL_EVENT_COMPLETE_ARB 0x8241
    #define GL_SYNC_CONDITION 0x9113
    #define GL_SYNC_CONDITION_APPLE 0x9113
    #define GL_SYNC_FENCE 0x9116
    #define GL_SYNC_FENCE_APPLE 0x9116
    #define GL_SYNC_FLAGS 0x9115
    #define GL_SYNC_FLAGS_APPLE 0x9115
    #define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
    #define GL_SYNC_FLUSH_COMMANDS_BIT_APPLE 0x00000001
    #define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
    #define GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE 0x9117
    #define GL_SYNC_OBJECT_APPLE 0x8A53
    #define GL_SYNC_STATUS 0x9114
    #define GL_SYNC_STATUS_APPLE 0x9114
    #define GL_SYNC_X11_FENCE_EXT 0x90E1
    #define GL_SYSTEM_FONT_NAME_NV 0x9073
    #define GL_T2F_IUI_N3F_V2F_EXT 0x81B3
    #define GL_T2F_IUI_N3F_V3F_EXT 0x81B4
    #define GL_T2F_IUI_V2F_EXT 0x81B1
    #define GL_T2F_IUI_V3F_EXT 0x81B2
    #define GL_TABLE_TOO_LARGE 0x8031
    #define GL_TABLE_TOO_LARGE_EXT 0x8031
    #define GL_TANGENT_ARRAY_EXT 0x8439
    #define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
    #define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
    #define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
    #define GL_TERMINATE_SEQUENCE_COMMAND_NV 0x0000
    #define GL_TESSELLATION_FACTOR_AMD 0x9005
    #define GL_TESSELLATION_MODE_AMD 0x9004
    #define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
    #define GL_TESS_CONTROL_OUTPUT_VERTICES_EXT 0x8E75
    #define GL_TESS_CONTROL_OUTPUT_VERTICES_OES 0x8E75
    #define GL_TESS_CONTROL_PROGRAM_NV 0x891E
    #define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV 0x8C74
    #define GL_TESS_CONTROL_SHADER 0x8E88
    #define GL_TESS_CONTROL_SHADER_BIT 0x00000008
    #define GL_TESS_CONTROL_SHADER_BIT_EXT 0x00000008
    #define GL_TESS_CONTROL_SHADER_BIT_OES 0x00000008
    #define GL_TESS_CONTROL_SHADER_EXT 0x8E88
    #define GL_TESS_CONTROL_SHADER_OES 0x8E88
    #define GL_TESS_CONTROL_SHADER_PATCHES_ARB 0x82F1
    #define GL_TESS_CONTROL_SUBROUTINE 0x92E9
    #define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
    #define GL_TESS_CONTROL_TEXTURE 0x829C
    #define GL_TESS_EVALUATION_PROGRAM_NV 0x891F
    #define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV 0x8C75
    #define GL_TESS_EVALUATION_SHADER 0x8E87
    #define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
    #define GL_TESS_EVALUATION_SHADER_BIT_EXT 0x00000010
    #define GL_TESS_EVALUATION_SHADER_BIT_OES 0x00000010
    #define GL_TESS_EVALUATION_SHADER_EXT 0x8E87
    #define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB 0x82F2
    #define GL_TESS_EVALUATION_SHADER_OES 0x8E87
    #define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
    #define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
    #define GL_TESS_EVALUATION_TEXTURE 0x829D
    #define GL_TESS_GEN_MODE 0x8E76
    #define GL_TESS_GEN_MODE_EXT 0x8E76
    #define GL_TESS_GEN_MODE_OES 0x8E76
    #define GL_TESS_GEN_POINT_MODE 0x8E79
    #define GL_TESS_GEN_POINT_MODE_EXT 0x8E79
    #define GL_TESS_GEN_POINT_MODE_OES 0x8E79
    #define GL_TESS_GEN_SPACING 0x8E77
    #define GL_TESS_GEN_SPACING_EXT 0x8E77
    #define GL_TESS_GEN_SPACING_OES 0x8E77
    #define GL_TESS_GEN_VERTEX_ORDER 0x8E78
    #define GL_TESS_GEN_VERTEX_ORDER_EXT 0x8E78
    #define GL_TESS_GEN_VERTEX_ORDER_OES 0x8E78
    #define GL_TEXCOORD1_BIT_PGI 0x10000000
    #define GL_TEXCOORD2_BIT_PGI 0x20000000
    #define GL_TEXCOORD3_BIT_PGI 0x40000000
    #define GL_TEXCOORD4_BIT_PGI 0x80000000
    #define GL_TEXTURE 0x1702
    #define GL_TEXTURE0 0x84C0
    #define GL_TEXTURE0_ARB 0x84C0
    #define GL_TEXTURE1 0x84C1
    #define GL_TEXTURE10 0x84CA
    #define GL_TEXTURE10_ARB 0x84CA
    #define GL_TEXTURE11 0x84CB
    #define GL_TEXTURE11_ARB 0x84CB
    #define GL_TEXTURE12 0x84CC
    #define GL_TEXTURE12_ARB 0x84CC
    #define GL_TEXTURE13 0x84CD
    #define GL_TEXTURE13_ARB 0x84CD
    #define GL_TEXTURE14 0x84CE
    #define GL_TEXTURE14_ARB 0x84CE
    #define GL_TEXTURE15 0x84CF
    #define GL_TEXTURE15_ARB 0x84CF
    #define GL_TEXTURE16 0x84D0
    #define GL_TEXTURE16_ARB 0x84D0
    #define GL_TEXTURE17 0x84D1
    #define GL_TEXTURE17_ARB 0x84D1
    #define GL_TEXTURE18 0x84D2
    #define GL_TEXTURE18_ARB 0x84D2
    #define GL_TEXTURE19 0x84D3
    #define GL_TEXTURE19_ARB 0x84D3
    #define GL_TEXTURE1_ARB 0x84C1
    #define GL_TEXTURE2 0x84C2
    #define GL_TEXTURE20 0x84D4
    #define GL_TEXTURE20_ARB 0x84D4
    #define GL_TEXTURE21 0x84D5
    #define GL_TEXTURE21_ARB 0x84D5
    #define GL_TEXTURE22 0x84D6
    #define GL_TEXTURE22_ARB 0x84D6
    #define GL_TEXTURE23 0x84D7
    #define GL_TEXTURE23_ARB 0x84D7
    #define GL_TEXTURE24 0x84D8
    #define GL_TEXTURE24_ARB 0x84D8
    #define GL_TEXTURE25 0x84D9
    #define GL_TEXTURE25_ARB 0x84D9
    #define GL_TEXTURE26 0x84DA
    #define GL_TEXTURE26_ARB 0x84DA
    #define GL_TEXTURE27 0x84DB
    #define GL_TEXTURE27_ARB 0x84DB
    #define GL_TEXTURE28 0x84DC
    #define GL_TEXTURE28_ARB 0x84DC
    #define GL_TEXTURE29 0x84DD
    #define GL_TEXTURE29_ARB 0x84DD
    #define GL_TEXTURE2_ARB 0x84C2
    #define GL_TEXTURE3 0x84C3
    #define GL_TEXTURE30 0x84DE
    #define GL_TEXTURE30_ARB 0x84DE
    #define GL_TEXTURE31 0x84DF
    #define GL_TEXTURE31_ARB 0x84DF
    #define GL_TEXTURE3_ARB 0x84C3
    #define GL_TEXTURE4 0x84C4
    #define GL_TEXTURE4_ARB 0x84C4
    #define GL_TEXTURE5 0x84C5
    #define GL_TEXTURE5_ARB 0x84C5
    #define GL_TEXTURE6 0x84C6
    #define GL_TEXTURE6_ARB 0x84C6
    #define GL_TEXTURE7 0x84C7
    #define GL_TEXTURE7_ARB 0x84C7
    #define GL_TEXTURE8 0x84C8
    #define GL_TEXTURE8_ARB 0x84C8
    #define GL_TEXTURE9 0x84C9
    #define GL_TEXTURE9_ARB 0x84C9
    #define GL_TEXTURE_1D 0x0DE0
    #define GL_TEXTURE_1D_ARRAY 0x8C18
    #define GL_TEXTURE_1D_ARRAY_EXT 0x8C18
    #define GL_TEXTURE_1D_BINDING_EXT 0x8068
    #define GL_TEXTURE_1D_STACK_BINDING_MESAX 0x875D
    #define GL_TEXTURE_1D_STACK_MESAX 0x8759
    #define GL_TEXTURE_2D 0x0DE1
    #define GL_TEXTURE_2D_ARRAY 0x8C1A
    #define GL_TEXTURE_2D_ARRAY_EXT 0x8C1A
    #define GL_TEXTURE_2D_BINDING_EXT 0x8069
    #define GL_TEXTURE_2D_MULTISAMPLE 0x9100
    #define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
    #define GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES 0x9102
    #define GL_TEXTURE_2D_STACK_BINDING_MESAX 0x875E
    #define GL_TEXTURE_2D_STACK_MESAX 0x875A
    #define GL_TEXTURE_3D 0x806F
    #define GL_TEXTURE_3D_BINDING_EXT 0x806A
    #define GL_TEXTURE_3D_EXT 0x806F
    #define GL_TEXTURE_3D_OES 0x806F
    #define GL_TEXTURE_4DSIZE_SGIS 0x8136
    #define GL_TEXTURE_4D_BINDING_SGIS 0x814F
    #define GL_TEXTURE_4D_SGIS 0x8134
    #define GL_TEXTURE_ALPHA_SIZE 0x805F
    #define GL_TEXTURE_ALPHA_SIZE_EXT 0x805F
    #define GL_TEXTURE_ALPHA_TYPE 0x8C13
    #define GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13
    #define GL_TEXTURE_APPLICATION_MODE_EXT 0x834F
    #define GL_TEXTURE_ASTC_DECODE_PRECISION_EXT 0x8F69
    #define GL_TEXTURE_BASE_LEVEL 0x813C
    #define GL_TEXTURE_BASE_LEVEL_SGIS 0x813C
    #define GL_TEXTURE_BINDING_1D 0x8068
    #define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
    #define GL_TEXTURE_BINDING_1D_ARRAY_EXT 0x8C1C
    #define GL_TEXTURE_BINDING_2D 0x8069
    #define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
    #define GL_TEXTURE_BINDING_2D_ARRAY_EXT 0x8C1D
    #define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
    #define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
    #define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES 0x9105
    #define GL_TEXTURE_BINDING_3D 0x806A
    #define GL_TEXTURE_BINDING_3D_OES 0x806A
    #define GL_TEXTURE_BINDING_BUFFER 0x8C2C
    #define GL_TEXTURE_BINDING_BUFFER_ARB 0x8C2C
    #define GL_TEXTURE_BINDING_BUFFER_EXT 0x8C2C
    #define GL_TEXTURE_BINDING_BUFFER_OES 0x8C2C
    #define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
    #define GL_TEXTURE_BINDING_CUBE_MAP_ARB 0x8514
    #define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
    #define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB 0x900A
    #define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT 0x900A
    #define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES 0x900A
    #define GL_TEXTURE_BINDING_CUBE_MAP_EXT 0x8514
    #define GL_TEXTURE_BINDING_EXTERNAL_OES 0x8D67
    #define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
    #define GL_TEXTURE_BINDING_RECTANGLE_ARB 0x84F6
    #define GL_TEXTURE_BINDING_RECTANGLE_NV 0x84F6
    #define GL_TEXTURE_BINDING_RENDERBUFFER_NV 0x8E53
    #define GL_TEXTURE_BLUE_SIZE 0x805E
    #define GL_TEXTURE_BLUE_SIZE_EXT 0x805E
    #define GL_TEXTURE_BLUE_TYPE 0x8C12
    #define GL_TEXTURE_BLUE_TYPE_ARB 0x8C12
    #define GL_TEXTURE_BORDER_COLOR 0x1004
    #define GL_TEXTURE_BORDER_COLOR_EXT 0x1004
    #define GL_TEXTURE_BORDER_COLOR_NV 0x1004
    #define GL_TEXTURE_BORDER_COLOR_OES 0x1004
    #define GL_TEXTURE_BORDER_VALUES_NV 0x871A
    #define GL_TEXTURE_BUFFER 0x8C2A
    #define GL_TEXTURE_BUFFER_ARB 0x8C2A
    #define GL_TEXTURE_BUFFER_BINDING 0x8C2A
    #define GL_TEXTURE_BUFFER_BINDING_EXT 0x8C2A
    #define GL_TEXTURE_BUFFER_BINDING_OES 0x8C2A
    #define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
    #define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB 0x8C2D
    #define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT 0x8C2D
    #define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES 0x8C2D
    #define GL_TEXTURE_BUFFER_EXT 0x8C2A
    #define GL_TEXTURE_BUFFER_FORMAT_ARB 0x8C2E
    #define GL_TEXTURE_BUFFER_FORMAT_EXT 0x8C2E
    #define GL_TEXTURE_BUFFER_OES 0x8C2A
    #define GL_TEXTURE_BUFFER_OFFSET 0x919D
    #define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
    #define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT 0x919F
    #define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES 0x919F
    #define GL_TEXTURE_BUFFER_OFFSET_EXT 0x919D
    #define GL_TEXTURE_BUFFER_OFFSET_OES 0x919D
    #define GL_TEXTURE_BUFFER_SIZE 0x919E
    #define GL_TEXTURE_BUFFER_SIZE_EXT 0x919E
    #define GL_TEXTURE_BUFFER_SIZE_OES 0x919E
    #define GL_TEXTURE_CLIPMAP_CENTER_SGIX 0x8171
    #define GL_TEXTURE_CLIPMAP_DEPTH_SGIX 0x8176
    #define GL_TEXTURE_CLIPMAP_FRAME_SGIX 0x8172
    #define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX 0x8175
    #define GL_TEXTURE_CLIPMAP_OFFSET_SGIX 0x8173
    #define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8174
    #define GL_TEXTURE_COLOR_SAMPLES_NV 0x9046
    #define GL_TEXTURE_COLOR_TABLE_SGI 0x80BC
    #define GL_TEXTURE_COLOR_WRITEMASK_SGIS 0x81EF
    #define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB 0x80BF
    #define GL_TEXTURE_COMPARE_FUNC 0x884D
    #define GL_TEXTURE_COMPARE_FUNC_ARB 0x884D
    #define GL_TEXTURE_COMPARE_FUNC_EXT 0x884D
    #define GL_TEXTURE_COMPARE_MODE 0x884C
    #define GL_TEXTURE_COMPARE_MODE_ARB 0x884C
    #define GL_TEXTURE_COMPARE_MODE_EXT 0x884C
    #define GL_TEXTURE_COMPARE_OPERATOR_SGIX 0x819B
    #define GL_TEXTURE_COMPARE_SGIX 0x819A
    #define GL_TEXTURE_COMPRESSED 0x86A1
    #define GL_TEXTURE_COMPRESSED_ARB 0x86A1
    #define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
    #define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
    #define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
    #define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
    #define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
    #define GL_TEXTURE_COMPRESSION_HINT 0x84EF
    #define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
    #define GL_TEXTURE_CONSTANT_DATA_SUNX 0x81D6
    #define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
    #define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
    #define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB 0x889A
    #define GL_TEXTURE_COORD_ARRAY_COUNT_EXT 0x808B
    #define GL_TEXTURE_COORD_ARRAY_EXT 0x8078
    #define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
    #define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
    #define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
    #define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL 0x83F8
    #define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
    #define GL_TEXTURE_COORD_ARRAY_SIZE_EXT 0x8088
    #define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
    #define GL_TEXTURE_COORD_ARRAY_TYPE_EXT 0x8089
    #define GL_TEXTURE_COORD_NV 0x8C79
    #define GL_TEXTURE_COVERAGE_SAMPLES_NV 0x9045
    #define GL_TEXTURE_CUBE_MAP 0x8513
    #define GL_TEXTURE_CUBE_MAP_ARB 0x8513
    #define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
    #define GL_TEXTURE_CUBE_MAP_ARRAY_ARB 0x9009
    #define GL_TEXTURE_CUBE_MAP_ARRAY_EXT 0x9009
    #define GL_TEXTURE_CUBE_MAP_ARRAY_OES 0x9009
    #define GL_TEXTURE_CUBE_MAP_EXT 0x8513
    #define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
    #define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x8516
    #define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT 0x8516
    #define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
    #define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x8518
    #define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT 0x8518
    #define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
    #define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x851A
    #define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT 0x851A
    #define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
    #define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x8515
    #define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT 0x8515
    #define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
    #define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x8517
    #define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT 0x8517
    #define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
    #define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x8519
    #define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT 0x8519
    #define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
    #define GL_TEXTURE_DEFORMATION_BIT_SGIX 0x00000001
    #define GL_TEXTURE_DEFORMATION_SGIX 0x8195
    #define GL_TEXTURE_DEPTH 0x8071
    #define GL_TEXTURE_DEPTH_EXT 0x8071
    #define GL_TEXTURE_DEPTH_QCOM 0x8BD4
    #define GL_TEXTURE_DEPTH_SIZE 0x884A
    #define GL_TEXTURE_DEPTH_SIZE_ARB 0x884A
    #define GL_TEXTURE_DEPTH_TYPE 0x8C16
    #define GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16
    #define GL_TEXTURE_DS_SIZE_NV 0x871D
    #define GL_TEXTURE_DT_SIZE_NV 0x871E
    #define GL_TEXTURE_ENV_BIAS_SGIX 0x80BE
    #define GL_TEXTURE_EXTERNAL_OES 0x8D65
    #define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
    #define GL_TEXTURE_FETCH_BARRIER_BIT_EXT 0x00000008
    #define GL_TEXTURE_FILTER4_SIZE_SGIS 0x8147
    #define GL_TEXTURE_FILTER_CONTROL 0x8500
    #define GL_TEXTURE_FILTER_CONTROL_EXT 0x8500
    #define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
    #define GL_TEXTURE_FLOAT_COMPONENTS_NV 0x888C
    #define GL_TEXTURE_FORMAT_QCOM 0x8BD6
    #define GL_TEXTURE_FREE_MEMORY_ATI 0x87FC
    #define GL_TEXTURE_GATHER 0x82A2
    #define GL_TEXTURE_GATHER_SHADOW 0x82A3
    #define GL_TEXTURE_GEQUAL_R_SGIX 0x819D
    #define GL_TEXTURE_GREEN_SIZE 0x805D
    #define GL_TEXTURE_GREEN_SIZE_EXT 0x805D
    #define GL_TEXTURE_GREEN_TYPE 0x8C11
    #define GL_TEXTURE_GREEN_TYPE_ARB 0x8C11
    #define GL_TEXTURE_HEIGHT 0x1001
    #define GL_TEXTURE_HEIGHT_QCOM 0x8BD3
    #define GL_TEXTURE_HI_SIZE_NV 0x871B
    #define GL_TEXTURE_IMAGE_FORMAT 0x828F
    #define GL_TEXTURE_IMAGE_TYPE 0x8290
    #define GL_TEXTURE_IMAGE_VALID_QCOM 0x8BD8
    #define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
    #define GL_TEXTURE_IMMUTABLE_FORMAT_EXT 0x912F
    #define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
    #define GL_TEXTURE_INDEX_SIZE_EXT 0x80ED
    #define GL_TEXTURE_INTENSITY_SIZE_EXT 0x8061
    #define GL_TEXTURE_INTENSITY_TYPE 0x8C15
    #define GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15
    #define GL_TEXTURE_INTERNAL_FORMAT 0x1003
    #define GL_TEXTURE_INTERNAL_FORMAT_QCOM 0x8BD5
    #define GL_TEXTURE_LEQUAL_R_SGIX 0x819C
    #define GL_TEXTURE_LIGHTING_MODE_HP 0x8167
    #define GL_TEXTURE_LIGHT_EXT 0x8350
    #define GL_TEXTURE_LOD_BIAS 0x8501
    #define GL_TEXTURE_LOD_BIAS_EXT 0x8501
    #define GL_TEXTURE_LOD_BIAS_R_SGIX 0x8190
    #define GL_TEXTURE_LOD_BIAS_S_SGIX 0x818E
    #define GL_TEXTURE_LOD_BIAS_T_SGIX 0x818F
    #define GL_TEXTURE_LO_SIZE_NV 0x871C
    #define GL_TEXTURE_LUMINANCE_SIZE_EXT 0x8060
    #define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
    #define GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14
    #define GL_TEXTURE_MAG_FILTER 0x2800
    #define GL_TEXTURE_MAG_SIZE_NV 0x871F
    #define GL_TEXTURE_MATERIAL_FACE_EXT 0x8351
    #define GL_TEXTURE_MATERIAL_PARAMETER_EXT 0x8352
    #define GL_TEXTURE_MAX_ANISOTROPY_EXT 0x84FE
    #define GL_TEXTURE_MAX_CLAMP_R_SGIX 0x836B
    #define GL_TEXTURE_MAX_CLAMP_S_SGIX 0x8369
    #define GL_TEXTURE_MAX_CLAMP_T_SGIX 0x836A
    #define GL_TEXTURE_MAX_LEVEL 0x813D
    #define GL_TEXTURE_MAX_LEVEL_APPLE 0x813D
    #define GL_TEXTURE_MAX_LEVEL_SGIS 0x813D
    #define GL_TEXTURE_MAX_LOD 0x813B
    #define GL_TEXTURE_MAX_LOD_SGIS 0x813B
    #define GL_TEXTURE_MEMORY_LAYOUT_INTEL 0x83FF
    #define GL_TEXTURE_MIN_FILTER 0x2801
    #define GL_TEXTURE_MIN_LOD 0x813A
    #define GL_TEXTURE_MIN_LOD_SGIS 0x813A
    #define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX 0x812E
    #define GL_TEXTURE_NORMAL_EXT 0x85AF
    #define GL_TEXTURE_NUM_LEVELS_QCOM 0x8BD9
    #define GL_TEXTURE_OBJECT_VALID_QCOM 0x8BDB
    #define GL_TEXTURE_POST_SPECULAR_HP 0x8168
    #define GL_TEXTURE_PRE_SPECULAR_HP 0x8169
    #define GL_TEXTURE_PRIORITY_EXT 0x8066
    #define GL_TEXTURE_PROTECTED_EXT 0x8BFA
    #define GL_TEXTURE_RANGE_LENGTH_APPLE 0x85B7
    #define GL_TEXTURE_RANGE_POINTER_APPLE 0x85B8
    #define GL_TEXTURE_RECTANGLE 0x84F5
    #define GL_TEXTURE_RECTANGLE_ARB 0x84F5
    #define GL_TEXTURE_RECTANGLE_NV 0x84F5
    #define GL_TEXTURE_REDUCTION_MODE_ARB 0x9366
    #define GL_TEXTURE_RED_SIZE 0x805C
    #define GL_TEXTURE_RED_SIZE_EXT 0x805C
    #define GL_TEXTURE_RED_TYPE 0x8C10
    #define GL_TEXTURE_RED_TYPE_ARB 0x8C10
    #define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV 0x8E54
    #define GL_TEXTURE_RENDERBUFFER_NV 0x8E55
    #define GL_TEXTURE_RESIDENT_EXT 0x8067
    #define GL_TEXTURE_SAMPLES 0x9106
    #define GL_TEXTURE_SAMPLES_IMG 0x9136
    #define GL_TEXTURE_SHADER_NV 0x86DE
    #define GL_TEXTURE_SHADOW 0x82A1
    #define GL_TEXTURE_SHARED_SIZE 0x8C3F
    #define GL_TEXTURE_SHARED_SIZE_EXT 0x8C3F
    #define GL_TEXTURE_SPARSE_ARB 0x91A6
    #define GL_TEXTURE_SPARSE_EXT 0x91A6
    #define GL_TEXTURE_SRGB_DECODE_EXT 0x8A48
    #define GL_TEXTURE_STENCIL_SIZE 0x88F1
    #define GL_TEXTURE_STENCIL_SIZE_EXT 0x88F1
    #define GL_TEXTURE_STORAGE_HINT_APPLE 0x85BC
    #define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD 0x00000001
    #define GL_TEXTURE_SWIZZLE_A 0x8E45
    #define GL_TEXTURE_SWIZZLE_A_EXT 0x8E45
    #define GL_TEXTURE_SWIZZLE_B 0x8E44
    #define GL_TEXTURE_SWIZZLE_B_EXT 0x8E44
    #define GL_TEXTURE_SWIZZLE_G 0x8E43
    #define GL_TEXTURE_SWIZZLE_G_EXT 0x8E43
    #define GL_TEXTURE_SWIZZLE_R 0x8E42
    #define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
    #define GL_TEXTURE_SWIZZLE_RGBA_EXT 0x8E46
    #define GL_TEXTURE_SWIZZLE_R_EXT 0x8E42
    #define GL_TEXTURE_TARGET 0x1006
    #define GL_TEXTURE_TARGET_QCOM 0x8BDA
    #define GL_TEXTURE_TILING_EXT 0x9580
    #define GL_TEXTURE_TOO_LARGE_EXT 0x8065
    #define GL_TEXTURE_TYPE_QCOM 0x8BD7
    #define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV 0x888F
    #define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
    #define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT 0x00000100
    #define GL_TEXTURE_USAGE_ANGLE 0x93A2
    #define GL_TEXTURE_VIEW 0x82B5
    #define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
    #define GL_TEXTURE_VIEW_MIN_LAYER_EXT 0x82DD
    #define GL_TEXTURE_VIEW_MIN_LAYER_OES 0x82DD
    #define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
    #define GL_TEXTURE_VIEW_MIN_LEVEL_EXT 0x82DB
    #define GL_TEXTURE_VIEW_MIN_LEVEL_OES 0x82DB
    #define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
    #define GL_TEXTURE_VIEW_NUM_LAYERS_EXT 0x82DE
    #define GL_TEXTURE_VIEW_NUM_LAYERS_OES 0x82DE
    #define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
    #define GL_TEXTURE_VIEW_NUM_LEVELS_EXT 0x82DC
    #define GL_TEXTURE_VIEW_NUM_LEVELS_OES 0x82DC
    #define GL_TEXTURE_WIDTH 0x1000
    #define GL_TEXTURE_WIDTH_QCOM 0x8BD2
    #define GL_TEXTURE_WRAP_Q_SGIS 0x8137
    #define GL_TEXTURE_WRAP_R 0x8072
    #define GL_TEXTURE_WRAP_R_EXT 0x8072
    #define GL_TEXTURE_WRAP_R_OES 0x8072
    #define GL_TEXTURE_WRAP_S 0x2802
    #define GL_TEXTURE_WRAP_T 0x2803
    #define GL_TEXT_FRAGMENT_SHADER_ATI 0x8200
    #define GL_TILING_TYPES_EXT 0x9583
    #define GL_TIMEOUT_EXPIRED 0x911B
    #define GL_TIMEOUT_EXPIRED_APPLE 0x911B
    #define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
    #define GL_TIMEOUT_IGNORED_APPLE 0xFFFFFFFFFFFFFFFFull
    #define GL_TIMESTAMP 0x8E28
    #define GL_TIMESTAMP_EXT 0x8E28
    #define GL_TIME_ELAPSED 0x88BF
    #define GL_TIME_ELAPSED_EXT 0x88BF
    #define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
    #define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
    #define GL_TRACK_MATRIX_NV 0x8648
    #define GL_TRACK_MATRIX_TRANSFORM_NV 0x8649
    #define GL_TRANSFORM_FEEDBACK 0x8E22
    #define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
    #define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
    #define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
    #define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT 0x00000800
    #define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
    #define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
    #define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
    #define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
    #define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
    #define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
    #define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT 0x8C8F
    #define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
    #define GL_TRANSFORM_FEEDBACK_BUFFER_EXT 0x8C8E
    #define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
    #define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
    #define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT 0x8C7F
    #define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
    #define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
    #define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
    #define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
    #define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
    #define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT 0x8C85
    #define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
    #define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
    #define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT 0x8C84
    #define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
    #define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
    #define GL_TRANSFORM_FEEDBACK_NV 0x8E22
    #define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB 0x82EC
    #define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
    #define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
    #define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT 0x8C88
    #define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
    #define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
    #define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB 0x82ED
    #define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
    #define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
    #define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT 0x8C83
    #define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
    #define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
    #define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT 0x8C76
    #define GL_TRANSFORM_HINT_APPLE 0x85B1
    #define GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE 0x93A0
    #define GL_TRANSLATE_2D_NV 0x9090
    #define GL_TRANSLATE_3D_NV 0x9091
    #define GL_TRANSLATE_X_NV 0x908E
    #define GL_TRANSLATE_Y_NV 0x908F
    #define GL_TRANSPOSE_AFFINE_2D_NV 0x9096
    #define GL_TRANSPOSE_AFFINE_3D_NV 0x9098
    #define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
    #define GL_TRANSPOSE_COLOR_MATRIX_ARB 0x84E6
    #define GL_TRANSPOSE_CURRENT_MATRIX_ARB 0x88B7
    #define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
    #define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 0x84E3
    #define GL_TRANSPOSE_NV 0x862C
    #define GL_TRANSPOSE_PROGRAM_MATRIX_EXT 0x8E2E
    #define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
    #define GL_TRANSPOSE_PROJECTION_MATRIX_ARB 0x84E4
    #define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
    #define GL_TRANSPOSE_TEXTURE_MATRIX_ARB 0x84E5
    #define GL_TRIANGLES 0x0004
    #define GL_TRIANGLES_ADJACENCY 0x000C
    #define GL_TRIANGLES_ADJACENCY_ARB 0x000C
    #define GL_TRIANGLES_ADJACENCY_EXT 0x000C
    #define GL_TRIANGLES_ADJACENCY_OES 0x000C
    #define GL_TRIANGLE_FAN 0x0006
    #define GL_TRIANGLE_LIST_SUN 0x81D7
    #define GL_TRIANGLE_MESH_SUN 0x8615
    #define GL_TRIANGLE_STRIP 0x0005
    #define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
    #define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
    #define GL_TRIANGLE_STRIP_ADJACENCY_EXT 0x000D
    #define GL_TRIANGLE_STRIP_ADJACENCY_OES 0x000D
    #define GL_TRIANGULAR_NV 0x90A5
    #define GL_TRUE 1
    #define GL_TYPE 0x92FA
    #define GL_UNCORRELATED_NV 0x9282
    #define GL_UNDEFINED_APPLE 0x8A1C
    #define GL_UNDEFINED_VERTEX 0x8260
    #define GL_UNDEFINED_VERTEX_EXT 0x8260
    #define GL_UNDEFINED_VERTEX_OES 0x8260
    #define GL_UNIFORM 0x92E1
    #define GL_UNIFORM_ADDRESS_COMMAND_NV 0x000A
    #define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
    #define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
    #define GL_UNIFORM_BARRIER_BIT 0x00000004
    #define GL_UNIFORM_BARRIER_BIT_EXT 0x00000004
    #define GL_UNIFORM_BLOCK 0x92E2
    #define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
    #define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
    #define GL_UNIFORM_BLOCK_BINDING 0x8A3F
    #define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
    #define GL_UNIFORM_BLOCK_INDEX 0x8A3A
    #define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
    #define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
    #define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
    #define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
    #define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
    #define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
    #define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
    #define GL_UNIFORM_BUFFER 0x8A11
    #define GL_UNIFORM_BUFFER_ADDRESS_NV 0x936F
    #define GL_UNIFORM_BUFFER_BINDING 0x8A28
    #define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
    #define GL_UNIFORM_BUFFER_EXT 0x8DEE
    #define GL_UNIFORM_BUFFER_LENGTH_NV 0x9370
    #define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
    #define GL_UNIFORM_BUFFER_SIZE 0x8A2A
    #define GL_UNIFORM_BUFFER_START 0x8A29
    #define GL_UNIFORM_BUFFER_UNIFIED_NV 0x936E
    #define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
    #define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
    #define GL_UNIFORM_NAME_LENGTH 0x8A39
    #define GL_UNIFORM_OFFSET 0x8A3B
    #define GL_UNIFORM_SIZE 0x8A38
    #define GL_UNIFORM_TYPE 0x8A37
    #define GL_UNKNOWN_CONTEXT_RESET 0x8255
    #define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
    #define GL_UNKNOWN_CONTEXT_RESET_EXT 0x8255
    #define GL_UNKNOWN_CONTEXT_RESET_KHR 0x8255
    #define GL_UNPACK_ALIGNMENT 0x0CF5
    #define GL_UNPACK_CLIENT_STORAGE_APPLE 0x85B2
    #define GL_UNPACK_CMYK_HINT_EXT 0x800F
    #define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
    #define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
    #define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
    #define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
    #define GL_UNPACK_CONSTANT_DATA_SUNX 0x81D5
    #define GL_UNPACK_IMAGE_DEPTH_SGIS 0x8133
    #define GL_UNPACK_IMAGE_HEIGHT 0x806E
    #define GL_UNPACK_IMAGE_HEIGHT_EXT 0x806E
    #define GL_UNPACK_LSB_FIRST 0x0CF1
    #define GL_UNPACK_RESAMPLE_OML 0x8985
    #define GL_UNPACK_RESAMPLE_SGIX 0x842F
    #define GL_UNPACK_ROW_BYTES_APPLE 0x8A16
    #define GL_UNPACK_ROW_LENGTH 0x0CF2
    #define GL_UNPACK_ROW_LENGTH_EXT 0x0CF2
    #define GL_UNPACK_SKIP_IMAGES 0x806D
    #define GL_UNPACK_SKIP_IMAGES_EXT 0x806D
    #define GL_UNPACK_SKIP_PIXELS 0x0CF4
    #define GL_UNPACK_SKIP_PIXELS_EXT 0x0CF4
    #define GL_UNPACK_SKIP_ROWS 0x0CF3
    #define GL_UNPACK_SKIP_ROWS_EXT 0x0CF3
    #define GL_UNPACK_SKIP_VOLUMES_SGIS 0x8132
    #define GL_UNPACK_SUBSAMPLE_RATE_SGIX 0x85A1
    #define GL_UNPACK_SWAP_BYTES 0x0CF0
    #define GL_UNSIGNALED 0x9118
    #define GL_UNSIGNALED_APPLE 0x9118
    #define GL_UNSIGNED_BYTE 0x1401
    #define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
    #define GL_UNSIGNED_BYTE_3_3_2 0x8032
    #define GL_UNSIGNED_BYTE_3_3_2_EXT 0x8032
    #define GL_UNSIGNED_IDENTITY_NV 0x8536
    #define GL_UNSIGNED_INT 0x1405
    #define GL_UNSIGNED_INT16_NV 0x8FF0
    #define GL_UNSIGNED_INT16_VEC2_NV 0x8FF1
    #define GL_UNSIGNED_INT16_VEC3_NV 0x8FF2
    #define GL_UNSIGNED_INT16_VEC4_NV 0x8FF3
    #define GL_UNSIGNED_INT64_AMD 0x8BC2
    #define GL_UNSIGNED_INT64_ARB 0x140F
    #define GL_UNSIGNED_INT64_NV 0x140F
    #define GL_UNSIGNED_INT64_VEC2_ARB 0x8FF5
    #define GL_UNSIGNED_INT64_VEC2_NV 0x8FF5
    #define GL_UNSIGNED_INT64_VEC3_ARB 0x8FF6
    #define GL_UNSIGNED_INT64_VEC3_NV 0x8FF6
    #define GL_UNSIGNED_INT64_VEC4_ARB 0x8FF7
    #define GL_UNSIGNED_INT64_VEC4_NV 0x8FF7
    #define GL_UNSIGNED_INT8_NV 0x8FEC
    #define GL_UNSIGNED_INT8_VEC2_NV 0x8FED
    #define GL_UNSIGNED_INT8_VEC3_NV 0x8FEE
    #define GL_UNSIGNED_INT8_VEC4_NV 0x8FEF
    #define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
    #define GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE 0x8C3B
    #define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT 0x8C3B
    #define GL_UNSIGNED_INT_10_10_10_2 0x8036
    #define GL_UNSIGNED_INT_10_10_10_2_EXT 0x8036
    #define GL_UNSIGNED_INT_10_10_10_2_OES 0x8DF6
    #define GL_UNSIGNED_INT_24_8 0x84FA
    #define GL_UNSIGNED_INT_24_8_EXT 0x84FA
    #define GL_UNSIGNED_INT_24_8_NV 0x84FA
    #define GL_UNSIGNED_INT_24_8_OES 0x84FA
    #define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
    #define GL_UNSIGNED_INT_2_10_10_10_REV_EXT 0x8368
    #define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
    #define GL_UNSIGNED_INT_5_9_9_9_REV_APPLE 0x8C3E
    #define GL_UNSIGNED_INT_5_9_9_9_REV_EXT 0x8C3E
    #define GL_UNSIGNED_INT_8_8_8_8 0x8035
    #define GL_UNSIGNED_INT_8_8_8_8_EXT 0x8035
    #define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
    #define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV 0x86DB
    #define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
    #define GL_UNSIGNED_INT_IMAGE_1D 0x9062
    #define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
    #define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT 0x9068
    #define GL_UNSIGNED_INT_IMAGE_1D_EXT 0x9062
    #define GL_UNSIGNED_INT_IMAGE_2D 0x9063
    #define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
    #define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT 0x9069
    #define GL_UNSIGNED_INT_IMAGE_2D_EXT 0x9063
    #define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
    #define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
    #define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x906C
    #define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT 0x906B
    #define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
    #define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT 0x9065
    #define GL_UNSIGNED_INT_IMAGE_3D 0x9064
    #define GL_UNSIGNED_INT_IMAGE_3D_EXT 0x9064
    #define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
    #define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT 0x9067
    #define GL_UNSIGNED_INT_IMAGE_BUFFER_OES 0x9067
    #define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
    #define GL_UNSIGNED_INT_IMAGE_CUBE_EXT 0x9066
    #define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
    #define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x906A
    #define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES 0x906A
    #define GL_UNSIGNED_INT_S8_S8_8_8_NV 0x86DA
    #define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
    #define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
    #define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT 0x8DD6
    #define GL_UNSIGNED_INT_SAMPLER_1D_EXT 0x8DD1
    #define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
    #define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
    #define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT 0x8DD7
    #define GL_UNSIGNED_INT_SAMPLER_2D_EXT 0x8DD2
    #define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
    #define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
    #define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910D
    #define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
    #define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT 0x8DD5
    #define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
    #define GL_UNSIGNED_INT_SAMPLER_3D_EXT 0x8DD3
    #define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
    #define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD 0x9003
    #define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
    #define GL_UNSIGNED_INT_SAMPLER_BUFFER_OES 0x8DD8
    #define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
    #define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT 0x8DD4
    #define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
    #define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900F
    #define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT 0x900F
    #define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES 0x900F
    #define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV 0x8E58
    #define GL_UNSIGNED_INT_VEC2 0x8DC6
    #define GL_UNSIGNED_INT_VEC2_EXT 0x8DC6
    #define GL_UNSIGNED_INT_VEC3 0x8DC7
    #define GL_UNSIGNED_INT_VEC3_EXT 0x8DC7
    #define GL_UNSIGNED_INT_VEC4 0x8DC8
    #define GL_UNSIGNED_INT_VEC4_EXT 0x8DC8
    #define GL_UNSIGNED_INVERT_NV 0x8537
    #define GL_UNSIGNED_NORMALIZED 0x8C17
    #define GL_UNSIGNED_NORMALIZED_ARB 0x8C17
    #define GL_UNSIGNED_NORMALIZED_EXT 0x8C17
    #define GL_UNSIGNED_SHORT 0x1403
    #define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
    #define GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT 0x8366
    #define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
    #define GL_UNSIGNED_SHORT_4_4_4_4_EXT 0x8033
    #define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
    #define GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT 0x8365
    #define GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG 0x8365
    #define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
    #define GL_UNSIGNED_SHORT_5_5_5_1_EXT 0x8034
    #define GL_UNSIGNED_SHORT_5_6_5 0x8363
    #define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
    #define GL_UNSIGNED_SHORT_8_8_APPLE 0x85BA
    #define GL_UNSIGNED_SHORT_8_8_MESA 0x85BA
    #define GL_UNSIGNED_SHORT_8_8_REV_APPLE 0x85BB
    #define GL_UNSIGNED_SHORT_8_8_REV_MESA 0x85BB
    #define GL_UPPER_LEFT 0x8CA2
    #define GL_USE_MISSING_GLYPH_NV 0x90AA
    #define GL_UTF16_NV 0x909B
    #define GL_UTF8_NV 0x909A
    #define GL_UUID_SIZE_EXT 16
    #define GL_VALIDATE_STATUS 0x8B83
    #define GL_VARIABLE_A_NV 0x8523
    #define GL_VARIABLE_B_NV 0x8524
    #define GL_VARIABLE_C_NV 0x8525
    #define GL_VARIABLE_D_NV 0x8526
    #define GL_VARIABLE_E_NV 0x8527
    #define GL_VARIABLE_F_NV 0x8528
    #define GL_VARIABLE_G_NV 0x8529
    #define GL_VARIANT_ARRAY_EXT 0x87E8
    #define GL_VARIANT_ARRAY_POINTER_EXT 0x87E9
    #define GL_VARIANT_ARRAY_STRIDE_EXT 0x87E6
    #define GL_VARIANT_ARRAY_TYPE_EXT 0x87E7
    #define GL_VARIANT_DATATYPE_EXT 0x87E5
    #define GL_VARIANT_EXT 0x87C1
    #define GL_VARIANT_VALUE_EXT 0x87E4
    #define GL_VBO_FREE_MEMORY_ATI 0x87FB
    #define GL_VECTOR_EXT 0x87BF
    #define GL_VENDOR 0x1F00
    #define GL_VERSION 0x1F02
    #define GL_VERTEX23_BIT_PGI 0x00000004
    #define GL_VERTEX4_BIT_PGI 0x00000008
    #define GL_VERTEX_ARRAY 0x8074
    #define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
    #define GL_VERTEX_ARRAY_BINDING 0x85B5
    #define GL_VERTEX_ARRAY_BINDING_APPLE 0x85B5
    #define GL_VERTEX_ARRAY_BINDING_OES 0x85B5
    #define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
    #define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB 0x8896
    #define GL_VERTEX_ARRAY_COUNT_EXT 0x807D
    #define GL_VERTEX_ARRAY_EXT 0x8074
    #define GL_VERTEX_ARRAY_KHR 0x8074
    #define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
    #define GL_VERTEX_ARRAY_LIST_IBM 103070
    #define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
    #define GL_VERTEX_ARRAY_OBJECT_AMD 0x9154
    #define GL_VERTEX_ARRAY_OBJECT_EXT 0x9154
    #define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL 0x83F5
    #define GL_VERTEX_ARRAY_POINTER_EXT 0x808E
    #define GL_VERTEX_ARRAY_RANGE_APPLE 0x851D
    #define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE 0x851E
    #define GL_VERTEX_ARRAY_RANGE_LENGTH_NV 0x851E
    #define GL_VERTEX_ARRAY_RANGE_NV 0x851D
    #define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE 0x8521
    #define GL_VERTEX_ARRAY_RANGE_POINTER_NV 0x8521
    #define GL_VERTEX_ARRAY_RANGE_VALID_NV 0x851F
    #define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV 0x8533
    #define GL_VERTEX_ARRAY_SIZE_EXT 0x807A
    #define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE 0x851F
    #define GL_VERTEX_ARRAY_STRIDE_EXT 0x807C
    #define GL_VERTEX_ARRAY_TYPE_EXT 0x807B
    #define GL_VERTEX_ATTRIB_ARRAY0_NV 0x8650
    #define GL_VERTEX_ATTRIB_ARRAY10_NV 0x865A
    #define GL_VERTEX_ATTRIB_ARRAY11_NV 0x865B
    #define GL_VERTEX_ATTRIB_ARRAY12_NV 0x865C
    #define GL_VERTEX_ATTRIB_ARRAY13_NV 0x865D
    #define GL_VERTEX_ATTRIB_ARRAY14_NV 0x865E
    #define GL_VERTEX_ATTRIB_ARRAY15_NV 0x865F
    #define GL_VERTEX_ATTRIB_ARRAY1_NV 0x8651
    #define GL_VERTEX_ATTRIB_ARRAY2_NV 0x8652
    #define GL_VERTEX_ATTRIB_ARRAY3_NV 0x8653
    #define GL_VERTEX_ATTRIB_ARRAY4_NV 0x8654
    #define GL_VERTEX_ATTRIB_ARRAY5_NV 0x8655
    #define GL_VERTEX_ATTRIB_ARRAY6_NV 0x8656
    #define GL_VERTEX_ATTRIB_ARRAY7_NV 0x8657
    #define GL_VERTEX_ATTRIB_ARRAY8_NV 0x8658
    #define GL_VERTEX_ATTRIB_ARRAY9_NV 0x8659
    #define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
    #define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
    #define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT 0x00000001
    #define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
    #define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB 0x889F
    #define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
    #define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE 0x88FE
    #define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB 0x88FE
    #define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT 0x88FE
    #define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV 0x88FE
    #define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
    #define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB 0x8622
    #define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
    #define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT 0x88FD
    #define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV 0x88FD
    #define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
    #define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
    #define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
    #define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB 0x886A
    #define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
    #define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB 0x8645
    #define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
    #define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB 0x8623
    #define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
    #define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB 0x8624
    #define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
    #define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB 0x8625
    #define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
    #define GL_VERTEX_ATTRIB_BINDING 0x82D4
    #define GL_VERTEX_ATTRIB_MAP1_APPLE 0x8A00
    #define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE 0x8A03
    #define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE 0x8A05
    #define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE 0x8A04
    #define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE 0x8A02
    #define GL_VERTEX_ATTRIB_MAP2_APPLE 0x8A01
    #define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE 0x8A07
    #define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE 0x8A09
    #define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE 0x8A08
    #define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE 0x8A06
    #define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
    #define GL_VERTEX_BINDING_BUFFER 0x8F4F
    #define GL_VERTEX_BINDING_DIVISOR 0x82D6
    #define GL_VERTEX_BINDING_OFFSET 0x82D7
    #define GL_VERTEX_BINDING_STRIDE 0x82D8
    #define GL_VERTEX_BLEND_ARB 0x86A7
    #define GL_VERTEX_CONSISTENT_HINT_PGI 0x1A22B
    #define GL_VERTEX_DATA_HINT_PGI 0x1A22A
    #define GL_VERTEX_ELEMENT_SWIZZLE_AMD 0x91A4
    #define GL_VERTEX_ID_NV 0x8C7B
    #define GL_VERTEX_ID_SWIZZLE_AMD 0x91A5
    #define GL_VERTEX_PRECLIP_HINT_SGIX 0x83EF
    #define GL_VERTEX_PRECLIP_SGIX 0x83EE
    #define GL_VERTEX_PROGRAM_ARB 0x8620
    #define GL_VERTEX_PROGRAM_BINDING_NV 0x864A
    #define GL_VERTEX_PROGRAM_NV 0x8620
    #define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV 0x8DA2
    #define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
    #define GL_VERTEX_PROGRAM_POINT_SIZE_ARB 0x8642
    #define GL_VERTEX_PROGRAM_POINT_SIZE_NV 0x8642
    #define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
    #define GL_VERTEX_PROGRAM_TWO_SIDE_ARB 0x8643
    #define GL_VERTEX_PROGRAM_TWO_SIDE_NV 0x8643
    #define GL_VERTEX_SHADER 0x8B31
    #define GL_VERTEX_SHADER_ARB 0x8B31
    #define GL_VERTEX_SHADER_BINDING_EXT 0x8781
    #define GL_VERTEX_SHADER_BIT 0x00000001
    #define GL_VERTEX_SHADER_BIT_EXT 0x00000001
    #define GL_VERTEX_SHADER_EXT 0x8780
    #define GL_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CF
    #define GL_VERTEX_SHADER_INVARIANTS_EXT 0x87D1
    #define GL_VERTEX_SHADER_INVOCATIONS_ARB 0x82F0
    #define GL_VERTEX_SHADER_LOCALS_EXT 0x87D3
    #define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87D2
    #define GL_VERTEX_SHADER_OPTIMIZED_EXT 0x87D4
    #define GL_VERTEX_SHADER_VARIANTS_EXT 0x87D0
    #define GL_VERTEX_SOURCE_ATI 0x8774
    #define GL_VERTEX_STATE_PROGRAM_NV 0x8621
    #define GL_VERTEX_STREAM0_ATI 0x876C
    #define GL_VERTEX_STREAM1_ATI 0x876D
    #define GL_VERTEX_STREAM2_ATI 0x876E
    #define GL_VERTEX_STREAM3_ATI 0x876F
    #define GL_VERTEX_STREAM4_ATI 0x8770
    #define GL_VERTEX_STREAM5_ATI 0x8771
    #define GL_VERTEX_STREAM6_ATI 0x8772
    #define GL_VERTEX_STREAM7_ATI 0x8773
    #define GL_VERTEX_SUBROUTINE 0x92E8
    #define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
    #define GL_VERTEX_TEXTURE 0x829B
    #define GL_VERTEX_WEIGHTING_EXT 0x8509
    #define GL_VERTEX_WEIGHT_ARRAY_EXT 0x850C
    #define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT 0x8510
    #define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT 0x850D
    #define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT 0x850F
    #define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT 0x850E
    #define GL_VERTICAL_LINE_TO_NV 0x08
    #define GL_VERTICES_SUBMITTED_ARB 0x82EE
    #define GL_VIBRANCE_BIAS_NV 0x8719
    #define GL_VIBRANCE_SCALE_NV 0x8713
    #define GL_VIDEO_BUFFER_BINDING_NV 0x9021
    #define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV 0x902D
    #define GL_VIDEO_BUFFER_NV 0x9020
    #define GL_VIDEO_BUFFER_PITCH_NV 0x9028
    #define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV 0x903B
    #define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV 0x903A
    #define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV 0x9039
    #define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV 0x9038
    #define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV 0x903C
    #define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV 0x9026
    #define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV 0x9029
    #define GL_VIDEO_COLOR_CONVERSION_MAX_NV 0x902A
    #define GL_VIDEO_COLOR_CONVERSION_MIN_NV 0x902B
    #define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV 0x902C
    #define GL_VIEWPORT 0x0BA2
    #define GL_VIEWPORT_BOUNDS_RANGE 0x825D
    #define GL_VIEWPORT_BOUNDS_RANGE_NV 0x825D
    #define GL_VIEWPORT_BOUNDS_RANGE_OES 0x825D
    #define GL_VIEWPORT_COMMAND_NV 0x0010
    #define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
    #define GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV 0x825F
    #define GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES 0x825F
    #define GL_VIEWPORT_POSITION_W_SCALE_NV 0x937C
    #define GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV 0x937D
    #define GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV 0x937E
    #define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
    #define GL_VIEWPORT_SUBPIXEL_BITS_NV 0x825C
    #define GL_VIEWPORT_SUBPIXEL_BITS_OES 0x825C
    #define GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV 0x9357
    #define GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV 0x9351
    #define GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV 0x9353
    #define GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV 0x9355
    #define GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV 0x9356
    #define GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV 0x9350
    #define GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV 0x9352
    #define GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV 0x9354
    #define GL_VIEWPORT_SWIZZLE_W_NV 0x935B
    #define GL_VIEWPORT_SWIZZLE_X_NV 0x9358
    #define GL_VIEWPORT_SWIZZLE_Y_NV 0x9359
    #define GL_VIEWPORT_SWIZZLE_Z_NV 0x935A
    #define GL_VIEW_CLASS_128_BITS 0x82C4
    #define GL_VIEW_CLASS_16_BITS 0x82CA
    #define GL_VIEW_CLASS_24_BITS 0x82C9
    #define GL_VIEW_CLASS_32_BITS 0x82C8
    #define GL_VIEW_CLASS_48_BITS 0x82C7
    #define GL_VIEW_CLASS_64_BITS 0x82C6
    #define GL_VIEW_CLASS_8_BITS 0x82CB
    #define GL_VIEW_CLASS_96_BITS 0x82C5
    #define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
    #define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
    #define GL_VIEW_CLASS_RGTC1_RED 0x82D0
    #define GL_VIEW_CLASS_RGTC2_RG 0x82D1
    #define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
    #define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
    #define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
    #define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
    #define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
    #define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB 0x91A7
    #define GL_VIRTUAL_PAGE_SIZE_INDEX_EXT 0x91A7
    #define GL_VIRTUAL_PAGE_SIZE_X_AMD 0x9195
    #define GL_VIRTUAL_PAGE_SIZE_X_ARB 0x9195
    #define GL_VIRTUAL_PAGE_SIZE_X_EXT 0x9195
    #define GL_VIRTUAL_PAGE_SIZE_Y_AMD 0x9196
    #define GL_VIRTUAL_PAGE_SIZE_Y_ARB 0x9196
    #define GL_VIRTUAL_PAGE_SIZE_Y_EXT 0x9196
    #define GL_VIRTUAL_PAGE_SIZE_Z_AMD 0x9197
    #define GL_VIRTUAL_PAGE_SIZE_Z_ARB 0x9197
    #define GL_VIRTUAL_PAGE_SIZE_Z_EXT 0x9197
    #define GL_VIVIDLIGHT_NV 0x92A6
    #define GL_VOLATILE_APPLE 0x8A1A
    #define GL_WAIT_FAILED 0x911D
    #define GL_WAIT_FAILED_APPLE 0x911D
    #define GL_WARPS_PER_SM_NV 0x933A
    #define GL_WARP_SIZE_NV 0x9339
    #define GL_WEIGHTED_AVERAGE_ARB 0x9367
    #define GL_WEIGHT_ARRAY_ARB 0x86AD
    #define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
    #define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB 0x889E
    #define GL_WEIGHT_ARRAY_POINTER_ARB 0x86AC
    #define GL_WEIGHT_ARRAY_SIZE_ARB 0x86AB
    #define GL_WEIGHT_ARRAY_STRIDE_ARB 0x86AA
    #define GL_WEIGHT_ARRAY_TYPE_ARB 0x86A9
    #define GL_WEIGHT_SUM_UNITY_ARB 0x86A6
    #define GL_WIDE_LINE_HINT_PGI 0x1A222
    #define GL_WINDOW_RECTANGLE_EXT 0x8F12
    #define GL_WINDOW_RECTANGLE_MODE_EXT 0x8F13
    #define GL_WRAP_BORDER_SUN 0x81D4
    #define GL_WRITEONLY_RENDERING_QCOM 0x8823
    #define GL_WRITE_DISCARD_NV 0x88BE
    #define GL_WRITE_ONLY 0x88B9
    #define GL_WRITE_ONLY_ARB 0x88B9
    #define GL_WRITE_ONLY_OES 0x88B9
    #define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV 0x887A
    #define GL_WRITE_PIXEL_DATA_RANGE_NV 0x8878
    #define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV 0x887C
    #define GL_W_EXT 0x87D8
    #define GL_XOR 0x1506
    #define GL_XOR_NV 0x1506
    #define GL_X_EXT 0x87D5
    #define GL_YCBAYCR8A_4224_NV 0x9032
    #define GL_YCBCR_422_APPLE 0x85B9
    #define GL_YCBCR_MESA 0x8757
    #define GL_YCBYCR8_422_NV 0x9031
    #define GL_YCRCBA_SGIX 0x8319
    #define GL_YCRCB_422_SGIX 0x81BB
    #define GL_YCRCB_444_SGIX 0x81BC
    #define GL_YCRCB_SGIX 0x8318
    #define GL_Y_EXT 0x87D6
    #define GL_Z400_BINARY_AMD 0x8740
    #define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV 0x9036
    #define GL_Z4Y12Z4CB12Z4CR12_444_NV 0x9037
    #define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV 0x9035
    #define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV 0x9034
    #define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV 0x9033
    #define GL_ZERO 0
    #define GL_ZERO_EXT 0x87DD
    #define GL_ZERO_TO_ONE 0x935F
    #define GL_Z_EXT 0x87D7

    /* Version IDs */
    #define GL_ES_VERSION_2_0 1
    #define GL_ES_VERSION_3_0 2
    #define GL_ES_VERSION_3_1 3
    #define GL_ES_VERSION_3_2 4
    #define GL_VERSION_1_0 5
    #define GL_VERSION_1_1 6
    #define GL_VERSION_1_2 7
    #define GL_VERSION_1_3 8
    #define GL_VERSION_1_4 9
    #define GL_VERSION_1_5 10
    #define GL_VERSION_2_0 11
    #define GL_VERSION_2_1 12
    #define GL_VERSION_3_0 13
    #define GL_VERSION_3_1 14
    #define GL_VERSION_3_2 15
    #define GL_VERSION_3_3 16
    #define GL_VERSION_4_0 17
    #define GL_VERSION_4_1 18
    #define GL_VERSION_4_2 19
    #define GL_VERSION_4_3 20
    #define GL_VERSION_4_4 21
    #define GL_VERSION_4_5 22

    /* Extension IDs */
    #define GL_3DFX_multisample 23
    #define GL_3DFX_tbuffer 24
    #define GL_3DFX_texture_compression_FXT1 25
    #define GL_AMD_blend_minmax_factor 26
    #define GL_AMD_compressed_3DC_texture 27
    #define GL_AMD_compressed_ATC_texture 28
    #define GL_AMD_conservative_depth 29
    #define GL_AMD_debug_output 30
    #define GL_AMD_depth_clamp_separate 31
    #define GL_AMD_draw_buffers_blend 32
    #define GL_AMD_framebuffer_sample_positions 33
    #define GL_AMD_gcn_shader 34
    #define GL_AMD_gpu_shader_half_float 35
    #define GL_AMD_gpu_shader_int16 36
    #define GL_AMD_gpu_shader_int64 37
    #define GL_AMD_interleaved_elements 38
    #define GL_AMD_multi_draw_indirect 39
    #define GL_AMD_name_gen_delete 40
    #define GL_AMD_occlusion_query_event 41
    #define GL_AMD_performance_monitor 42
    #define GL_AMD_pinned_memory 43
    #define GL_AMD_program_binary_Z400 44
    #define GL_AMD_query_buffer_object 45
    #define GL_AMD_sample_positions 46
    #define GL_AMD_seamless_cubemap_per_texture 47
    #define GL_AMD_shader_atomic_counter_ops 48
    #define GL_AMD_shader_ballot 49
    #define GL_AMD_shader_explicit_vertex_parameter 50
    #define GL_AMD_shader_stencil_export 51
    #define GL_AMD_shader_trinary_minmax 52
    #define GL_AMD_sparse_texture 53
    #define GL_AMD_stencil_operation_extended 54
    #define GL_AMD_texture_gather_bias_lod 55
    #define GL_AMD_texture_texture4 56
    #define GL_AMD_transform_feedback3_lines_triangles 57
    #define GL_AMD_transform_feedback4 58
    #define GL_AMD_vertex_shader_layer 59
    #define GL_AMD_vertex_shader_tessellator 60
    #define GL_AMD_vertex_shader_viewport_index 61
    #define GL_ANDROID_extension_pack_es31a 62
    #define GL_ANGLE_depth_texture 63
    #define GL_ANGLE_framebuffer_blit 64
    #define GL_ANGLE_framebuffer_multisample 65
    #define GL_ANGLE_instanced_arrays 66
    #define GL_ANGLE_pack_reverse_row_order 67
    #define GL_ANGLE_program_binary 68
    #define GL_ANGLE_texture_compression_dxt3 69
    #define GL_ANGLE_texture_compression_dxt5 70
    #define GL_ANGLE_texture_usage 71
    #define GL_ANGLE_translated_shader_source 72
    #define GL_APPLE_aux_depth_stencil 73
    #define GL_APPLE_client_storage 74
    #define GL_APPLE_clip_distance 75
    #define GL_APPLE_color_buffer_packed_float 76
    #define GL_APPLE_copy_texture_levels 77
    #define GL_APPLE_element_array 78
    #define GL_APPLE_fence 79
    #define GL_APPLE_float_pixels 80
    #define GL_APPLE_flush_buffer_range 81
    #define GL_APPLE_framebuffer_multisample 82
    #define GL_APPLE_object_purgeable 83
    #define GL_APPLE_rgb_422 84
    #define GL_APPLE_row_bytes 85
    #define GL_APPLE_specular_vector 86
    #define GL_APPLE_sync 87
    #define GL_APPLE_texture_format_BGRA8888 88
    #define GL_APPLE_texture_max_level 89
    #define GL_APPLE_texture_packed_float 90
    #define GL_APPLE_texture_range 91
    #define GL_APPLE_transform_hint 92
    #define GL_APPLE_vertex_array_object 93
    #define GL_APPLE_vertex_array_range 94
    #define GL_APPLE_vertex_program_evaluators 95
    #define GL_APPLE_ycbcr_422 96
    #define GL_ARB_ES2_compatibility 97
    #define GL_ARB_ES3_1_compatibility 98
    #define GL_ARB_ES3_2_compatibility 99
    #define GL_ARB_ES3_compatibility 100
    #define GL_ARB_arrays_of_arrays 101
    #define GL_ARB_base_instance 102
    #define GL_ARB_bindless_texture 103
    #define GL_ARB_blend_func_extended 104
    #define GL_ARB_buffer_storage 105
    #define GL_ARB_cl_event 106
    #define GL_ARB_clear_buffer_object 107
    #define GL_ARB_clear_texture 108
    #define GL_ARB_clip_control 109
    #define GL_ARB_color_buffer_float 110
    #define GL_ARB_compatibility 111
    #define GL_ARB_compressed_texture_pixel_storage 112
    #define GL_ARB_compute_shader 113
    #define GL_ARB_compute_variable_group_size 114
    #define GL_ARB_conditional_render_inverted 115
    #define GL_ARB_conservative_depth 116
    #define GL_ARB_copy_buffer 117
    #define GL_ARB_copy_image 118
    #define GL_ARB_cull_distance 119
    #define GL_ARB_debug_output 120
    #define GL_ARB_depth_buffer_float 121
    #define GL_ARB_depth_clamp 122
    #define GL_ARB_depth_texture 123
    #define GL_ARB_derivative_control 124
    #define GL_ARB_direct_state_access 125
    #define GL_ARB_draw_buffers 126
    #define GL_ARB_draw_buffers_blend 127
    #define GL_ARB_draw_elements_base_vertex 128
    #define GL_ARB_draw_indirect 129
    #define GL_ARB_draw_instanced 130
    #define GL_ARB_enhanced_layouts 131
    #define GL_ARB_explicit_attrib_location 132
    #define GL_ARB_explicit_uniform_location 133
    #define GL_ARB_fragment_coord_conventions 134
    #define GL_ARB_fragment_layer_viewport 135
    #define GL_ARB_fragment_program 136
    #define GL_ARB_fragment_program_shadow 137
    #define GL_ARB_fragment_shader 138
    #define GL_ARB_fragment_shader_interlock 139
    #define GL_ARB_framebuffer_no_attachments 140
    #define GL_ARB_framebuffer_object 141
    #define GL_ARB_framebuffer_sRGB 142
    #define GL_ARB_geometry_shader4 143
    #define GL_ARB_get_program_binary 144
    #define GL_ARB_get_texture_sub_image 145
    #define GL_ARB_gl_spirv 146
    #define GL_ARB_gpu_shader5 147
    #define GL_ARB_gpu_shader_fp64 148
    #define GL_ARB_gpu_shader_int64 149
    #define GL_ARB_half_float_pixel 150
    #define GL_ARB_half_float_vertex 151
    #define GL_ARB_imaging 152
    #define GL_ARB_indirect_parameters 153
    #define GL_ARB_instanced_arrays 154
    #define GL_ARB_internalformat_query 155
    #define GL_ARB_internalformat_query2 156
    #define GL_ARB_invalidate_subdata 157
    #define GL_ARB_map_buffer_alignment 158
    #define GL_ARB_map_buffer_range 159
    #define GL_ARB_matrix_palette 160
    #define GL_ARB_multi_bind 161
    #define GL_ARB_multi_draw_indirect 162
    #define GL_ARB_multisample 163
    #define GL_ARB_multitexture 164
    #define GL_ARB_occlusion_query 165
    #define GL_ARB_occlusion_query2 166
    #define GL_ARB_parallel_shader_compile 167
    #define GL_ARB_pipeline_statistics_query 168
    #define GL_ARB_pixel_buffer_object 169
    #define GL_ARB_point_parameters 170
    #define GL_ARB_point_sprite 171
    #define GL_ARB_post_depth_coverage 172
    #define GL_ARB_program_interface_query 173
    #define GL_ARB_provoking_vertex 174
    #define GL_ARB_query_buffer_object 175
    #define GL_ARB_robust_buffer_access_behavior 176
    #define GL_ARB_robustness 177
    #define GL_ARB_robustness_isolation 178
    #define GL_ARB_sample_locations 179
    #define GL_ARB_sample_shading 180
    #define GL_ARB_sampler_objects 181
    #define GL_ARB_seamless_cube_map 182
    #define GL_ARB_seamless_cubemap_per_texture 183
    #define GL_ARB_separate_shader_objects 184
    #define GL_ARB_shader_atomic_counter_ops 185
    #define GL_ARB_shader_atomic_counters 186
    #define GL_ARB_shader_ballot 187
    #define GL_ARB_shader_bit_encoding 188
    #define GL_ARB_shader_clock 189
    #define GL_ARB_shader_draw_parameters 190
    #define GL_ARB_shader_group_vote 191
    #define GL_ARB_shader_image_load_store 192
    #define GL_ARB_shader_image_size 193
    #define GL_ARB_shader_objects 194
    #define GL_ARB_shader_precision 195
    #define GL_ARB_shader_stencil_export 196
    #define GL_ARB_shader_storage_buffer_object 197
    #define GL_ARB_shader_subroutine 198
    #define GL_ARB_shader_texture_image_samples 199
    #define GL_ARB_shader_texture_lod 200
    #define GL_ARB_shader_viewport_layer_array 201
    #define GL_ARB_shading_language_100 202
    #define GL_ARB_shading_language_420pack 203
    #define GL_ARB_shading_language_include 204
    #define GL_ARB_shading_language_packing 205
    #define GL_ARB_shadow 206
    #define GL_ARB_shadow_ambient 207
    #define GL_ARB_sparse_buffer 208
    #define GL_ARB_sparse_texture 209
    #define GL_ARB_sparse_texture2 210
    #define GL_ARB_sparse_texture_clamp 211
    #define GL_ARB_stencil_texturing 212
    #define GL_ARB_sync 213
    #define GL_ARB_tessellation_shader 214
    #define GL_ARB_texture_barrier 215
    #define GL_ARB_texture_border_clamp 216
    #define GL_ARB_texture_buffer_object 217
    #define GL_ARB_texture_buffer_object_rgb32 218
    #define GL_ARB_texture_buffer_range 219
    #define GL_ARB_texture_compression 220
    #define GL_ARB_texture_compression_bptc 221
    #define GL_ARB_texture_compression_rgtc 222
    #define GL_ARB_texture_cube_map 223
    #define GL_ARB_texture_cube_map_array 224
    #define GL_ARB_texture_env_add 225
    #define GL_ARB_texture_env_combine 226
    #define GL_ARB_texture_env_crossbar 227
    #define GL_ARB_texture_env_dot3 228
    #define GL_ARB_texture_filter_minmax 229
    #define GL_ARB_texture_float 230
    #define GL_ARB_texture_gather 231
    #define GL_ARB_texture_mirror_clamp_to_edge 232
    #define GL_ARB_texture_mirrored_repeat 233
    #define GL_ARB_texture_multisample 234
    #define GL_ARB_texture_non_power_of_two 235
    #define GL_ARB_texture_query_levels 236
    #define GL_ARB_texture_query_lod 237
    #define GL_ARB_texture_rectangle 238
    #define GL_ARB_texture_rg 239
    #define GL_ARB_texture_rgb10_a2ui 240
    #define GL_ARB_texture_stencil8 241
    #define GL_ARB_texture_storage 242
    #define GL_ARB_texture_storage_multisample 243
    #define GL_ARB_texture_swizzle 244
    #define GL_ARB_texture_view 245
    #define GL_ARB_timer_query 246
    #define GL_ARB_transform_feedback2 247
    #define GL_ARB_transform_feedback3 248
    #define GL_ARB_transform_feedback_instanced 249
    #define GL_ARB_transform_feedback_overflow_query 250
    #define GL_ARB_transpose_matrix 251
    #define GL_ARB_uniform_buffer_object 252
    #define GL_ARB_vertex_array_bgra 253
    #define GL_ARB_vertex_array_object 254
    #define GL_ARB_vertex_attrib_64bit 255
    #define GL_ARB_vertex_attrib_binding 256
    #define GL_ARB_vertex_blend 257
    #define GL_ARB_vertex_buffer_object 258
    #define GL_ARB_vertex_program 259
    #define GL_ARB_vertex_shader 260
    #define GL_ARB_vertex_type_10f_11f_11f_rev 261
    #define GL_ARB_vertex_type_2_10_10_10_rev 262
    #define GL_ARB_viewport_array 263
    #define GL_ARB_window_pos 264
    #define GL_ARM_mali_program_binary 265
    #define GL_ARM_mali_shader_binary 266
    #define GL_ARM_rgba8 267
    #define GL_ARM_shader_framebuffer_fetch 268
    #define GL_ARM_shader_framebuffer_fetch_depth_stencil 269
    #define GL_ATI_draw_buffers 270
    #define GL_ATI_element_array 271
    #define GL_ATI_envmap_bumpmap 272
    #define GL_ATI_fragment_shader 273
    #define GL_ATI_map_object_buffer 274
    #define GL_ATI_meminfo 275
    #define GL_ATI_pixel_format_float 276
    #define GL_ATI_pn_triangles 277
    #define GL_ATI_separate_stencil 278
    #define GL_ATI_text_fragment_shader 279
    #define GL_ATI_texture_env_combine3 280
    #define GL_ATI_texture_float 281
    #define GL_ATI_texture_mirror_once 282
    #define GL_ATI_vertex_array_object 283
    #define GL_ATI_vertex_attrib_array_object 284
    #define GL_ATI_vertex_streams 285
    #define GL_DMP_program_binary 286
    #define GL_DMP_shader_binary 287
    #define GL_EXTX_framebuffer_mixed_formats 288
    #define GL_EXT_422_pixels 289
    #define GL_EXT_Cg_shader 290
    #define GL_EXT_EGL_image_array 291
    #define GL_EXT_YUV_target 292
    #define GL_EXT_abgr 293
    #define GL_EXT_base_instance 294
    #define GL_EXT_bgra 295
    #define GL_EXT_bindable_uniform 296
    #define GL_EXT_blend_color 297
    #define GL_EXT_blend_equation_separate 298
    #define GL_EXT_blend_func_extended 299
    #define GL_EXT_blend_func_separate 300
    #define GL_EXT_blend_logic_op 301
    #define GL_EXT_blend_minmax 302
    #define GL_EXT_blend_subtract 303
    #define GL_EXT_buffer_storage 304
    #define GL_EXT_clear_texture 305
    #define GL_EXT_clip_cull_distance 306
    #define GL_EXT_clip_volume_hint 307
    #define GL_EXT_cmyka 308
    #define GL_EXT_color_buffer_float 309
    #define GL_EXT_color_buffer_half_float 310
    #define GL_EXT_color_subtable 311
    #define GL_EXT_compiled_vertex_array 312
    #define GL_EXT_conservative_depth 313
    #define GL_EXT_convolution 314
    #define GL_EXT_coordinate_frame 315
    #define GL_EXT_copy_image 316
    #define GL_EXT_copy_texture 317
    #define GL_EXT_cull_vertex 318
    #define GL_EXT_debug_label 319
    #define GL_EXT_debug_marker 320
    #define GL_EXT_depth_bounds_test 321
    #define GL_EXT_direct_state_access 322
    #define GL_EXT_discard_framebuffer 323
    #define GL_EXT_disjoint_timer_query 324
    #define GL_EXT_draw_buffers 325
    #define GL_EXT_draw_buffers2 326
    #define GL_EXT_draw_buffers_indexed 327
    #define GL_EXT_draw_elements_base_vertex 328
    #define GL_EXT_draw_instanced 329
    #define GL_EXT_draw_range_elements 330
    #define GL_EXT_draw_transform_feedback 331
    #define GL_EXT_external_buffer 332
    #define GL_EXT_float_blend 333
    #define GL_EXT_fog_coord 334
    #define GL_EXT_framebuffer_blit 335
    #define GL_EXT_framebuffer_multisample 336
    #define GL_EXT_framebuffer_multisample_blit_scaled 337
    #define GL_EXT_framebuffer_object 338
    #define GL_EXT_framebuffer_sRGB 339
    #define GL_EXT_geometry_point_size 340
    #define GL_EXT_geometry_shader 341
    #define GL_EXT_geometry_shader4 342
    #define GL_EXT_gpu_program_parameters 343
    #define GL_EXT_gpu_shader4 344
    #define GL_EXT_gpu_shader5 345
    #define GL_EXT_histogram 346
    #define GL_EXT_import_sync_object 347
    #define GL_EXT_index_array_formats 348
    #define GL_EXT_index_func 349
    #define GL_EXT_index_material 350
    #define GL_EXT_index_texture 351
    #define GL_EXT_instanced_arrays 352
    #define GL_EXT_light_texture 353
    #define GL_EXT_map_buffer_range 354
    #define GL_EXT_memory_object 355
    #define GL_EXT_memory_object_fd 356
    #define GL_EXT_memory_object_win32 357
    #define GL_EXT_misc_attribute 358
    #define GL_EXT_multi_draw_arrays 359
    #define GL_EXT_multi_draw_indirect 360
    #define GL_EXT_multisample 361
    #define GL_EXT_multisampled_compatibility 362
    #define GL_EXT_multisampled_render_to_texture 363
    #define GL_EXT_multiview_draw_buffers 364
    #define GL_EXT_occlusion_query_boolean 365
    #define GL_EXT_packed_depth_stencil 366
    #define GL_EXT_packed_float 367
    #define GL_EXT_packed_pixels 368
    #define GL_EXT_paletted_texture 369
    #define GL_EXT_pixel_buffer_object 370
    #define GL_EXT_pixel_transform 371
    #define GL_EXT_pixel_transform_color_table 372
    #define GL_EXT_point_parameters 373
    #define GL_EXT_polygon_offset 374
    #define GL_EXT_polygon_offset_clamp 375
    #define GL_EXT_post_depth_coverage 376
    #define GL_EXT_primitive_bounding_box 377
    #define GL_EXT_protected_textures 378
    #define GL_EXT_provoking_vertex 379
    #define GL_EXT_pvrtc_sRGB 380
    #define GL_EXT_raster_multisample 381
    #define GL_EXT_read_format_bgra 382
    #define GL_EXT_render_snorm 383
    #define GL_EXT_rescale_normal 384
    #define GL_EXT_robustness 385
    #define GL_EXT_sRGB 386
    #define GL_EXT_sRGB_write_control 387
    #define GL_EXT_secondary_color 388
    #define GL_EXT_semaphore 389
    #define GL_EXT_semaphore_fd 390
    #define GL_EXT_semaphore_win32 391
    #define GL_EXT_separate_shader_objects 392
    #define GL_EXT_separate_specular_color 393
    #define GL_EXT_shader_framebuffer_fetch 394
    #define GL_EXT_shader_group_vote 395
    #define GL_EXT_shader_image_load_formatted 396
    #define GL_EXT_shader_image_load_store 397
    #define GL_EXT_shader_implicit_conversions 398
    #define GL_EXT_shader_integer_mix 399
    #define GL_EXT_shader_io_blocks 400
    #define GL_EXT_shader_non_constant_global_initializers 401
    #define GL_EXT_shader_pixel_local_storage 402
    #define GL_EXT_shader_pixel_local_storage2 403
    #define GL_EXT_shader_texture_lod 404
    #define GL_EXT_shadow_funcs 405
    #define GL_EXT_shadow_samplers 406
    #define GL_EXT_shared_texture_palette 407
    #define GL_EXT_sparse_texture 408
    #define GL_EXT_sparse_texture2 409
    #define GL_EXT_stencil_clear_tag 410
    #define GL_EXT_stencil_two_side 411
    #define GL_EXT_stencil_wrap 412
    #define GL_EXT_subtexture 413
    #define GL_EXT_tessellation_point_size 414
    #define GL_EXT_tessellation_shader 415
    #define GL_EXT_texture 416
    #define GL_EXT_texture3D 417
    #define GL_EXT_texture_array 418
    #define GL_EXT_texture_border_clamp 419
    #define GL_EXT_texture_buffer 420
    #define GL_EXT_texture_buffer_object 421
    #define GL_EXT_texture_compression_astc_decode_mode 422
    #define GL_EXT_texture_compression_dxt1 423
    #define GL_EXT_texture_compression_latc 424
    #define GL_EXT_texture_compression_rgtc 425
    #define GL_EXT_texture_compression_s3tc 426
    #define GL_EXT_texture_cube_map 427
    #define GL_EXT_texture_cube_map_array 428
    #define GL_EXT_texture_edge_clamp 429
    #define GL_EXT_texture_env_add 430
    #define GL_EXT_texture_env_combine 431
    #define GL_EXT_texture_env_dot3 432
    #define GL_EXT_texture_filter_anisotropic 433
    #define GL_EXT_texture_filter_minmax 434
    #define GL_EXT_texture_format_BGRA8888 435
    #define GL_EXT_texture_integer 436
    #define GL_EXT_texture_lod_bias 437
    #define GL_EXT_texture_mirror_clamp 438
    #define GL_EXT_texture_norm16 439
    #define GL_EXT_texture_object 440
    #define GL_EXT_texture_perturb_normal 441
    #define GL_EXT_texture_rg 442
    #define GL_EXT_texture_sRGB 443
    #define GL_EXT_texture_sRGB_R8 444
    #define GL_EXT_texture_sRGB_RG8 445
    #define GL_EXT_texture_sRGB_decode 446
    #define GL_EXT_texture_shared_exponent 447
    #define GL_EXT_texture_snorm 448
    #define GL_EXT_texture_storage 449
    #define GL_EXT_texture_swizzle 450
    #define GL_EXT_texture_type_2_10_10_10_REV 451
    #define GL_EXT_texture_view 452
    #define GL_EXT_timer_query 453
    #define GL_EXT_transform_feedback 454
    #define GL_EXT_unpack_subimage 455
    #define GL_EXT_vertex_array 456
    #define GL_EXT_vertex_array_bgra 457
    #define GL_EXT_vertex_attrib_64bit 458
    #define GL_EXT_vertex_shader 459
    #define GL_EXT_vertex_weighting 460
    #define GL_EXT_win32_keyed_mutex 461
    #define GL_EXT_window_rectangles 462
    #define GL_EXT_x11_sync_object 463
    #define GL_FJ_shader_binary_GCCSO 464
    #define GL_GLES_PROTOTYPES 465
    #define GL_GREMEDY_frame_terminator 466
    #define GL_GREMEDY_string_marker 467
    #define GL_HP_convolution_border_modes 468
    #define GL_HP_image_transform 469
    #define GL_HP_occlusion_test 470
    #define GL_HP_texture_lighting 471
    #define GL_IBM_cull_vertex 472
    #define GL_IBM_multimode_draw_arrays 473
    #define GL_IBM_rasterpos_clip 474
    #define GL_IBM_static_data 475
    #define GL_IBM_texture_mirrored_repeat 476
    #define GL_IBM_vertex_array_lists 477
    #define GL_IMG_bindless_texture 478
    #define GL_IMG_framebuffer_downsample 479
    #define GL_IMG_multisampled_render_to_texture 480
    #define GL_IMG_program_binary 481
    #define GL_IMG_read_format 482
    #define GL_IMG_shader_binary 483
    #define GL_IMG_texture_compression_pvrtc 484
    #define GL_IMG_texture_compression_pvrtc2 485
    #define GL_IMG_texture_filter_cubic 486
    #define GL_INGR_blend_func_separate 487
    #define GL_INGR_color_clamp 488
    #define GL_INGR_interlace_read 489
    #define GL_INTEL_conservative_rasterization 490
    #define GL_INTEL_fragment_shader_ordering 491
    #define GL_INTEL_framebuffer_CMAA 492
    #define GL_INTEL_map_texture 493
    #define GL_INTEL_parallel_arrays 494
    #define GL_INTEL_performance_query 495
    #define GL_KHR_blend_equation_advanced 496
    #define GL_KHR_blend_equation_advanced_coherent 497
    #define GL_KHR_context_flush_control 498
    #define GL_KHR_debug 499
    #define GL_KHR_no_error 500
    #define GL_KHR_robust_buffer_access_behavior 501
    #define GL_KHR_robustness 502
    #define GL_KHR_texture_compression_astc_hdr 503
    #define GL_KHR_texture_compression_astc_ldr 504
    #define GL_KHR_texture_compression_astc_sliced_3d 505
    #define GL_KTX_buffer_region 506
    #define GL_MESAX_texture_stack 507
    #define GL_MESA_pack_invert 508
    #define GL_MESA_resize_buffers 509
    #define GL_MESA_shader_integer_functions 510
    #define GL_MESA_window_pos 511
    #define GL_MESA_ycbcr_texture 512
    #define GL_NVX_blend_equation_advanced_multi_draw_buffers 513
    #define GL_NVX_conditional_render 514
    #define GL_NVX_gpu_memory_info 515
    #define GL_NVX_linked_gpu_multicast 516
    #define GL_NV_ES1_1_compatibility 517
    #define GL_NV_alpha_to_coverage_dither_control 518
    #define GL_NV_bindless_multi_draw_indirect 519
    #define GL_NV_bindless_multi_draw_indirect_count 520
    #define GL_NV_bindless_texture 521
    #define GL_NV_blend_equation_advanced 522
    #define GL_NV_blend_equation_advanced_coherent 523
    #define GL_NV_blend_square 524
    #define GL_NV_clip_space_w_scaling 525
    #define GL_NV_command_list 526
    #define GL_NV_compute_program5 527
    #define GL_NV_conditional_render 528
    #define GL_NV_conservative_raster 529
    #define GL_NV_conservative_raster_dilate 530
    #define GL_NV_conservative_raster_pre_snap_triangles 531
    #define GL_NV_copy_buffer 532
    #define GL_NV_copy_depth_to_color 533
    #define GL_NV_copy_image 534
    #define GL_NV_coverage_sample 535
    #define GL_NV_deep_texture3D 536
    #define GL_NV_depth_buffer_float 537
    #define GL_NV_depth_clamp 538
    #define GL_NV_depth_nonlinear 539
    #define GL_NV_draw_buffers 540
    #define GL_NV_draw_instanced 541
    #define GL_NV_draw_texture 542
    #define GL_NV_draw_vulkan_image 543
    #define GL_NV_evaluators 544
    #define GL_NV_explicit_attrib_location 545
    #define GL_NV_explicit_multisample 546
    #define GL_NV_fbo_color_attachments 547
    #define GL_NV_fence 548
    #define GL_NV_fill_rectangle 549
    #define GL_NV_float_buffer 550
    #define GL_NV_fog_distance 551
    #define GL_NV_fragment_coverage_to_color 552
    #define GL_NV_fragment_program 553
    #define GL_NV_fragment_program2 554
    #define GL_NV_fragment_program4 555
    #define GL_NV_fragment_program_option 556
    #define GL_NV_fragment_shader_interlock 557
    #define GL_NV_framebuffer_blit 558
    #define GL_NV_framebuffer_mixed_samples 559
    #define GL_NV_framebuffer_multisample 560
    #define GL_NV_framebuffer_multisample_coverage 561
    #define GL_NV_generate_mipmap_sRGB 562
    #define GL_NV_geometry_program4 563
    #define GL_NV_geometry_shader4 564
    #define GL_NV_geometry_shader_passthrough 565
    #define GL_NV_gpu_multicast 566
    #define GL_NV_gpu_program4 567
    #define GL_NV_gpu_program5 568
    #define GL_NV_gpu_program5_mem_extended 569
    #define GL_NV_gpu_shader5 570
    #define GL_NV_half_float 571
    #define GL_NV_image_formats 572
    #define GL_NV_instanced_arrays 573
    #define GL_NV_internalformat_sample_query 574
    #define GL_NV_light_max_exponent 575
    #define GL_NV_multisample_coverage 576
    #define GL_NV_multisample_filter_hint 577
    #define GL_NV_non_square_matrices 578
    #define GL_NV_occlusion_query 579
    #define GL_NV_packed_depth_stencil 580
    #define GL_NV_parameter_buffer_object 581
    #define GL_NV_parameter_buffer_object2 582
    #define GL_NV_path_rendering 583
    #define GL_NV_path_rendering_shared_edge 584
    #define GL_NV_pixel_data_range 585
    #define GL_NV_point_sprite 586
    #define GL_NV_polygon_mode 587
    #define GL_NV_present_video 588
    #define GL_NV_primitive_restart 589
    #define GL_NV_read_buffer 590
    #define GL_NV_read_buffer_front 591
    #define GL_NV_read_depth 592
    #define GL_NV_read_depth_stencil 593
    #define GL_NV_read_stencil 594
    #define GL_NV_register_combiners 595
    #define GL_NV_register_combiners2 596
    #define GL_NV_robustness_video_memory_purge 597
    #define GL_NV_sRGB_formats 598
    #define GL_NV_sample_locations 599
    #define GL_NV_sample_mask_override_coverage 600
    #define GL_NV_shader_atomic_counters 601
    #define GL_NV_shader_atomic_float 602
    #define GL_NV_shader_atomic_float64 603
    #define GL_NV_shader_atomic_fp16_vector 604
    #define GL_NV_shader_atomic_int64 605
    #define GL_NV_shader_buffer_load 606
    #define GL_NV_shader_buffer_store 607
    #define GL_NV_shader_noperspective_interpolation 608
    #define GL_NV_shader_storage_buffer_object 609
    #define GL_NV_shader_thread_group 610
    #define GL_NV_shader_thread_shuffle 611
    #define GL_NV_shadow_samplers_array 612
    #define GL_NV_shadow_samplers_cube 613
    #define GL_NV_stereo_view_rendering 614
    #define GL_NV_tessellation_program5 615
    #define GL_NV_texgen_emboss 616
    #define GL_NV_texgen_reflection 617
    #define GL_NV_texture_barrier 618
    #define GL_NV_texture_border_clamp 619
    #define GL_NV_texture_compression_s3tc_update 620
    #define GL_NV_texture_compression_vtc 621
    #define GL_NV_texture_env_combine4 622
    #define GL_NV_texture_expand_normal 623
    #define GL_NV_texture_multisample 624
    #define GL_NV_texture_npot_2D_mipmap 625
    #define GL_NV_texture_rectangle 626
    #define GL_NV_texture_shader 627
    #define GL_NV_texture_shader2 628
    #define GL_NV_texture_shader3 629
    #define GL_NV_transform_feedback 630
    #define GL_NV_transform_feedback2 631
    #define GL_NV_uniform_buffer_unified_memory 632
    #define GL_NV_vdpau_interop 633
    #define GL_NV_vertex_array_range 634
    #define GL_NV_vertex_array_range2 635
    #define GL_NV_vertex_attrib_integer_64bit 636
    #define GL_NV_vertex_buffer_unified_memory 637
    #define GL_NV_vertex_program 638
    #define GL_NV_vertex_program1_1 639
    #define GL_NV_vertex_program2 640
    #define GL_NV_vertex_program2_option 641
    #define GL_NV_vertex_program3 642
    #define GL_NV_vertex_program4 643
    #define GL_NV_video_capture 644
    #define GL_NV_viewport_array 645
    #define GL_NV_viewport_array2 646
    #define GL_NV_viewport_swizzle 647
    #define GL_OES_EGL_image 648
    #define GL_OES_EGL_image_external 649
    #define GL_OES_EGL_image_external_essl3 650
    #define GL_OES_byte_coordinates 651
    #define GL_OES_compressed_ETC1_RGB8_sub_texture 652
    #define GL_OES_compressed_ETC1_RGB8_texture 653
    #define GL_OES_compressed_paletted_texture 654
    #define GL_OES_copy_image 655
    #define GL_OES_depth24 656
    #define GL_OES_depth32 657
    #define GL_OES_depth_texture 658
    #define GL_OES_draw_buffers_indexed 659
    #define GL_OES_draw_elements_base_vertex 660
    #define GL_OES_element_index_uint 661
    #define GL_OES_fbo_render_mipmap 662
    #define GL_OES_fixed_point 663
    #define GL_OES_fragment_precision_high 664
    #define GL_OES_geometry_point_size 665
    #define GL_OES_geometry_shader 666
    #define GL_OES_get_program_binary 667
    #define GL_OES_gpu_shader5 668
    #define GL_OES_mapbuffer 669
    #define GL_OES_packed_depth_stencil 670
    #define GL_OES_primitive_bounding_box 671
    #define GL_OES_query_matrix 672
    #define GL_OES_read_format 673
    #define GL_OES_required_internalformat 674
    #define GL_OES_rgb8_rgba8 675
    #define GL_OES_sample_shading 676
    #define GL_OES_sample_variables 677
    #define GL_OES_shader_image_atomic 678
    #define GL_OES_shader_io_blocks 679
    #define GL_OES_shader_multisample_interpolation 680
    #define GL_OES_single_precision 681
    #define GL_OES_standard_derivatives 682
    #define GL_OES_stencil1 683
    #define GL_OES_stencil4 684
    #define GL_OES_surfaceless_context 685
    #define GL_OES_tessellation_point_size 686
    #define GL_OES_tessellation_shader 687
    #define GL_OES_texture_3D 688
    #define GL_OES_texture_border_clamp 689
    #define GL_OES_texture_buffer 690
    #define GL_OES_texture_compression_astc 691
    #define GL_OES_texture_cube_map_array 692
    #define GL_OES_texture_float 693
    #define GL_OES_texture_float_linear 694
    #define GL_OES_texture_half_float 695
    #define GL_OES_texture_half_float_linear 696
    #define GL_OES_texture_npot 697
    #define GL_OES_texture_stencil8 698
    #define GL_OES_texture_storage_multisample_2d_array 699
    #define GL_OES_texture_view 700
    #define GL_OES_vertex_array_object 701
    #define GL_OES_vertex_half_float 702
    #define GL_OES_vertex_type_10_10_10_2 703
    #define GL_OES_viewport_array 704
    #define GL_OML_interlace 705
    #define GL_OML_resample 706
    #define GL_OML_subsample 707
    #define GL_OVR_multiview 708
    #define GL_OVR_multiview2 709
    #define GL_OVR_multiview_multisampled_render_to_texture 710
    #define GL_PGI_misc_hints 711
    #define GL_PGI_vertex_hints 712
    #define GL_QCOM_alpha_test 713
    #define GL_QCOM_binning_control 714
    #define GL_QCOM_driver_control 715
    #define GL_QCOM_extended_get 716
    #define GL_QCOM_extended_get2 717
    #define GL_QCOM_framebuffer_foveated 718
    #define GL_QCOM_perfmon_global_mode 719
    #define GL_QCOM_shader_framebuffer_fetch_noncoherent 720
    #define GL_QCOM_tiled_rendering 721
    #define GL_QCOM_writeonly_rendering 722
    #define GL_REND_screen_coordinates 723
    #define GL_S3_s3tc 724
    #define GL_SGIS_detail_texture 725
    #define GL_SGIS_fog_function 726
    #define GL_SGIS_generate_mipmap 727
    #define GL_SGIS_multisample 728
    #define GL_SGIS_pixel_texture 729
    #define GL_SGIS_point_line_texgen 730
    #define GL_SGIS_point_parameters 731
    #define GL_SGIS_sharpen_texture 732
    #define GL_SGIS_texture4D 733
    #define GL_SGIS_texture_border_clamp 734
    #define GL_SGIS_texture_color_mask 735
    #define GL_SGIS_texture_edge_clamp 736
    #define GL_SGIS_texture_filter4 737
    #define GL_SGIS_texture_lod 738
    #define GL_SGIS_texture_select 739
    #define GL_SGIX_async 740
    #define GL_SGIX_async_histogram 741
    #define GL_SGIX_async_pixel 742
    #define GL_SGIX_blend_alpha_minmax 743
    #define GL_SGIX_calligraphic_fragment 744
    #define GL_SGIX_clipmap 745
    #define GL_SGIX_convolution_accuracy 746
    #define GL_SGIX_depth_pass_instrument 747
    #define GL_SGIX_depth_texture 748
    #define GL_SGIX_flush_raster 749
    #define GL_SGIX_fog_offset 750
    #define GL_SGIX_fragment_lighting 751
    #define GL_SGIX_framezoom 752
    #define GL_SGIX_igloo_interface 753
    #define GL_SGIX_instruments 754
    #define GL_SGIX_interlace 755
    #define GL_SGIX_ir_instrument1 756
    #define GL_SGIX_list_priority 757
    #define GL_SGIX_pixel_texture 758
    #define GL_SGIX_pixel_tiles 759
    #define GL_SGIX_polynomial_ffd 760
    #define GL_SGIX_reference_plane 761
    #define GL_SGIX_resample 762
    #define GL_SGIX_scalebias_hint 763
    #define GL_SGIX_shadow 764
    #define GL_SGIX_shadow_ambient 765
    #define GL_SGIX_sprite 766
    #define GL_SGIX_subsample 767
    #define GL_SGIX_tag_sample_buffer 768
    #define GL_SGIX_texture_add_env 769
    #define GL_SGIX_texture_coordinate_clamp 770
    #define GL_SGIX_texture_lod_bias 771
    #define GL_SGIX_texture_multi_buffer 772
    #define GL_SGIX_texture_scale_bias 773
    #define GL_SGIX_vertex_preclip 774
    #define GL_SGIX_ycrcb 775
    #define GL_SGIX_ycrcb_subsample 776
    #define GL_SGIX_ycrcba 777
    #define GL_SGI_color_matrix 778
    #define GL_SGI_color_table 779
    #define GL_SGI_texture_color_table 780
    #define GL_SUNX_constant_data 781
    #define GL_SUN_convolution_border_modes 782
    #define GL_SUN_global_alpha 783
    #define GL_SUN_mesh_array 784
    #define GL_SUN_slice_accum 785
    #define GL_SUN_triangle_list 786
    #define GL_SUN_vertex 787
    #define GL_VIV_shader_binary 788
    #define GL_WIN_phong_shading 789
    #define GL_WIN_specular_fog 790

#endif

#ifndef ONUT_STD_CALL
    #if defined(_WIN32)
        #define ONUT_STD_CALL __stdcall
    #else
        #define ONUT_STD_CALL
    #endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*!
 * User is required to call this function as soon as the GL context has been created.
 * Failing to calling this function will result in a crash.
 */
bool onutGLInit();

/*!
 * User should call this function as soon as the GL context is destroyed. It is not
 * mandatory, but is highly recommended. User can also opt to create anew GL context
 * and call onutGLInit() instead.
 */
void onutGLShutdown();

/*!
     Utility to check if a specific OpenGL or OpenGL ES function or extension is supported and available.

     Usage example:

     \code
     if(onutGLSupport(GL_VERSION_3_0) || onutGLSupport(GL_ES_VERSION_3_0))
     {
         void *pMapped = glMapBufferRange(target, 0, buffer.size(), GL_MAP_WRITE_BIT | GL_MAP_INVALIDATE_BUFFER_BIT);
         std::copy(buffer.begin(), buffer.end(), pMapped);
         glUnmapBuffer(target);
     }
     else if (onutGLSupport(GL_EXT_map_buffer_range) && onutGLSupport(GL_OES_mapbuffer)
     {
         void *pMapped = glMapBufferRangeEXT(target, 0, buffer.size(), GL_MAP_WRITE_BIT_EXT | GL_MAP_INVALIDATE_BUFFER_BIT_EXT);
         std::copy(buffer.begin(), buffer.end(), pMapped);
         glUnmapBufferOES(target);
     }
     else
     {
         glBufferData(target, buffer.size(), reinterpret_cast<const GLvoid *>(&buffer[0]), usage);
     }
     \endcode
 */
ONUT_FORCE_INLINE bool onutGLSupport(size_t extensionID);

/*!
     Checks if a specific OpenGL or OpenGL ES command triggered an error.

     Usage example:

     \code
         // Only checks if compiled in debug.
         onutGLCheckErrorDebug(glBindBuffer(handle));

         // checks for both debug and release.
         onutGLCheckError(glBufferData(target, bufferSize, (const GLvoid *)pBuffer, GL_STATIC_DRAW));
     \endcode

     \note onutGLCheckErrorDebug is disabled when the application is compiled for a release build.
     \warning calling glGetError can affect your rendering performance. We recommend
     using onutGLCheckErrorDebug instead of onutGLCheckError so that the production
     build won't be impacted. If you want to use onutGLCheckError, make sure it is not called
     during time critical code path.
 */
void _onutGLCheckError(const char* fileName, int lineNumber);
#if !defined(onutGLCheckError)
    #define onutGLCheckError(x) x; _onutGLCheckError(__FILE__, __LINE__)
#endif
#if !defined(onutGLCheckErrorDebug)
    #if defined(_DEBUG) || !defined(NDEBUG)
        #define onutGLCheckErrorDebug(x) x; _onutGLCheckError(__FILE__, __LINE__)
    #else
        #define onutGLCheckErrorDebug(x) x
    #endif
#endif


#if ONUT_GL_WRANGLER_ENABLED
/* Type definitions */
typedef int8_t GLbyte;
typedef float GLclampf;
typedef int32_t GLfixed;
typedef int16_t GLshort;
typedef uint16_t GLushort;
typedef void GLvoid;
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef uint32_t GLenum;
typedef uint32_t GLuint;
typedef char GLchar;
typedef float GLfloat;
typedef intptr_t GLsizeiptr;
typedef intptr_t GLintptr;
typedef uint32_t GLbitfield;
typedef int32_t GLint;
typedef uint8_t GLboolean;
typedef int32_t GLsizei;
typedef uint8_t GLubyte;
typedef uint16_t GLhalf;
typedef void *GLeglImageOES;
typedef void *GLeglClientBufferEXT;
typedef int64_t GLint64EXT;
typedef uint64_t GLuint64EXT;
typedef double GLdouble;
typedef double GLclampd;
typedef uint16_t GLhalfARB;
typedef uint32_t GLhandleARB;
typedef char GLcharARB;
typedef ptrdiff_t GLsizeiptrARB;
typedef ptrdiff_t GLintptrARB;
typedef uint16_t GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;
    
/* Function pointer type definitions */
typedef void (*GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (*GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
typedef void (*GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (*GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (*GLVULKANPROCNV)(void);
    
/* Data structures */
typedef struct __GLsync *GLsync;
struct _cl_context;
struct _cl_event;
#endif

typedef struct OnutGLAPIConfig
{
    bool        bIsGLES;
    const char* pRenderer;
    const char* pVendor;
    const char* pVersion;
    int32_t     nVersionMajor;
    int32_t     nVersionMinor;
    const char* extensions[578];
    size_t      extensionsCount;
    const char* pShadingLanguageVersion;
    int32_t     nShadingLanguageVersionMajor;
    int32_t     nShadingLanguageVersionMinor;
    bool        supportedExtensions[791];

#if ONUT_GL_WRANGLER_ENABLED
    /* GL function pointers */
    void (ONUT_STD_CALL *onutActiveShaderProgram)(GLuint pipeline, GLuint program);
    void (ONUT_STD_CALL *onutActiveTexture)(GLenum texture);
    void (ONUT_STD_CALL *onutAttachShader)(GLuint program, GLuint shader);
    void (ONUT_STD_CALL *onutBeginConditionalRender)(GLuint id, GLenum mode);
    void (ONUT_STD_CALL *onutBeginQuery)(GLenum target, GLuint id);
    void (ONUT_STD_CALL *onutBeginQueryIndexed)(GLenum target, GLuint index, GLuint id);
    void (ONUT_STD_CALL *onutBeginTransformFeedback)(GLenum primitiveMode);
    void (ONUT_STD_CALL *onutBindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
    void (ONUT_STD_CALL *onutBindBuffer)(GLenum target, GLuint buffer);
    void (ONUT_STD_CALL *onutBindBufferBase)(GLenum target, GLuint index, GLuint buffer);
    void (ONUT_STD_CALL *onutBindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutBindBuffersBase)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
    void (ONUT_STD_CALL *onutBindBuffersRange)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
    void (ONUT_STD_CALL *onutBindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
    void (ONUT_STD_CALL *onutBindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
    void (ONUT_STD_CALL *onutBindFramebuffer)(GLenum target, GLuint framebuffer);
    void (ONUT_STD_CALL *onutBindImageTexture)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
    void (ONUT_STD_CALL *onutBindImageTextures)(GLuint first, GLsizei count, const GLuint *textures);
    void (ONUT_STD_CALL *onutBindProgramPipeline)(GLuint pipeline);
    void (ONUT_STD_CALL *onutBindRenderbuffer)(GLenum target, GLuint renderbuffer);
    void (ONUT_STD_CALL *onutBindSampler)(GLuint unit, GLuint sampler);
    void (ONUT_STD_CALL *onutBindSamplers)(GLuint first, GLsizei count, const GLuint *samplers);
    void (ONUT_STD_CALL *onutBindTexture)(GLenum target, GLuint texture);
    void (ONUT_STD_CALL *onutBindTextureUnit)(GLuint unit, GLuint texture);
    void (ONUT_STD_CALL *onutBindTextures)(GLuint first, GLsizei count, const GLuint *textures);
    void (ONUT_STD_CALL *onutBindTransformFeedback)(GLenum target, GLuint id);
    void (ONUT_STD_CALL *onutBindVertexArray)(GLuint array);
    void (ONUT_STD_CALL *onutBindVertexBuffer)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
    void (ONUT_STD_CALL *onutBindVertexBuffers)(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
    void (ONUT_STD_CALL *onutBlendBarrier)(void);
    void (ONUT_STD_CALL *onutBlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
    void (ONUT_STD_CALL *onutBlendEquation)(GLenum mode);
    void (ONUT_STD_CALL *onutBlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
    void (ONUT_STD_CALL *onutBlendEquationSeparatei)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    void (ONUT_STD_CALL *onutBlendEquationi)(GLuint buf, GLenum mode);
    void (ONUT_STD_CALL *onutBlendFunc)(GLenum sfactor, GLenum dfactor);
    void (ONUT_STD_CALL *onutBlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
    void (ONUT_STD_CALL *onutBlendFuncSeparatei)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    void (ONUT_STD_CALL *onutBlendFunci)(GLuint buf, GLenum src, GLenum dst);
    void (ONUT_STD_CALL *onutBlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    void (ONUT_STD_CALL *onutBlitNamedFramebuffer)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    void (ONUT_STD_CALL *onutBufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
    void (ONUT_STD_CALL *onutBufferStorage)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
    void (ONUT_STD_CALL *onutBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
    GLenum (ONUT_STD_CALL *onutCheckFramebufferStatus)(GLenum target);
    GLenum (ONUT_STD_CALL *onutCheckNamedFramebufferStatus)(GLuint framebuffer, GLenum target);
    void (ONUT_STD_CALL *onutClampColor)(GLenum target, GLenum clamp);
    void (ONUT_STD_CALL *onutClear)(GLbitfield mask);
    void (ONUT_STD_CALL *onutClearBufferData)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
    void (ONUT_STD_CALL *onutClearBufferSubData)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
    void (ONUT_STD_CALL *onutClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
    void (ONUT_STD_CALL *onutClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
    void (ONUT_STD_CALL *onutClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
    void (ONUT_STD_CALL *onutClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
    void (ONUT_STD_CALL *onutClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
    void (ONUT_STD_CALL *onutClearDepth)(GLdouble depth);
    void (ONUT_STD_CALL *onutClearDepthf)(GLfloat d);
    void (ONUT_STD_CALL *onutClearNamedBufferData)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
    void (ONUT_STD_CALL *onutClearNamedBufferSubData)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
    void (ONUT_STD_CALL *onutClearNamedFramebufferfi)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
    void (ONUT_STD_CALL *onutClearNamedFramebufferfv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
    void (ONUT_STD_CALL *onutClearNamedFramebufferiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
    void (ONUT_STD_CALL *onutClearNamedFramebufferuiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
    void (ONUT_STD_CALL *onutClearStencil)(GLint s);
    void (ONUT_STD_CALL *onutClearTexImage)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
    void (ONUT_STD_CALL *onutClearTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
    void (ONUT_STD_CALL *onutClientActiveTexture)(GLenum texture);
    GLenum (ONUT_STD_CALL *onutClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
    void (ONUT_STD_CALL *onutClipControl)(GLenum origin, GLenum depth);
    void (ONUT_STD_CALL *onutColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
    void (ONUT_STD_CALL *onutColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
    void (ONUT_STD_CALL *onutColorP3ui)(GLenum type, GLuint color);
    void (ONUT_STD_CALL *onutColorP3uiv)(GLenum type, const GLuint *color);
    void (ONUT_STD_CALL *onutColorP4ui)(GLenum type, GLuint color);
    void (ONUT_STD_CALL *onutColorP4uiv)(GLenum type, const GLuint *color);
    void (ONUT_STD_CALL *onutCompileShader)(GLuint shader);
    void (ONUT_STD_CALL *onutCompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutCopyImageSubData)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
    void (ONUT_STD_CALL *onutCopyNamedBufferSubData)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutCopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
    void (ONUT_STD_CALL *onutCopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
    void (ONUT_STD_CALL *onutCopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    void (ONUT_STD_CALL *onutCopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCopyTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    void (ONUT_STD_CALL *onutCopyTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCopyTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCreateBuffers)(GLsizei n, GLuint *buffers);
    void (ONUT_STD_CALL *onutCreateFramebuffers)(GLsizei n, GLuint *framebuffers);
    GLuint (ONUT_STD_CALL *onutCreateProgram)(void);
    void (ONUT_STD_CALL *onutCreateProgramPipelines)(GLsizei n, GLuint *pipelines);
    void (ONUT_STD_CALL *onutCreateQueries)(GLenum target, GLsizei n, GLuint *ids);
    void (ONUT_STD_CALL *onutCreateRenderbuffers)(GLsizei n, GLuint *renderbuffers);
    void (ONUT_STD_CALL *onutCreateSamplers)(GLsizei n, GLuint *samplers);
    GLuint (ONUT_STD_CALL *onutCreateShader)(GLenum type);
    GLuint (ONUT_STD_CALL *onutCreateShaderProgramv)(GLenum type, GLsizei count, const GLchar *const *strings);
    void (ONUT_STD_CALL *onutCreateTextures)(GLenum target, GLsizei n, GLuint *textures);
    void (ONUT_STD_CALL *onutCreateTransformFeedbacks)(GLsizei n, GLuint *ids);
    void (ONUT_STD_CALL *onutCreateVertexArrays)(GLsizei n, GLuint *arrays);
    void (ONUT_STD_CALL *onutCullFace)(GLenum mode);
    void (ONUT_STD_CALL *onutDebugMessageCallback)(GLDEBUGPROC callback, const void *userParam);
    void (ONUT_STD_CALL *onutDebugMessageControl)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
    void (ONUT_STD_CALL *onutDebugMessageInsert)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
    void (ONUT_STD_CALL *onutDeleteBuffers)(GLsizei n, const GLuint *buffers);
    void (ONUT_STD_CALL *onutDeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
    void (ONUT_STD_CALL *onutDeleteProgram)(GLuint program);
    void (ONUT_STD_CALL *onutDeleteProgramPipelines)(GLsizei n, const GLuint *pipelines);
    void (ONUT_STD_CALL *onutDeleteQueries)(GLsizei n, const GLuint *ids);
    void (ONUT_STD_CALL *onutDeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
    void (ONUT_STD_CALL *onutDeleteSamplers)(GLsizei count, const GLuint *samplers);
    void (ONUT_STD_CALL *onutDeleteShader)(GLuint shader);
    void (ONUT_STD_CALL *onutDeleteSync)(GLsync sync);
    void (ONUT_STD_CALL *onutDeleteTextures)(GLsizei n, const GLuint *textures);
    void (ONUT_STD_CALL *onutDeleteTransformFeedbacks)(GLsizei n, const GLuint *ids);
    void (ONUT_STD_CALL *onutDeleteVertexArrays)(GLsizei n, const GLuint *arrays);
    void (ONUT_STD_CALL *onutDepthFunc)(GLenum func);
    void (ONUT_STD_CALL *onutDepthMask)(GLboolean flag);
    void (ONUT_STD_CALL *onutDepthRange)(GLdouble zNear, GLdouble zFar);
    void (ONUT_STD_CALL *onutDepthRangeArrayv)(GLuint first, GLsizei count, const GLdouble *v);
    void (ONUT_STD_CALL *onutDepthRangeIndexed)(GLuint index, GLdouble n, GLdouble f);
    void (ONUT_STD_CALL *onutDepthRangef)(GLfloat n, GLfloat f);
    void (ONUT_STD_CALL *onutDetachShader)(GLuint program, GLuint shader);
    void (ONUT_STD_CALL *onutDisable)(GLenum cap);
    void (ONUT_STD_CALL *onutDisableVertexArrayAttrib)(GLuint vaobj, GLuint index);
    void (ONUT_STD_CALL *onutDisableVertexAttribArray)(GLuint index);
    void (ONUT_STD_CALL *onutDisablei)(GLenum target, GLuint index);
    void (ONUT_STD_CALL *onutDispatchCompute)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
    void (ONUT_STD_CALL *onutDispatchComputeIndirect)(GLintptr indirect);
    void (ONUT_STD_CALL *onutDrawArrays)(GLenum mode, GLint first, GLsizei count);
    void (ONUT_STD_CALL *onutDrawArraysIndirect)(GLenum mode, const void *indirect);
    void (ONUT_STD_CALL *onutDrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
    void (ONUT_STD_CALL *onutDrawArraysInstancedBaseInstance)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
    void (ONUT_STD_CALL *onutDrawBuffer)(GLenum buf);
    void (ONUT_STD_CALL *onutDrawBuffers)(GLsizei n, const GLenum *bufs);
    void (ONUT_STD_CALL *onutDrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices);
    void (ONUT_STD_CALL *onutDrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
    void (ONUT_STD_CALL *onutDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect);
    void (ONUT_STD_CALL *onutDrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
    void (ONUT_STD_CALL *onutDrawElementsInstancedBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
    void (ONUT_STD_CALL *onutDrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
    void (ONUT_STD_CALL *onutDrawElementsInstancedBaseVertexBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
    void (ONUT_STD_CALL *onutDrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
    void (ONUT_STD_CALL *onutDrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
    void (ONUT_STD_CALL *onutDrawTransformFeedback)(GLenum mode, GLuint id);
    void (ONUT_STD_CALL *onutDrawTransformFeedbackInstanced)(GLenum mode, GLuint id, GLsizei instancecount);
    void (ONUT_STD_CALL *onutDrawTransformFeedbackStream)(GLenum mode, GLuint id, GLuint stream);
    void (ONUT_STD_CALL *onutDrawTransformFeedbackStreamInstanced)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
    void (ONUT_STD_CALL *onutEnable)(GLenum cap);
    void (ONUT_STD_CALL *onutEnableVertexArrayAttrib)(GLuint vaobj, GLuint index);
    void (ONUT_STD_CALL *onutEnableVertexAttribArray)(GLuint index);
    void (ONUT_STD_CALL *onutEnablei)(GLenum target, GLuint index);
    void (ONUT_STD_CALL *onutEndConditionalRender)(void);
    void (ONUT_STD_CALL *onutEndQuery)(GLenum target);
    void (ONUT_STD_CALL *onutEndQueryIndexed)(GLenum target, GLuint index);
    void (ONUT_STD_CALL *onutEndTransformFeedback)(void);
    GLsync (ONUT_STD_CALL *onutFenceSync)(GLenum condition, GLbitfield flags);
    void (ONUT_STD_CALL *onutFinish)(void);
    void (ONUT_STD_CALL *onutFlush)(void);
    void (ONUT_STD_CALL *onutFlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
    void (ONUT_STD_CALL *onutFlushMappedNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length);
    void (ONUT_STD_CALL *onutFogCoordPointer)(GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutFogCoordd)(GLdouble coord);
    void (ONUT_STD_CALL *onutFogCoorddv)(const GLdouble *coord);
    void (ONUT_STD_CALL *onutFogCoordf)(GLfloat coord);
    void (ONUT_STD_CALL *onutFogCoordfv)(const GLfloat *coord);
    void (ONUT_STD_CALL *onutFramebufferParameteri)(GLenum target, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutFramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    void (ONUT_STD_CALL *onutFramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutFramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutFramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutFramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
    void (ONUT_STD_CALL *onutFramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
    void (ONUT_STD_CALL *onutFrontFace)(GLenum mode);
    void (ONUT_STD_CALL *onutGenBuffers)(GLsizei n, GLuint *buffers);
    void (ONUT_STD_CALL *onutGenFramebuffers)(GLsizei n, GLuint *framebuffers);
    void (ONUT_STD_CALL *onutGenProgramPipelines)(GLsizei n, GLuint *pipelines);
    void (ONUT_STD_CALL *onutGenQueries)(GLsizei n, GLuint *ids);
    void (ONUT_STD_CALL *onutGenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
    void (ONUT_STD_CALL *onutGenSamplers)(GLsizei count, GLuint *samplers);
    void (ONUT_STD_CALL *onutGenTextures)(GLsizei n, GLuint *textures);
    void (ONUT_STD_CALL *onutGenTransformFeedbacks)(GLsizei n, GLuint *ids);
    void (ONUT_STD_CALL *onutGenVertexArrays)(GLsizei n, GLuint *arrays);
    void (ONUT_STD_CALL *onutGenerateMipmap)(GLenum target);
    void (ONUT_STD_CALL *onutGenerateTextureMipmap)(GLuint texture);
    void (ONUT_STD_CALL *onutGetActiveAtomicCounterBufferiv)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
    void (ONUT_STD_CALL *onutGetActiveSubroutineName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
    void (ONUT_STD_CALL *onutGetActiveSubroutineUniformName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
    void (ONUT_STD_CALL *onutGetActiveSubroutineUniformiv)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
    void (ONUT_STD_CALL *onutGetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
    void (ONUT_STD_CALL *onutGetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
    void (ONUT_STD_CALL *onutGetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
    void (ONUT_STD_CALL *onutGetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
    GLint (ONUT_STD_CALL *onutGetAttribLocation)(GLuint program, const GLchar *name);
    void (ONUT_STD_CALL *onutGetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
    void (ONUT_STD_CALL *onutGetBooleanv)(GLenum pname, GLboolean *data);
    void (ONUT_STD_CALL *onutGetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
    void (ONUT_STD_CALL *onutGetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetBufferPointerv)(GLenum target, GLenum pname, void **params);
    void (ONUT_STD_CALL *onutGetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
    void (ONUT_STD_CALL *onutGetCompressedTexImage)(GLenum target, GLint level, void *img);
    void (ONUT_STD_CALL *onutGetCompressedTextureImage)(GLuint texture, GLint level, GLsizei bufSize, void *pixels);
    void (ONUT_STD_CALL *onutGetCompressedTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
    GLuint (ONUT_STD_CALL *onutGetDebugMessageLog)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
    void (ONUT_STD_CALL *onutGetDoublei_v)(GLenum target, GLuint index, GLdouble *data);
    void (ONUT_STD_CALL *onutGetDoublev)(GLenum pname, GLdouble *data);
    GLenum (ONUT_STD_CALL *onutGetError)(void);
    void (ONUT_STD_CALL *onutGetFloati_v)(GLenum target, GLuint index, GLfloat *data);
    void (ONUT_STD_CALL *onutGetFloatv)(GLenum pname, GLfloat *data);
    GLint (ONUT_STD_CALL *onutGetFragDataIndex)(GLuint program, const GLchar *name);
    GLint (ONUT_STD_CALL *onutGetFragDataLocation)(GLuint program, const GLchar *name);
    void (ONUT_STD_CALL *onutGetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetFramebufferParameteriv)(GLenum target, GLenum pname, GLint *params);
    GLenum (ONUT_STD_CALL *onutGetGraphicsResetStatus)(void);
    void (ONUT_STD_CALL *onutGetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
    void (ONUT_STD_CALL *onutGetInteger64v)(GLenum pname, GLint64 *data);
    void (ONUT_STD_CALL *onutGetIntegeri_v)(GLenum target, GLuint index, GLint *data);
    void (ONUT_STD_CALL *onutGetIntegerv)(GLenum pname, GLint *data);
    void (ONUT_STD_CALL *onutGetInternalformati64v)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
    void (ONUT_STD_CALL *onutGetInternalformativ)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
    void (ONUT_STD_CALL *onutGetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
    void (ONUT_STD_CALL *onutGetNamedBufferParameteri64v)(GLuint buffer, GLenum pname, GLint64 *params);
    void (ONUT_STD_CALL *onutGetNamedBufferParameteriv)(GLuint buffer, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetNamedBufferPointerv)(GLuint buffer, GLenum pname, void **params);
    void (ONUT_STD_CALL *onutGetNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
    void (ONUT_STD_CALL *onutGetNamedFramebufferAttachmentParameteriv)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetNamedFramebufferParameteriv)(GLuint framebuffer, GLenum pname, GLint *param);
    void (ONUT_STD_CALL *onutGetNamedRenderbufferParameteriv)(GLuint renderbuffer, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetObjectLabel)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
    void (ONUT_STD_CALL *onutGetObjectPtrLabel)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
    void (ONUT_STD_CALL *onutGetPointerv)(GLenum pname, void **params);
    void (ONUT_STD_CALL *onutGetProgramBinary)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
    void (ONUT_STD_CALL *onutGetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
    void (ONUT_STD_CALL *onutGetProgramInterfaceiv)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetProgramPipelineInfoLog)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
    void (ONUT_STD_CALL *onutGetProgramPipelineiv)(GLuint pipeline, GLenum pname, GLint *params);
    GLuint (ONUT_STD_CALL *onutGetProgramResourceIndex)(GLuint program, GLenum programInterface, const GLchar *name);
    GLint (ONUT_STD_CALL *onutGetProgramResourceLocation)(GLuint program, GLenum programInterface, const GLchar *name);
    GLint (ONUT_STD_CALL *onutGetProgramResourceLocationIndex)(GLuint program, GLenum programInterface, const GLchar *name);
    void (ONUT_STD_CALL *onutGetProgramResourceName)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
    void (ONUT_STD_CALL *onutGetProgramResourceiv)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
    void (ONUT_STD_CALL *onutGetProgramStageiv)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
    void (ONUT_STD_CALL *onutGetProgramiv)(GLuint program, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetQueryBufferObjecti64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    void (ONUT_STD_CALL *onutGetQueryBufferObjectiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    void (ONUT_STD_CALL *onutGetQueryBufferObjectui64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    void (ONUT_STD_CALL *onutGetQueryBufferObjectuiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    void (ONUT_STD_CALL *onutGetQueryIndexediv)(GLenum target, GLuint index, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
    void (ONUT_STD_CALL *onutGetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
    void (ONUT_STD_CALL *onutGetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetQueryiv)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
    void (ONUT_STD_CALL *onutGetShaderPrecisionFormat)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
    void (ONUT_STD_CALL *onutGetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
    void (ONUT_STD_CALL *onutGetShaderiv)(GLuint shader, GLenum pname, GLint *params);
    const GLubyte *(ONUT_STD_CALL *onutGetString)(GLenum name);
    const GLubyte *(ONUT_STD_CALL *onutGetStringi)(GLenum name, GLuint index);
    GLuint (ONUT_STD_CALL *onutGetSubroutineIndex)(GLuint program, GLenum shadertype, const GLchar *name);
    GLint (ONUT_STD_CALL *onutGetSubroutineUniformLocation)(GLuint program, GLenum shadertype, const GLchar *name);
    void (ONUT_STD_CALL *onutGetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
    void (ONUT_STD_CALL *onutGetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
    void (ONUT_STD_CALL *onutGetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetTextureImage)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
    void (ONUT_STD_CALL *onutGetTextureLevelParameterfv)(GLuint texture, GLint level, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetTextureLevelParameteriv)(GLuint texture, GLint level, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetTextureParameterIiv)(GLuint texture, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetTextureParameterIuiv)(GLuint texture, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetTextureParameterfv)(GLuint texture, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetTextureParameteriv)(GLuint texture, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
    void (ONUT_STD_CALL *onutGetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
    void (ONUT_STD_CALL *onutGetTransformFeedbacki64_v)(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
    void (ONUT_STD_CALL *onutGetTransformFeedbacki_v)(GLuint xfb, GLenum pname, GLuint index, GLint *param);
    void (ONUT_STD_CALL *onutGetTransformFeedbackiv)(GLuint xfb, GLenum pname, GLint *param);
    GLuint (ONUT_STD_CALL *onutGetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
    void (ONUT_STD_CALL *onutGetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const *uniformNames, GLuint *uniformIndices);
    GLint (ONUT_STD_CALL *onutGetUniformLocation)(GLuint program, const GLchar *name);
    void (ONUT_STD_CALL *onutGetUniformSubroutineuiv)(GLenum shadertype, GLint location, GLuint *params);
    void (ONUT_STD_CALL *onutGetUniformdv)(GLuint program, GLint location, GLdouble *params);
    void (ONUT_STD_CALL *onutGetUniformfv)(GLuint program, GLint location, GLfloat *params);
    void (ONUT_STD_CALL *onutGetUniformiv)(GLuint program, GLint location, GLint *params);
    void (ONUT_STD_CALL *onutGetUniformuiv)(GLuint program, GLint location, GLuint *params);
    void (ONUT_STD_CALL *onutGetVertexArrayIndexed64iv)(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
    void (ONUT_STD_CALL *onutGetVertexArrayIndexediv)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
    void (ONUT_STD_CALL *onutGetVertexArrayiv)(GLuint vaobj, GLenum pname, GLint *param);
    void (ONUT_STD_CALL *onutGetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetVertexAttribLdv)(GLuint index, GLenum pname, GLdouble *params);
    void (ONUT_STD_CALL *onutGetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
    void (ONUT_STD_CALL *onutGetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
    void (ONUT_STD_CALL *onutGetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetnColorTable)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
    void (ONUT_STD_CALL *onutGetnCompressedTexImage)(GLenum target, GLint lod, GLsizei bufSize, void *pixels);
    void (ONUT_STD_CALL *onutGetnConvolutionFilter)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
    void (ONUT_STD_CALL *onutGetnHistogram)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
    void (ONUT_STD_CALL *onutGetnMapdv)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
    void (ONUT_STD_CALL *onutGetnMapfv)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
    void (ONUT_STD_CALL *onutGetnMapiv)(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
    void (ONUT_STD_CALL *onutGetnMinmax)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
    void (ONUT_STD_CALL *onutGetnPixelMapfv)(GLenum map, GLsizei bufSize, GLfloat *values);
    void (ONUT_STD_CALL *onutGetnPixelMapuiv)(GLenum map, GLsizei bufSize, GLuint *values);
    void (ONUT_STD_CALL *onutGetnPixelMapusv)(GLenum map, GLsizei bufSize, GLushort *values);
    void (ONUT_STD_CALL *onutGetnPolygonStipple)(GLsizei bufSize, GLubyte *pattern);
    void (ONUT_STD_CALL *onutGetnSeparableFilter)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
    void (ONUT_STD_CALL *onutGetnTexImage)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
    void (ONUT_STD_CALL *onutGetnUniformdv)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
    void (ONUT_STD_CALL *onutGetnUniformfv)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
    void (ONUT_STD_CALL *onutGetnUniformiv)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
    void (ONUT_STD_CALL *onutGetnUniformuiv)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
    void (ONUT_STD_CALL *onutHint)(GLenum target, GLenum mode);
    void (ONUT_STD_CALL *onutInvalidateBufferData)(GLuint buffer);
    void (ONUT_STD_CALL *onutInvalidateBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr length);
    void (ONUT_STD_CALL *onutInvalidateFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments);
    void (ONUT_STD_CALL *onutInvalidateNamedFramebufferData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
    void (ONUT_STD_CALL *onutInvalidateNamedFramebufferSubData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutInvalidateSubFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutInvalidateTexImage)(GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutInvalidateTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
    GLboolean (ONUT_STD_CALL *onutIsBuffer)(GLuint buffer);
    GLboolean (ONUT_STD_CALL *onutIsEnabled)(GLenum cap);
    GLboolean (ONUT_STD_CALL *onutIsEnabledi)(GLenum target, GLuint index);
    GLboolean (ONUT_STD_CALL *onutIsFramebuffer)(GLuint framebuffer);
    GLboolean (ONUT_STD_CALL *onutIsProgram)(GLuint program);
    GLboolean (ONUT_STD_CALL *onutIsProgramPipeline)(GLuint pipeline);
    GLboolean (ONUT_STD_CALL *onutIsQuery)(GLuint id);
    GLboolean (ONUT_STD_CALL *onutIsRenderbuffer)(GLuint renderbuffer);
    GLboolean (ONUT_STD_CALL *onutIsSampler)(GLuint sampler);
    GLboolean (ONUT_STD_CALL *onutIsShader)(GLuint shader);
    GLboolean (ONUT_STD_CALL *onutIsSync)(GLsync sync);
    GLboolean (ONUT_STD_CALL *onutIsTexture)(GLuint texture);
    GLboolean (ONUT_STD_CALL *onutIsTransformFeedback)(GLuint id);
    GLboolean (ONUT_STD_CALL *onutIsVertexArray)(GLuint array);
    void (ONUT_STD_CALL *onutLineWidth)(GLfloat width);
    void (ONUT_STD_CALL *onutLinkProgram)(GLuint program);
    void (ONUT_STD_CALL *onutLoadTransposeMatrixd)(const GLdouble *m);
    void (ONUT_STD_CALL *onutLoadTransposeMatrixf)(const GLfloat *m);
    void (ONUT_STD_CALL *onutLogicOp)(GLenum opcode);
    void *(ONUT_STD_CALL *onutMapBuffer)(GLenum target, GLenum access);
    void *(ONUT_STD_CALL *onutMapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
    void *(ONUT_STD_CALL *onutMapNamedBuffer)(GLuint buffer, GLenum access);
    void *(ONUT_STD_CALL *onutMapNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
    void (ONUT_STD_CALL *onutMemoryBarrier)(GLbitfield barriers);
    void (ONUT_STD_CALL *onutMemoryBarrierByRegion)(GLbitfield barriers);
    void (ONUT_STD_CALL *onutMinSampleShading)(GLfloat value);
    void (ONUT_STD_CALL *onutMultTransposeMatrixd)(const GLdouble *m);
    void (ONUT_STD_CALL *onutMultTransposeMatrixf)(const GLfloat *m);
    void (ONUT_STD_CALL *onutMultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
    void (ONUT_STD_CALL *onutMultiDrawArraysIndirect)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
    void (ONUT_STD_CALL *onutMultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei drawcount);
    void (ONUT_STD_CALL *onutMultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei drawcount, const GLint *basevertex);
    void (ONUT_STD_CALL *onutMultiDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
    void (ONUT_STD_CALL *onutMultiTexCoord1d)(GLenum target, GLdouble s);
    void (ONUT_STD_CALL *onutMultiTexCoord1dv)(GLenum target, const GLdouble *v);
    void (ONUT_STD_CALL *onutMultiTexCoord1f)(GLenum target, GLfloat s);
    void (ONUT_STD_CALL *onutMultiTexCoord1fv)(GLenum target, const GLfloat *v);
    void (ONUT_STD_CALL *onutMultiTexCoord1i)(GLenum target, GLint s);
    void (ONUT_STD_CALL *onutMultiTexCoord1iv)(GLenum target, const GLint *v);
    void (ONUT_STD_CALL *onutMultiTexCoord1s)(GLenum target, GLshort s);
    void (ONUT_STD_CALL *onutMultiTexCoord1sv)(GLenum target, const GLshort *v);
    void (ONUT_STD_CALL *onutMultiTexCoord2d)(GLenum target, GLdouble s, GLdouble t);
    void (ONUT_STD_CALL *onutMultiTexCoord2dv)(GLenum target, const GLdouble *v);
    void (ONUT_STD_CALL *onutMultiTexCoord2f)(GLenum target, GLfloat s, GLfloat t);
    void (ONUT_STD_CALL *onutMultiTexCoord2fv)(GLenum target, const GLfloat *v);
    void (ONUT_STD_CALL *onutMultiTexCoord2i)(GLenum target, GLint s, GLint t);
    void (ONUT_STD_CALL *onutMultiTexCoord2iv)(GLenum target, const GLint *v);
    void (ONUT_STD_CALL *onutMultiTexCoord2s)(GLenum target, GLshort s, GLshort t);
    void (ONUT_STD_CALL *onutMultiTexCoord2sv)(GLenum target, const GLshort *v);
    void (ONUT_STD_CALL *onutMultiTexCoord3d)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
    void (ONUT_STD_CALL *onutMultiTexCoord3dv)(GLenum target, const GLdouble *v);
    void (ONUT_STD_CALL *onutMultiTexCoord3f)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
    void (ONUT_STD_CALL *onutMultiTexCoord3fv)(GLenum target, const GLfloat *v);
    void (ONUT_STD_CALL *onutMultiTexCoord3i)(GLenum target, GLint s, GLint t, GLint r);
    void (ONUT_STD_CALL *onutMultiTexCoord3iv)(GLenum target, const GLint *v);
    void (ONUT_STD_CALL *onutMultiTexCoord3s)(GLenum target, GLshort s, GLshort t, GLshort r);
    void (ONUT_STD_CALL *onutMultiTexCoord3sv)(GLenum target, const GLshort *v);
    void (ONUT_STD_CALL *onutMultiTexCoord4d)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
    void (ONUT_STD_CALL *onutMultiTexCoord4dv)(GLenum target, const GLdouble *v);
    void (ONUT_STD_CALL *onutMultiTexCoord4f)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
    void (ONUT_STD_CALL *onutMultiTexCoord4fv)(GLenum target, const GLfloat *v);
    void (ONUT_STD_CALL *onutMultiTexCoord4i)(GLenum target, GLint s, GLint t, GLint r, GLint q);
    void (ONUT_STD_CALL *onutMultiTexCoord4iv)(GLenum target, const GLint *v);
    void (ONUT_STD_CALL *onutMultiTexCoord4s)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
    void (ONUT_STD_CALL *onutMultiTexCoord4sv)(GLenum target, const GLshort *v);
    void (ONUT_STD_CALL *onutMultiTexCoordP1ui)(GLenum texture, GLenum type, GLuint coords);
    void (ONUT_STD_CALL *onutMultiTexCoordP1uiv)(GLenum texture, GLenum type, const GLuint *coords);
    void (ONUT_STD_CALL *onutMultiTexCoordP2ui)(GLenum texture, GLenum type, GLuint coords);
    void (ONUT_STD_CALL *onutMultiTexCoordP2uiv)(GLenum texture, GLenum type, const GLuint *coords);
    void (ONUT_STD_CALL *onutMultiTexCoordP3ui)(GLenum texture, GLenum type, GLuint coords);
    void (ONUT_STD_CALL *onutMultiTexCoordP3uiv)(GLenum texture, GLenum type, const GLuint *coords);
    void (ONUT_STD_CALL *onutMultiTexCoordP4ui)(GLenum texture, GLenum type, GLuint coords);
    void (ONUT_STD_CALL *onutMultiTexCoordP4uiv)(GLenum texture, GLenum type, const GLuint *coords);
    void (ONUT_STD_CALL *onutNamedBufferData)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
    void (ONUT_STD_CALL *onutNamedBufferStorage)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
    void (ONUT_STD_CALL *onutNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
    void (ONUT_STD_CALL *onutNamedFramebufferDrawBuffer)(GLuint framebuffer, GLenum buf);
    void (ONUT_STD_CALL *onutNamedFramebufferDrawBuffers)(GLuint framebuffer, GLsizei n, const GLenum *bufs);
    void (ONUT_STD_CALL *onutNamedFramebufferParameteri)(GLuint framebuffer, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutNamedFramebufferReadBuffer)(GLuint framebuffer, GLenum src);
    void (ONUT_STD_CALL *onutNamedFramebufferRenderbuffer)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    void (ONUT_STD_CALL *onutNamedFramebufferTexture)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutNamedFramebufferTextureLayer)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
    void (ONUT_STD_CALL *onutNamedRenderbufferStorage)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutNamedRenderbufferStorageMultisample)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutNormalP3ui)(GLenum type, GLuint coords);
    void (ONUT_STD_CALL *onutNormalP3uiv)(GLenum type, const GLuint *coords);
    void (ONUT_STD_CALL *onutObjectLabel)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
    void (ONUT_STD_CALL *onutObjectPtrLabel)(const void *ptr, GLsizei length, const GLchar *label);
    void (ONUT_STD_CALL *onutPatchParameterfv)(GLenum pname, const GLfloat *values);
    void (ONUT_STD_CALL *onutPatchParameteri)(GLenum pname, GLint value);
    void (ONUT_STD_CALL *onutPauseTransformFeedback)(void);
    void (ONUT_STD_CALL *onutPixelStoref)(GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutPixelStorei)(GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutPointParameterf)(GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutPointParameterfv)(GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutPointParameteri)(GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutPointParameteriv)(GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutPointSize)(GLfloat size);
    void (ONUT_STD_CALL *onutPolygonMode)(GLenum face, GLenum mode);
    void (ONUT_STD_CALL *onutPolygonOffset)(GLfloat factor, GLfloat units);
    void (ONUT_STD_CALL *onutPopDebugGroup)(void);
    void (ONUT_STD_CALL *onutPrimitiveBoundingBox)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
    void (ONUT_STD_CALL *onutPrimitiveRestartIndex)(GLuint index);
    void (ONUT_STD_CALL *onutProgramBinary)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
    void (ONUT_STD_CALL *onutProgramParameteri)(GLuint program, GLenum pname, GLint value);
    void (ONUT_STD_CALL *onutProgramUniform1d)(GLuint program, GLint location, GLdouble v0);
    void (ONUT_STD_CALL *onutProgramUniform1dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniform1f)(GLuint program, GLint location, GLfloat v0);
    void (ONUT_STD_CALL *onutProgramUniform1fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniform1i)(GLuint program, GLint location, GLint v0);
    void (ONUT_STD_CALL *onutProgramUniform1iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutProgramUniform1ui)(GLuint program, GLint location, GLuint v0);
    void (ONUT_STD_CALL *onutProgramUniform1uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutProgramUniform2d)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
    void (ONUT_STD_CALL *onutProgramUniform2dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniform2f)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
    void (ONUT_STD_CALL *onutProgramUniform2fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniform2i)(GLuint program, GLint location, GLint v0, GLint v1);
    void (ONUT_STD_CALL *onutProgramUniform2iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutProgramUniform2ui)(GLuint program, GLint location, GLuint v0, GLuint v1);
    void (ONUT_STD_CALL *onutProgramUniform2uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutProgramUniform3d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
    void (ONUT_STD_CALL *onutProgramUniform3dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniform3f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    void (ONUT_STD_CALL *onutProgramUniform3fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniform3i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
    void (ONUT_STD_CALL *onutProgramUniform3iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutProgramUniform3ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
    void (ONUT_STD_CALL *onutProgramUniform3uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutProgramUniform4d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
    void (ONUT_STD_CALL *onutProgramUniform4dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniform4f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    void (ONUT_STD_CALL *onutProgramUniform4fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniform4i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    void (ONUT_STD_CALL *onutProgramUniform4iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutProgramUniform4ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    void (ONUT_STD_CALL *onutProgramUniform4uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix2x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix2x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix2x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix2x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix3x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix3x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix3x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix3x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix4x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix4x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix4x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix4x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProvokingVertex)(GLenum mode);
    void (ONUT_STD_CALL *onutPushDebugGroup)(GLenum source, GLuint id, GLsizei length, const GLchar *message);
    void (ONUT_STD_CALL *onutQueryCounter)(GLuint id, GLenum target);
    void (ONUT_STD_CALL *onutReadBuffer)(GLenum src);
    void (ONUT_STD_CALL *onutReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
    void (ONUT_STD_CALL *onutReadnPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
    void (ONUT_STD_CALL *onutReleaseShaderCompiler)(void);
    void (ONUT_STD_CALL *onutRenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutRenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutResumeTransformFeedback)(void);
    void (ONUT_STD_CALL *onutSampleCoverage)(GLfloat value, GLboolean invert);
    void (ONUT_STD_CALL *onutSampleMaski)(GLuint maskNumber, GLbitfield mask);
    void (ONUT_STD_CALL *onutSamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
    void (ONUT_STD_CALL *onutSamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
    void (ONUT_STD_CALL *onutSamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutSamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
    void (ONUT_STD_CALL *onutSamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutSamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
    void (ONUT_STD_CALL *onutScissor)(GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutScissorArrayv)(GLuint first, GLsizei count, const GLint *v);
    void (ONUT_STD_CALL *onutScissorIndexed)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutScissorIndexedv)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutSecondaryColor3b)(GLbyte red, GLbyte green, GLbyte blue);
    void (ONUT_STD_CALL *onutSecondaryColor3bv)(const GLbyte *v);
    void (ONUT_STD_CALL *onutSecondaryColor3d)(GLdouble red, GLdouble green, GLdouble blue);
    void (ONUT_STD_CALL *onutSecondaryColor3dv)(const GLdouble *v);
    void (ONUT_STD_CALL *onutSecondaryColor3f)(GLfloat red, GLfloat green, GLfloat blue);
    void (ONUT_STD_CALL *onutSecondaryColor3fv)(const GLfloat *v);
    void (ONUT_STD_CALL *onutSecondaryColor3i)(GLint red, GLint green, GLint blue);
    void (ONUT_STD_CALL *onutSecondaryColor3iv)(const GLint *v);
    void (ONUT_STD_CALL *onutSecondaryColor3s)(GLshort red, GLshort green, GLshort blue);
    void (ONUT_STD_CALL *onutSecondaryColor3sv)(const GLshort *v);
    void (ONUT_STD_CALL *onutSecondaryColor3ub)(GLubyte red, GLubyte green, GLubyte blue);
    void (ONUT_STD_CALL *onutSecondaryColor3ubv)(const GLubyte *v);
    void (ONUT_STD_CALL *onutSecondaryColor3ui)(GLuint red, GLuint green, GLuint blue);
    void (ONUT_STD_CALL *onutSecondaryColor3uiv)(const GLuint *v);
    void (ONUT_STD_CALL *onutSecondaryColor3us)(GLushort red, GLushort green, GLushort blue);
    void (ONUT_STD_CALL *onutSecondaryColor3usv)(const GLushort *v);
    void (ONUT_STD_CALL *onutSecondaryColorP3ui)(GLenum type, GLuint color);
    void (ONUT_STD_CALL *onutSecondaryColorP3uiv)(GLenum type, const GLuint *color);
    void (ONUT_STD_CALL *onutSecondaryColorPointer)(GLint size, GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutShaderBinary)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
    void (ONUT_STD_CALL *onutShaderSource)(GLuint shader, GLsizei count, const GLchar *const *string, const GLint *length);
    void (ONUT_STD_CALL *onutShaderStorageBlockBinding)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
    void (ONUT_STD_CALL *onutStencilFunc)(GLenum func, GLint ref, GLuint mask);
    void (ONUT_STD_CALL *onutStencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
    void (ONUT_STD_CALL *onutStencilMask)(GLuint mask);
    void (ONUT_STD_CALL *onutStencilMaskSeparate)(GLenum face, GLuint mask);
    void (ONUT_STD_CALL *onutStencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
    void (ONUT_STD_CALL *onutStencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
    void (ONUT_STD_CALL *onutTexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
    void (ONUT_STD_CALL *onutTexBufferRange)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutTexCoordP1ui)(GLenum type, GLuint coords);
    void (ONUT_STD_CALL *onutTexCoordP1uiv)(GLenum type, const GLuint *coords);
    void (ONUT_STD_CALL *onutTexCoordP2ui)(GLenum type, GLuint coords);
    void (ONUT_STD_CALL *onutTexCoordP2uiv)(GLenum type, const GLuint *coords);
    void (ONUT_STD_CALL *onutTexCoordP3ui)(GLenum type, GLuint coords);
    void (ONUT_STD_CALL *onutTexCoordP3uiv)(GLenum type, const GLuint *coords);
    void (ONUT_STD_CALL *onutTexCoordP4ui)(GLenum type, GLuint coords);
    void (ONUT_STD_CALL *onutTexCoordP4uiv)(GLenum type, const GLuint *coords);
    void (ONUT_STD_CALL *onutTexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    void (ONUT_STD_CALL *onutTexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    void (ONUT_STD_CALL *onutTexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutTexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
    void (ONUT_STD_CALL *onutTexParameterf)(GLenum target, GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutTexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutTexParameteri)(GLenum target, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutTexParameteriv)(GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutTexStorage1D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
    void (ONUT_STD_CALL *onutTexStorage2D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutTexStorage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    void (ONUT_STD_CALL *onutTexStorage3D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    void (ONUT_STD_CALL *onutTexStorage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    void (ONUT_STD_CALL *onutTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTextureBarrier)(void);
    void (ONUT_STD_CALL *onutTextureBuffer)(GLuint texture, GLenum internalformat, GLuint buffer);
    void (ONUT_STD_CALL *onutTextureBufferRange)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutTextureParameterIiv)(GLuint texture, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutTextureParameterIuiv)(GLuint texture, GLenum pname, const GLuint *params);
    void (ONUT_STD_CALL *onutTextureParameterf)(GLuint texture, GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutTextureParameterfv)(GLuint texture, GLenum pname, const GLfloat *param);
    void (ONUT_STD_CALL *onutTextureParameteri)(GLuint texture, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutTextureParameteriv)(GLuint texture, GLenum pname, const GLint *param);
    void (ONUT_STD_CALL *onutTextureStorage1D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
    void (ONUT_STD_CALL *onutTextureStorage2D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutTextureStorage2DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    void (ONUT_STD_CALL *onutTextureStorage3D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    void (ONUT_STD_CALL *onutTextureStorage3DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    void (ONUT_STD_CALL *onutTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTextureView)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
    void (ONUT_STD_CALL *onutTransformFeedbackBufferBase)(GLuint xfb, GLuint index, GLuint buffer);
    void (ONUT_STD_CALL *onutTransformFeedbackBufferRange)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutTransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const *varyings, GLenum bufferMode);
    void (ONUT_STD_CALL *onutUniform1d)(GLint location, GLdouble x);
    void (ONUT_STD_CALL *onutUniform1dv)(GLint location, GLsizei count, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniform1f)(GLint location, GLfloat v0);
    void (ONUT_STD_CALL *onutUniform1fv)(GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniform1i)(GLint location, GLint v0);
    void (ONUT_STD_CALL *onutUniform1iv)(GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutUniform1ui)(GLint location, GLuint v0);
    void (ONUT_STD_CALL *onutUniform1uiv)(GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutUniform2d)(GLint location, GLdouble x, GLdouble y);
    void (ONUT_STD_CALL *onutUniform2dv)(GLint location, GLsizei count, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniform2f)(GLint location, GLfloat v0, GLfloat v1);
    void (ONUT_STD_CALL *onutUniform2fv)(GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniform2i)(GLint location, GLint v0, GLint v1);
    void (ONUT_STD_CALL *onutUniform2iv)(GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutUniform2ui)(GLint location, GLuint v0, GLuint v1);
    void (ONUT_STD_CALL *onutUniform2uiv)(GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutUniform3d)(GLint location, GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutUniform3dv)(GLint location, GLsizei count, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    void (ONUT_STD_CALL *onutUniform3fv)(GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
    void (ONUT_STD_CALL *onutUniform3iv)(GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutUniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
    void (ONUT_STD_CALL *onutUniform3uiv)(GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutUniform4d)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutUniform4dv)(GLint location, GLsizei count, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    void (ONUT_STD_CALL *onutUniform4fv)(GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    void (ONUT_STD_CALL *onutUniform4iv)(GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutUniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    void (ONUT_STD_CALL *onutUniform4uiv)(GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutUniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
    void (ONUT_STD_CALL *onutUniformMatrix2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix2x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix2x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix3x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix3x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix4x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix4x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutUniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformSubroutinesuiv)(GLenum shadertype, GLsizei count, const GLuint *indices);
    GLboolean (ONUT_STD_CALL *onutUnmapBuffer)(GLenum target);
    GLboolean (ONUT_STD_CALL *onutUnmapNamedBuffer)(GLuint buffer);
    void (ONUT_STD_CALL *onutUseProgram)(GLuint program);
    void (ONUT_STD_CALL *onutUseProgramStages)(GLuint pipeline, GLbitfield stages, GLuint program);
    void (ONUT_STD_CALL *onutValidateProgram)(GLuint program);
    void (ONUT_STD_CALL *onutValidateProgramPipeline)(GLuint pipeline);
    void (ONUT_STD_CALL *onutVertexArrayAttribBinding)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
    void (ONUT_STD_CALL *onutVertexArrayAttribFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
    void (ONUT_STD_CALL *onutVertexArrayAttribIFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    void (ONUT_STD_CALL *onutVertexArrayAttribLFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    void (ONUT_STD_CALL *onutVertexArrayBindingDivisor)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
    void (ONUT_STD_CALL *onutVertexArrayElementBuffer)(GLuint vaobj, GLuint buffer);
    void (ONUT_STD_CALL *onutVertexArrayVertexBuffer)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
    void (ONUT_STD_CALL *onutVertexArrayVertexBuffers)(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
    void (ONUT_STD_CALL *onutVertexAttrib1d)(GLuint index, GLdouble x);
    void (ONUT_STD_CALL *onutVertexAttrib1dv)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttrib1f)(GLuint index, GLfloat x);
    void (ONUT_STD_CALL *onutVertexAttrib1fv)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttrib1s)(GLuint index, GLshort x);
    void (ONUT_STD_CALL *onutVertexAttrib1sv)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
    void (ONUT_STD_CALL *onutVertexAttrib2dv)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
    void (ONUT_STD_CALL *onutVertexAttrib2fv)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttrib2s)(GLuint index, GLshort x, GLshort y);
    void (ONUT_STD_CALL *onutVertexAttrib2sv)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutVertexAttrib3dv)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutVertexAttrib3fv)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
    void (ONUT_STD_CALL *onutVertexAttrib3sv)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib4Nbv)(GLuint index, const GLbyte *v);
    void (ONUT_STD_CALL *onutVertexAttrib4Niv)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutVertexAttrib4Nsv)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
    void (ONUT_STD_CALL *onutVertexAttrib4Nubv)(GLuint index, const GLubyte *v);
    void (ONUT_STD_CALL *onutVertexAttrib4Nuiv)(GLuint index, const GLuint *v);
    void (ONUT_STD_CALL *onutVertexAttrib4Nusv)(GLuint index, const GLushort *v);
    void (ONUT_STD_CALL *onutVertexAttrib4bv)(GLuint index, const GLbyte *v);
    void (ONUT_STD_CALL *onutVertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutVertexAttrib4dv)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (ONUT_STD_CALL *onutVertexAttrib4fv)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttrib4iv)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutVertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
    void (ONUT_STD_CALL *onutVertexAttrib4sv)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib4ubv)(GLuint index, const GLubyte *v);
    void (ONUT_STD_CALL *onutVertexAttrib4uiv)(GLuint index, const GLuint *v);
    void (ONUT_STD_CALL *onutVertexAttrib4usv)(GLuint index, const GLushort *v);
    void (ONUT_STD_CALL *onutVertexAttribBinding)(GLuint attribindex, GLuint bindingindex);
    void (ONUT_STD_CALL *onutVertexAttribDivisor)(GLuint index, GLuint divisor);
    void (ONUT_STD_CALL *onutVertexAttribFormat)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
    void (ONUT_STD_CALL *onutVertexAttribI1i)(GLuint index, GLint x);
    void (ONUT_STD_CALL *onutVertexAttribI1iv)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutVertexAttribI1ui)(GLuint index, GLuint x);
    void (ONUT_STD_CALL *onutVertexAttribI1uiv)(GLuint index, const GLuint *v);
    void (ONUT_STD_CALL *onutVertexAttribI2i)(GLuint index, GLint x, GLint y);
    void (ONUT_STD_CALL *onutVertexAttribI2iv)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutVertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
    void (ONUT_STD_CALL *onutVertexAttribI2uiv)(GLuint index, const GLuint *v);
    void (ONUT_STD_CALL *onutVertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
    void (ONUT_STD_CALL *onutVertexAttribI3iv)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutVertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
    void (ONUT_STD_CALL *onutVertexAttribI3uiv)(GLuint index, const GLuint *v);
    void (ONUT_STD_CALL *onutVertexAttribI4bv)(GLuint index, const GLbyte *v);
    void (ONUT_STD_CALL *onutVertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
    void (ONUT_STD_CALL *onutVertexAttribI4iv)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutVertexAttribI4sv)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttribI4ubv)(GLuint index, const GLubyte *v);
    void (ONUT_STD_CALL *onutVertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    void (ONUT_STD_CALL *onutVertexAttribI4uiv)(GLuint index, const GLuint *v);
    void (ONUT_STD_CALL *onutVertexAttribI4usv)(GLuint index, const GLushort *v);
    void (ONUT_STD_CALL *onutVertexAttribIFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    void (ONUT_STD_CALL *onutVertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutVertexAttribL1d)(GLuint index, GLdouble x);
    void (ONUT_STD_CALL *onutVertexAttribL1dv)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttribL2d)(GLuint index, GLdouble x, GLdouble y);
    void (ONUT_STD_CALL *onutVertexAttribL2dv)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttribL3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutVertexAttribL3dv)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttribL4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutVertexAttribL4dv)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttribLFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    void (ONUT_STD_CALL *onutVertexAttribLPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutVertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
    void (ONUT_STD_CALL *onutVertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
    void (ONUT_STD_CALL *onutVertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
    void (ONUT_STD_CALL *onutVertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
    void (ONUT_STD_CALL *onutVertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
    void (ONUT_STD_CALL *onutVertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
    void (ONUT_STD_CALL *onutVertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
    void (ONUT_STD_CALL *onutVertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
    void (ONUT_STD_CALL *onutVertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutVertexBindingDivisor)(GLuint bindingindex, GLuint divisor);
    void (ONUT_STD_CALL *onutVertexP2ui)(GLenum type, GLuint value);
    void (ONUT_STD_CALL *onutVertexP2uiv)(GLenum type, const GLuint *value);
    void (ONUT_STD_CALL *onutVertexP3ui)(GLenum type, GLuint value);
    void (ONUT_STD_CALL *onutVertexP3uiv)(GLenum type, const GLuint *value);
    void (ONUT_STD_CALL *onutVertexP4ui)(GLenum type, GLuint value);
    void (ONUT_STD_CALL *onutVertexP4uiv)(GLenum type, const GLuint *value);
    void (ONUT_STD_CALL *onutViewport)(GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutViewportArrayv)(GLuint first, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutViewportIndexedf)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
    void (ONUT_STD_CALL *onutViewportIndexedfv)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
    void (ONUT_STD_CALL *onutWindowPos2d)(GLdouble x, GLdouble y);
    void (ONUT_STD_CALL *onutWindowPos2dv)(const GLdouble *v);
    void (ONUT_STD_CALL *onutWindowPos2f)(GLfloat x, GLfloat y);
    void (ONUT_STD_CALL *onutWindowPos2fv)(const GLfloat *v);
    void (ONUT_STD_CALL *onutWindowPos2i)(GLint x, GLint y);
    void (ONUT_STD_CALL *onutWindowPos2iv)(const GLint *v);
    void (ONUT_STD_CALL *onutWindowPos2s)(GLshort x, GLshort y);
    void (ONUT_STD_CALL *onutWindowPos2sv)(const GLshort *v);
    void (ONUT_STD_CALL *onutWindowPos3d)(GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutWindowPos3dv)(const GLdouble *v);
    void (ONUT_STD_CALL *onutWindowPos3f)(GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutWindowPos3fv)(const GLfloat *v);
    void (ONUT_STD_CALL *onutWindowPos3i)(GLint x, GLint y, GLint z);
    void (ONUT_STD_CALL *onutWindowPos3iv)(const GLint *v);
    void (ONUT_STD_CALL *onutWindowPos3s)(GLshort x, GLshort y, GLshort z);
    void (ONUT_STD_CALL *onutWindowPos3sv)(const GLshort *v);

    /* GL extension function pointers */
    void (ONUT_STD_CALL *onutAccumxOES)(GLenum op, GLfixed value);
    GLboolean (ONUT_STD_CALL *onutAcquireKeyedMutexWin32EXT)(GLuint memory, GLuint64 key, GLuint timeout);
    void (ONUT_STD_CALL *onutActiveProgramEXT)(GLuint program);
    void (ONUT_STD_CALL *onutActiveShaderProgramEXT)(GLuint pipeline, GLuint program);
    void (ONUT_STD_CALL *onutActiveStencilFaceEXT)(GLenum face);
    void (ONUT_STD_CALL *onutActiveTextureARB)(GLenum texture);
    void (ONUT_STD_CALL *onutActiveVaryingNV)(GLuint program, const GLchar *name);
    void (ONUT_STD_CALL *onutAlphaFragmentOp1ATI)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
    void (ONUT_STD_CALL *onutAlphaFragmentOp2ATI)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
    void (ONUT_STD_CALL *onutAlphaFragmentOp3ATI)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
    void (ONUT_STD_CALL *onutAlphaFuncQCOM)(GLenum func, GLclampf ref);
    void (ONUT_STD_CALL *onutAlphaFuncxOES)(GLenum func, GLfixed ref);
    void (ONUT_STD_CALL *onutAlphaToCoverageDitherControlNV)(GLenum mode);
    void (ONUT_STD_CALL *onutApplyFramebufferAttachmentCMAAINTEL)(void);
    void (ONUT_STD_CALL *onutApplyTextureEXT)(GLenum mode);
    GLboolean (ONUT_STD_CALL *onutAreProgramsResidentNV)(GLsizei n, const GLuint *programs, GLboolean *residences);
    GLboolean (ONUT_STD_CALL *onutAreTexturesResidentEXT)(GLsizei n, const GLuint *textures, GLboolean *residences);
    void (ONUT_STD_CALL *onutArrayElementEXT)(GLint i);
    void (ONUT_STD_CALL *onutArrayObjectATI)(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
    void (ONUT_STD_CALL *onutAsyncMarkerSGIX)(GLuint marker);
    void (ONUT_STD_CALL *onutAttachObjectARB)(GLhandleARB containerObj, GLhandleARB obj);
    void (ONUT_STD_CALL *onutBeginConditionalRenderNV)(GLuint id, GLenum mode);
    void (ONUT_STD_CALL *onutBeginConditionalRenderNVX)(GLuint id);
    void (ONUT_STD_CALL *onutBeginFragmentShaderATI)(void);
    void (ONUT_STD_CALL *onutBeginOcclusionQueryNV)(GLuint id);
    void (ONUT_STD_CALL *onutBeginPerfMonitorAMD)(GLuint monitor);
    void (ONUT_STD_CALL *onutBeginPerfQueryINTEL)(GLuint queryHandle);
    void (ONUT_STD_CALL *onutBeginQueryARB)(GLenum target, GLuint id);
    void (ONUT_STD_CALL *onutBeginQueryEXT)(GLenum target, GLuint id);
    void (ONUT_STD_CALL *onutBeginTransformFeedbackEXT)(GLenum primitiveMode);
    void (ONUT_STD_CALL *onutBeginTransformFeedbackNV)(GLenum primitiveMode);
    void (ONUT_STD_CALL *onutBeginVertexShaderEXT)(void);
    void (ONUT_STD_CALL *onutBeginVideoCaptureNV)(GLuint video_capture_slot);
    void (ONUT_STD_CALL *onutBindAttribLocationARB)(GLhandleARB programObj, GLuint index, const GLcharARB *name);
    void (ONUT_STD_CALL *onutBindBufferARB)(GLenum target, GLuint buffer);
    void (ONUT_STD_CALL *onutBindBufferBaseEXT)(GLenum target, GLuint index, GLuint buffer);
    void (ONUT_STD_CALL *onutBindBufferBaseNV)(GLenum target, GLuint index, GLuint buffer);
    void (ONUT_STD_CALL *onutBindBufferOffsetEXT)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
    void (ONUT_STD_CALL *onutBindBufferOffsetNV)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
    void (ONUT_STD_CALL *onutBindBufferRangeEXT)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutBindBufferRangeNV)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutBindFragDataLocationEXT)(GLuint program, GLuint color, const GLchar *name);
    void (ONUT_STD_CALL *onutBindFragDataLocationIndexedEXT)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
    void (ONUT_STD_CALL *onutBindFragmentShaderATI)(GLuint id);
    void (ONUT_STD_CALL *onutBindFramebufferEXT)(GLenum target, GLuint framebuffer);
    void (ONUT_STD_CALL *onutBindImageTextureEXT)(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
    GLuint (ONUT_STD_CALL *onutBindLightParameterEXT)(GLenum light, GLenum value);
    GLuint (ONUT_STD_CALL *onutBindMaterialParameterEXT)(GLenum face, GLenum value);
    void (ONUT_STD_CALL *onutBindMultiTextureEXT)(GLenum texunit, GLenum target, GLuint texture);
    GLuint (ONUT_STD_CALL *onutBindParameterEXT)(GLenum value);
    void (ONUT_STD_CALL *onutBindProgramARB)(GLenum target, GLuint program);
    void (ONUT_STD_CALL *onutBindProgramNV)(GLenum target, GLuint id);
    void (ONUT_STD_CALL *onutBindProgramPipelineEXT)(GLuint pipeline);
    void (ONUT_STD_CALL *onutBindRenderbufferEXT)(GLenum target, GLuint renderbuffer);
    GLuint (ONUT_STD_CALL *onutBindTexGenParameterEXT)(GLenum unit, GLenum coord, GLenum value);
    void (ONUT_STD_CALL *onutBindTextureEXT)(GLenum target, GLuint texture);
    GLuint (ONUT_STD_CALL *onutBindTextureUnitParameterEXT)(GLenum unit, GLenum value);
    void (ONUT_STD_CALL *onutBindTransformFeedbackNV)(GLenum target, GLuint id);
    void (ONUT_STD_CALL *onutBindVertexArrayAPPLE)(GLuint array);
    void (ONUT_STD_CALL *onutBindVertexArrayOES)(GLuint array);
    void (ONUT_STD_CALL *onutBindVertexShaderEXT)(GLuint id);
    void (ONUT_STD_CALL *onutBindVideoCaptureStreamBufferNV)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
    void (ONUT_STD_CALL *onutBindVideoCaptureStreamTextureNV)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
    void (ONUT_STD_CALL *onutBinormal3bEXT)(GLbyte bx, GLbyte by, GLbyte bz);
    void (ONUT_STD_CALL *onutBinormal3bvEXT)(const GLbyte *v);
    void (ONUT_STD_CALL *onutBinormal3dEXT)(GLdouble bx, GLdouble by, GLdouble bz);
    void (ONUT_STD_CALL *onutBinormal3dvEXT)(const GLdouble *v);
    void (ONUT_STD_CALL *onutBinormal3fEXT)(GLfloat bx, GLfloat by, GLfloat bz);
    void (ONUT_STD_CALL *onutBinormal3fvEXT)(const GLfloat *v);
    void (ONUT_STD_CALL *onutBinormal3iEXT)(GLint bx, GLint by, GLint bz);
    void (ONUT_STD_CALL *onutBinormal3ivEXT)(const GLint *v);
    void (ONUT_STD_CALL *onutBinormal3sEXT)(GLshort bx, GLshort by, GLshort bz);
    void (ONUT_STD_CALL *onutBinormal3svEXT)(const GLshort *v);
    void (ONUT_STD_CALL *onutBinormalPointerEXT)(GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutBitmapxOES)(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);
    void (ONUT_STD_CALL *onutBlendBarrierKHR)(void);
    void (ONUT_STD_CALL *onutBlendBarrierNV)(void);
    void (ONUT_STD_CALL *onutBlendColorEXT)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
    void (ONUT_STD_CALL *onutBlendColorxOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
    void (ONUT_STD_CALL *onutBlendEquationEXT)(GLenum mode);
    void (ONUT_STD_CALL *onutBlendEquationIndexedAMD)(GLuint buf, GLenum mode);
    void (ONUT_STD_CALL *onutBlendEquationSeparateEXT)(GLenum modeRGB, GLenum modeAlpha);
    void (ONUT_STD_CALL *onutBlendEquationSeparateIndexedAMD)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    void (ONUT_STD_CALL *onutBlendEquationSeparateiARB)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    void (ONUT_STD_CALL *onutBlendEquationSeparateiEXT)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    void (ONUT_STD_CALL *onutBlendEquationSeparateiOES)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    void (ONUT_STD_CALL *onutBlendEquationiARB)(GLuint buf, GLenum mode);
    void (ONUT_STD_CALL *onutBlendEquationiEXT)(GLuint buf, GLenum mode);
    void (ONUT_STD_CALL *onutBlendEquationiOES)(GLuint buf, GLenum mode);
    void (ONUT_STD_CALL *onutBlendFuncIndexedAMD)(GLuint buf, GLenum src, GLenum dst);
    void (ONUT_STD_CALL *onutBlendFuncSeparateEXT)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
    void (ONUT_STD_CALL *onutBlendFuncSeparateINGR)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
    void (ONUT_STD_CALL *onutBlendFuncSeparateIndexedAMD)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    void (ONUT_STD_CALL *onutBlendFuncSeparateiARB)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    void (ONUT_STD_CALL *onutBlendFuncSeparateiEXT)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    void (ONUT_STD_CALL *onutBlendFuncSeparateiOES)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    void (ONUT_STD_CALL *onutBlendFunciARB)(GLuint buf, GLenum src, GLenum dst);
    void (ONUT_STD_CALL *onutBlendFunciEXT)(GLuint buf, GLenum src, GLenum dst);
    void (ONUT_STD_CALL *onutBlendFunciOES)(GLuint buf, GLenum src, GLenum dst);
    void (ONUT_STD_CALL *onutBlendParameteriNV)(GLenum pname, GLint value);
    void (ONUT_STD_CALL *onutBlitFramebufferANGLE)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    void (ONUT_STD_CALL *onutBlitFramebufferEXT)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    void (ONUT_STD_CALL *onutBlitFramebufferNV)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    void (ONUT_STD_CALL *onutBufferAddressRangeNV)(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
    void (ONUT_STD_CALL *onutBufferDataARB)(GLenum target, GLsizeiptrARB size, const void *data, GLenum usage);
    void (ONUT_STD_CALL *onutBufferPageCommitmentARB)(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
    void (ONUT_STD_CALL *onutBufferParameteriAPPLE)(GLenum target, GLenum pname, GLint param);
    GLuint (ONUT_STD_CALL *onutBufferRegionEnabled)(void);
    void (ONUT_STD_CALL *onutBufferStorageEXT)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
    void (ONUT_STD_CALL *onutBufferStorageExternalEXT)(GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
    void (ONUT_STD_CALL *onutBufferStorageMemEXT)(GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset);
    void (ONUT_STD_CALL *onutBufferSubDataARB)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data);
    void (ONUT_STD_CALL *onutCallCommandListNV)(GLuint list);
    GLenum (ONUT_STD_CALL *onutCheckFramebufferStatusEXT)(GLenum target);
    GLenum (ONUT_STD_CALL *onutCheckNamedFramebufferStatusEXT)(GLuint framebuffer, GLenum target);
    void (ONUT_STD_CALL *onutClampColorARB)(GLenum target, GLenum clamp);
    void (ONUT_STD_CALL *onutClearAccumxOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
    void (ONUT_STD_CALL *onutClearColorIiEXT)(GLint red, GLint green, GLint blue, GLint alpha);
    void (ONUT_STD_CALL *onutClearColorIuiEXT)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
    void (ONUT_STD_CALL *onutClearColorxOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
    void (ONUT_STD_CALL *onutClearDepthdNV)(GLdouble depth);
    void (ONUT_STD_CALL *onutClearDepthfOES)(GLclampf depth);
    void (ONUT_STD_CALL *onutClearDepthxOES)(GLfixed depth);
    void (ONUT_STD_CALL *onutClearNamedBufferDataEXT)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
    void (ONUT_STD_CALL *onutClearNamedBufferSubDataEXT)(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
    void (ONUT_STD_CALL *onutClearPixelLocalStorageuiEXT)(GLsizei offset, GLsizei n, const GLuint *values);
    void (ONUT_STD_CALL *onutClearTexImageEXT)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
    void (ONUT_STD_CALL *onutClearTexSubImageEXT)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
    void (ONUT_STD_CALL *onutClientActiveTextureARB)(GLenum texture);
    void (ONUT_STD_CALL *onutClientActiveVertexStreamATI)(GLenum stream);
    void (ONUT_STD_CALL *onutClientAttribDefaultEXT)(GLbitfield mask);
    GLenum (ONUT_STD_CALL *onutClientWaitSyncAPPLE)(GLsync sync, GLbitfield flags, GLuint64 timeout);
    void (ONUT_STD_CALL *onutClipPlanefOES)(GLenum plane, const GLfloat *equation);
    void (ONUT_STD_CALL *onutClipPlanexOES)(GLenum plane, const GLfixed *equation);
    void (ONUT_STD_CALL *onutColor3fVertex3fSUN)(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutColor3fVertex3fvSUN)(const GLfloat *c, const GLfloat *v);
    void (ONUT_STD_CALL *onutColor3hNV)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
    void (ONUT_STD_CALL *onutColor3hvNV)(const GLhalfNV *v);
    void (ONUT_STD_CALL *onutColor3xOES)(GLfixed red, GLfixed green, GLfixed blue);
    void (ONUT_STD_CALL *onutColor3xvOES)(const GLfixed *components);
    void (ONUT_STD_CALL *onutColor4fNormal3fVertex3fSUN)(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutColor4fNormal3fVertex3fvSUN)(const GLfloat *c, const GLfloat *n, const GLfloat *v);
    void (ONUT_STD_CALL *onutColor4hNV)(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
    void (ONUT_STD_CALL *onutColor4hvNV)(const GLhalfNV *v);
    void (ONUT_STD_CALL *onutColor4ubVertex2fSUN)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
    void (ONUT_STD_CALL *onutColor4ubVertex2fvSUN)(const GLubyte *c, const GLfloat *v);
    void (ONUT_STD_CALL *onutColor4ubVertex3fSUN)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutColor4ubVertex3fvSUN)(const GLubyte *c, const GLfloat *v);
    void (ONUT_STD_CALL *onutColor4xOES)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
    void (ONUT_STD_CALL *onutColor4xvOES)(const GLfixed *components);
    void (ONUT_STD_CALL *onutColorFormatNV)(GLint size, GLenum type, GLsizei stride);
    void (ONUT_STD_CALL *onutColorFragmentOp1ATI)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
    void (ONUT_STD_CALL *onutColorFragmentOp2ATI)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
    void (ONUT_STD_CALL *onutColorFragmentOp3ATI)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
    void (ONUT_STD_CALL *onutColorMaskIndexedEXT)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
    void (ONUT_STD_CALL *onutColorMaskiEXT)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
    void (ONUT_STD_CALL *onutColorMaskiOES)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
    void (ONUT_STD_CALL *onutColorPointerEXT)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
    void (ONUT_STD_CALL *onutColorPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
    void (ONUT_STD_CALL *onutColorPointervINTEL)(GLint size, GLenum type, const void **pointer);
    void (ONUT_STD_CALL *onutColorSubTable)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
    void (ONUT_STD_CALL *onutColorSubTableEXT)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
    void (ONUT_STD_CALL *onutColorTable)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
    void (ONUT_STD_CALL *onutColorTableEXT)(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table);
    void (ONUT_STD_CALL *onutColorTableParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutColorTableParameterfvSGI)(GLenum target, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutColorTableParameteriv)(GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutColorTableParameterivSGI)(GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutColorTableSGI)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
    void (ONUT_STD_CALL *onutCombinerInputNV)(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
    void (ONUT_STD_CALL *onutCombinerOutputNV)(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
    void (ONUT_STD_CALL *onutCombinerParameterfNV)(GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutCombinerParameterfvNV)(GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutCombinerParameteriNV)(GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutCombinerParameterivNV)(GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutCombinerStageParameterfvNV)(GLenum stage, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutCommandListSegmentsNV)(GLuint list, GLuint segments);
    void (ONUT_STD_CALL *onutCompileCommandListNV)(GLuint list);
    void (ONUT_STD_CALL *onutCompileShaderARB)(GLhandleARB shaderObj);
    void (ONUT_STD_CALL *onutCompileShaderIncludeARB)(GLuint shader, GLsizei count, const GLchar *const *path, const GLint *length);
    void (ONUT_STD_CALL *onutCompressedMultiTexImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
    void (ONUT_STD_CALL *onutCompressedMultiTexImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
    void (ONUT_STD_CALL *onutCompressedMultiTexImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
    void (ONUT_STD_CALL *onutCompressedMultiTexSubImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
    void (ONUT_STD_CALL *onutCompressedMultiTexSubImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
    void (ONUT_STD_CALL *onutCompressedMultiTexSubImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
    void (ONUT_STD_CALL *onutCompressedTexImage1DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTexImage2DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTexImage3DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTexImage3DOES)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTexSubImage1DARB)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTexSubImage2DARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTexSubImage3DARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTexSubImage3DOES)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
    void (ONUT_STD_CALL *onutCompressedTextureImage1DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
    void (ONUT_STD_CALL *onutCompressedTextureImage2DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
    void (ONUT_STD_CALL *onutCompressedTextureImage3DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
    void (ONUT_STD_CALL *onutCompressedTextureSubImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
    void (ONUT_STD_CALL *onutCompressedTextureSubImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
    void (ONUT_STD_CALL *onutCompressedTextureSubImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
    void (ONUT_STD_CALL *onutConservativeRasterParameterfNV)(GLenum pname, GLfloat value);
    void (ONUT_STD_CALL *onutConservativeRasterParameteriNV)(GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutConvolutionFilter1D)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
    void (ONUT_STD_CALL *onutConvolutionFilter1DEXT)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
    void (ONUT_STD_CALL *onutConvolutionFilter2D)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
    void (ONUT_STD_CALL *onutConvolutionFilter2DEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
    void (ONUT_STD_CALL *onutConvolutionParameterf)(GLenum target, GLenum pname, GLfloat params);
    void (ONUT_STD_CALL *onutConvolutionParameterfEXT)(GLenum target, GLenum pname, GLfloat params);
    void (ONUT_STD_CALL *onutConvolutionParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutConvolutionParameterfvEXT)(GLenum target, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutConvolutionParameteri)(GLenum target, GLenum pname, GLint params);
    void (ONUT_STD_CALL *onutConvolutionParameteriEXT)(GLenum target, GLenum pname, GLint params);
    void (ONUT_STD_CALL *onutConvolutionParameteriv)(GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutConvolutionParameterivEXT)(GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutConvolutionParameterxOES)(GLenum target, GLenum pname, GLfixed param);
    void (ONUT_STD_CALL *onutConvolutionParameterxvOES)(GLenum target, GLenum pname, const GLfixed *params);
    void (ONUT_STD_CALL *onutCopyBufferSubDataNV)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutCopyColorSubTable)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
    void (ONUT_STD_CALL *onutCopyColorSubTableEXT)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
    void (ONUT_STD_CALL *onutCopyColorTable)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
    void (ONUT_STD_CALL *onutCopyColorTableSGI)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
    void (ONUT_STD_CALL *onutCopyConvolutionFilter1D)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
    void (ONUT_STD_CALL *onutCopyConvolutionFilter1DEXT)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
    void (ONUT_STD_CALL *onutCopyConvolutionFilter2D)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCopyConvolutionFilter2DEXT)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCopyImageSubDataEXT)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
    void (ONUT_STD_CALL *onutCopyImageSubDataNV)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
    void (ONUT_STD_CALL *onutCopyImageSubDataOES)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
    void (ONUT_STD_CALL *onutCopyMultiTexImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
    void (ONUT_STD_CALL *onutCopyMultiTexImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
    void (ONUT_STD_CALL *onutCopyMultiTexSubImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    void (ONUT_STD_CALL *onutCopyMultiTexSubImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCopyMultiTexSubImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCopyPathNV)(GLuint resultPath, GLuint srcPath);
    void (ONUT_STD_CALL *onutCopyTexImage1DEXT)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
    void (ONUT_STD_CALL *onutCopyTexImage2DEXT)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
    void (ONUT_STD_CALL *onutCopyTexSubImage1DEXT)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    void (ONUT_STD_CALL *onutCopyTexSubImage2DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCopyTexSubImage3DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCopyTexSubImage3DOES)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCopyTextureImage1DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
    void (ONUT_STD_CALL *onutCopyTextureImage2DEXT)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
    void (ONUT_STD_CALL *onutCopyTextureLevelsAPPLE)(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
    void (ONUT_STD_CALL *onutCopyTextureSubImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    void (ONUT_STD_CALL *onutCopyTextureSubImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCopyTextureSubImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutCoverFillPathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
    void (ONUT_STD_CALL *onutCoverFillPathNV)(GLuint path, GLenum coverMode);
    void (ONUT_STD_CALL *onutCoverStrokePathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
    void (ONUT_STD_CALL *onutCoverStrokePathNV)(GLuint path, GLenum coverMode);
    void (ONUT_STD_CALL *onutCoverageMaskNV)(GLboolean mask);
    void (ONUT_STD_CALL *onutCoverageModulationNV)(GLenum components);
    void (ONUT_STD_CALL *onutCoverageModulationTableNV)(GLsizei n, const GLfloat *v);
    void (ONUT_STD_CALL *onutCoverageOperationNV)(GLenum operation);
    void (ONUT_STD_CALL *onutCreateCommandListsNV)(GLsizei n, GLuint *lists);
    void (ONUT_STD_CALL *onutCreateMemoryObjectsEXT)(GLsizei n, GLuint *memoryObjects);
    void (ONUT_STD_CALL *onutCreatePerfQueryINTEL)(GLuint queryId, GLuint *queryHandle);
    GLhandleARB (ONUT_STD_CALL *onutCreateProgramObjectARB)(void);
    GLhandleARB (ONUT_STD_CALL *onutCreateShaderObjectARB)(GLenum shaderType);
    GLuint (ONUT_STD_CALL *onutCreateShaderProgramEXT)(GLenum type, const GLchar *string);
    GLuint (ONUT_STD_CALL *onutCreateShaderProgramvEXT)(GLenum type, GLsizei count, const GLchar **strings);
    void (ONUT_STD_CALL *onutCreateStatesNV)(GLsizei n, GLuint *states);
    GLsync (ONUT_STD_CALL *onutCreateSyncFromCLeventARB)(struct _cl_context *context, struct _cl_event *event, GLbitfield flags);
    void (ONUT_STD_CALL *onutCullParameterdvEXT)(GLenum pname, GLdouble *params);
    void (ONUT_STD_CALL *onutCullParameterfvEXT)(GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutCurrentPaletteMatrixARB)(GLint index);
    void (ONUT_STD_CALL *onutDebugMessageCallbackAMD)(GLDEBUGPROCAMD callback, void *userParam);
    void (ONUT_STD_CALL *onutDebugMessageCallbackARB)(GLDEBUGPROCARB callback, const void *userParam);
    void (ONUT_STD_CALL *onutDebugMessageCallbackKHR)(GLDEBUGPROCKHR callback, const void *userParam);
    void (ONUT_STD_CALL *onutDebugMessageControlARB)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
    void (ONUT_STD_CALL *onutDebugMessageControlKHR)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
    void (ONUT_STD_CALL *onutDebugMessageEnableAMD)(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
    void (ONUT_STD_CALL *onutDebugMessageInsertAMD)(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
    void (ONUT_STD_CALL *onutDebugMessageInsertARB)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
    void (ONUT_STD_CALL *onutDebugMessageInsertKHR)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
    void (ONUT_STD_CALL *onutDeformSGIX)(GLbitfield mask);
    void (ONUT_STD_CALL *onutDeformationMap3dSGIX)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);
    void (ONUT_STD_CALL *onutDeformationMap3fSGIX)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);
    void (ONUT_STD_CALL *onutDeleteAsyncMarkersSGIX)(GLuint marker, GLsizei range);
    void (ONUT_STD_CALL *onutDeleteBufferRegion)(GLenum region);
    void (ONUT_STD_CALL *onutDeleteBuffersARB)(GLsizei n, const GLuint *buffers);
    void (ONUT_STD_CALL *onutDeleteCommandListsNV)(GLsizei n, const GLuint *lists);
    void (ONUT_STD_CALL *onutDeleteFencesAPPLE)(GLsizei n, const GLuint *fences);
    void (ONUT_STD_CALL *onutDeleteFencesNV)(GLsizei n, const GLuint *fences);
    void (ONUT_STD_CALL *onutDeleteFragmentShaderATI)(GLuint id);
    void (ONUT_STD_CALL *onutDeleteFramebuffersEXT)(GLsizei n, const GLuint *framebuffers);
    void (ONUT_STD_CALL *onutDeleteMemoryObjectsEXT)(GLsizei n, const GLuint *memoryObjects);
    void (ONUT_STD_CALL *onutDeleteNamedStringARB)(GLint namelen, const GLchar *name);
    void (ONUT_STD_CALL *onutDeleteNamesAMD)(GLenum identifier, GLuint num, const GLuint *names);
    void (ONUT_STD_CALL *onutDeleteObjectARB)(GLhandleARB obj);
    void (ONUT_STD_CALL *onutDeleteOcclusionQueriesNV)(GLsizei n, const GLuint *ids);
    void (ONUT_STD_CALL *onutDeletePathsNV)(GLuint path, GLsizei range);
    void (ONUT_STD_CALL *onutDeletePerfMonitorsAMD)(GLsizei n, GLuint *monitors);
    void (ONUT_STD_CALL *onutDeletePerfQueryINTEL)(GLuint queryHandle);
    void (ONUT_STD_CALL *onutDeleteProgramPipelinesEXT)(GLsizei n, const GLuint *pipelines);
    void (ONUT_STD_CALL *onutDeleteProgramsARB)(GLsizei n, const GLuint *programs);
    void (ONUT_STD_CALL *onutDeleteProgramsNV)(GLsizei n, const GLuint *programs);
    void (ONUT_STD_CALL *onutDeleteQueriesARB)(GLsizei n, const GLuint *ids);
    void (ONUT_STD_CALL *onutDeleteQueriesEXT)(GLsizei n, const GLuint *ids);
    void (ONUT_STD_CALL *onutDeleteRenderbuffersEXT)(GLsizei n, const GLuint *renderbuffers);
    void (ONUT_STD_CALL *onutDeleteSemaphoresEXT)(GLsizei n, const GLuint *semaphores);
    void (ONUT_STD_CALL *onutDeleteStatesNV)(GLsizei n, const GLuint *states);
    void (ONUT_STD_CALL *onutDeleteSyncAPPLE)(GLsync sync);
    void (ONUT_STD_CALL *onutDeleteTexturesEXT)(GLsizei n, const GLuint *textures);
    void (ONUT_STD_CALL *onutDeleteTransformFeedbacksNV)(GLsizei n, const GLuint *ids);
    void (ONUT_STD_CALL *onutDeleteVertexArraysAPPLE)(GLsizei n, const GLuint *arrays);
    void (ONUT_STD_CALL *onutDeleteVertexArraysOES)(GLsizei n, const GLuint *arrays);
    void (ONUT_STD_CALL *onutDeleteVertexShaderEXT)(GLuint id);
    void (ONUT_STD_CALL *onutDepthBoundsEXT)(GLclampd zmin, GLclampd zmax);
    void (ONUT_STD_CALL *onutDepthBoundsdNV)(GLdouble zmin, GLdouble zmax);
    void (ONUT_STD_CALL *onutDepthRangeArrayfvNV)(GLuint first, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutDepthRangeArrayfvOES)(GLuint first, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutDepthRangeIndexedfNV)(GLuint index, GLfloat n, GLfloat f);
    void (ONUT_STD_CALL *onutDepthRangeIndexedfOES)(GLuint index, GLfloat n, GLfloat f);
    void (ONUT_STD_CALL *onutDepthRangedNV)(GLdouble zNear, GLdouble zFar);
    void (ONUT_STD_CALL *onutDepthRangefOES)(GLclampf n, GLclampf f);
    void (ONUT_STD_CALL *onutDepthRangexOES)(GLfixed n, GLfixed f);
    void (ONUT_STD_CALL *onutDetachObjectARB)(GLhandleARB containerObj, GLhandleARB attachedObj);
    void (ONUT_STD_CALL *onutDetailTexFuncSGIS)(GLenum target, GLsizei n, const GLfloat *points);
    void (ONUT_STD_CALL *onutDisableClientStateIndexedEXT)(GLenum array, GLuint index);
    void (ONUT_STD_CALL *onutDisableClientStateiEXT)(GLenum array, GLuint index);
    void (ONUT_STD_CALL *onutDisableDriverControlQCOM)(GLuint driverControl);
    void (ONUT_STD_CALL *onutDisableIndexedEXT)(GLenum target, GLuint index);
    void (ONUT_STD_CALL *onutDisableVariantClientStateEXT)(GLuint id);
    void (ONUT_STD_CALL *onutDisableVertexArrayAttribEXT)(GLuint vaobj, GLuint index);
    void (ONUT_STD_CALL *onutDisableVertexArrayEXT)(GLuint vaobj, GLenum array);
    void (ONUT_STD_CALL *onutDisableVertexAttribAPPLE)(GLuint index, GLenum pname);
    void (ONUT_STD_CALL *onutDisableVertexAttribArrayARB)(GLuint index);
    void (ONUT_STD_CALL *onutDisableiEXT)(GLenum target, GLuint index);
    void (ONUT_STD_CALL *onutDisableiNV)(GLenum target, GLuint index);
    void (ONUT_STD_CALL *onutDisableiOES)(GLenum target, GLuint index);
    void (ONUT_STD_CALL *onutDiscardFramebufferEXT)(GLenum target, GLsizei numAttachments, const GLenum *attachments);
    void (ONUT_STD_CALL *onutDispatchComputeGroupSizeARB)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
    void (ONUT_STD_CALL *onutDrawArraysEXT)(GLenum mode, GLint first, GLsizei count);
    void (ONUT_STD_CALL *onutDrawArraysInstancedANGLE)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
    void (ONUT_STD_CALL *onutDrawArraysInstancedARB)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
    void (ONUT_STD_CALL *onutDrawArraysInstancedBaseInstanceEXT)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
    void (ONUT_STD_CALL *onutDrawArraysInstancedEXT)(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
    void (ONUT_STD_CALL *onutDrawArraysInstancedNV)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
    void (ONUT_STD_CALL *onutDrawBufferRegion)(GLuint region, GLint x, GLint y, GLsizei width, GLsizei height, GLint xDest, GLint yDest);
    void (ONUT_STD_CALL *onutDrawBuffersARB)(GLsizei n, const GLenum *bufs);
    void (ONUT_STD_CALL *onutDrawBuffersATI)(GLsizei n, const GLenum *bufs);
    void (ONUT_STD_CALL *onutDrawBuffersEXT)(GLsizei n, const GLenum *bufs);
    void (ONUT_STD_CALL *onutDrawBuffersIndexedEXT)(GLint n, const GLenum *location, const GLint *indices);
    void (ONUT_STD_CALL *onutDrawBuffersNV)(GLsizei n, const GLenum *bufs);
    void (ONUT_STD_CALL *onutDrawCommandsAddressNV)(GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);
    void (ONUT_STD_CALL *onutDrawCommandsNV)(GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);
    void (ONUT_STD_CALL *onutDrawCommandsStatesAddressNV)(const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
    void (ONUT_STD_CALL *onutDrawCommandsStatesNV)(GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
    void (ONUT_STD_CALL *onutDrawElementArrayAPPLE)(GLenum mode, GLint first, GLsizei count);
    void (ONUT_STD_CALL *onutDrawElementArrayATI)(GLenum mode, GLsizei count);
    void (ONUT_STD_CALL *onutDrawElementsBaseVertexEXT)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
    void (ONUT_STD_CALL *onutDrawElementsBaseVertexOES)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
    void (ONUT_STD_CALL *onutDrawElementsInstancedANGLE)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
    void (ONUT_STD_CALL *onutDrawElementsInstancedARB)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
    void (ONUT_STD_CALL *onutDrawElementsInstancedBaseInstanceEXT)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
    void (ONUT_STD_CALL *onutDrawElementsInstancedBaseVertexBaseInstanceEXT)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
    void (ONUT_STD_CALL *onutDrawElementsInstancedBaseVertexEXT)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
    void (ONUT_STD_CALL *onutDrawElementsInstancedBaseVertexOES)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
    void (ONUT_STD_CALL *onutDrawElementsInstancedEXT)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
    void (ONUT_STD_CALL *onutDrawElementsInstancedNV)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
    void (ONUT_STD_CALL *onutDrawMeshArraysSUN)(GLenum mode, GLint first, GLsizei count, GLsizei width);
    void (ONUT_STD_CALL *onutDrawRangeElementArrayAPPLE)(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
    void (ONUT_STD_CALL *onutDrawRangeElementArrayATI)(GLenum mode, GLuint start, GLuint end, GLsizei count);
    void (ONUT_STD_CALL *onutDrawRangeElementsBaseVertexEXT)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
    void (ONUT_STD_CALL *onutDrawRangeElementsBaseVertexOES)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
    void (ONUT_STD_CALL *onutDrawRangeElementsEXT)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
    void (ONUT_STD_CALL *onutDrawTextureNV)(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
    void (ONUT_STD_CALL *onutDrawTransformFeedbackEXT)(GLenum mode, GLuint id);
    void (ONUT_STD_CALL *onutDrawTransformFeedbackInstancedEXT)(GLenum mode, GLuint id, GLsizei instancecount);
    void (ONUT_STD_CALL *onutDrawTransformFeedbackNV)(GLenum mode, GLuint id);
    void (ONUT_STD_CALL *onutDrawVkImageNV)(GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
    void (ONUT_STD_CALL *onutEGLImageTargetRenderbufferStorageOES)(GLenum target, GLeglImageOES image);
    void (ONUT_STD_CALL *onutEGLImageTargetTexture2DOES)(GLenum target, GLeglImageOES image);
    void (ONUT_STD_CALL *onutEdgeFlagFormatNV)(GLsizei stride);
    void (ONUT_STD_CALL *onutEdgeFlagPointerEXT)(GLsizei stride, GLsizei count, const GLboolean *pointer);
    void (ONUT_STD_CALL *onutEdgeFlagPointerListIBM)(GLint stride, const GLboolean **pointer, GLint ptrstride);
    void (ONUT_STD_CALL *onutElementPointerAPPLE)(GLenum type, const void *pointer);
    void (ONUT_STD_CALL *onutElementPointerATI)(GLenum type, const void *pointer);
    void (ONUT_STD_CALL *onutEnableClientStateIndexedEXT)(GLenum array, GLuint index);
    void (ONUT_STD_CALL *onutEnableClientStateiEXT)(GLenum array, GLuint index);
    void (ONUT_STD_CALL *onutEnableDriverControlQCOM)(GLuint driverControl);
    void (ONUT_STD_CALL *onutEnableIndexedEXT)(GLenum target, GLuint index);
    void (ONUT_STD_CALL *onutEnableVariantClientStateEXT)(GLuint id);
    void (ONUT_STD_CALL *onutEnableVertexArrayAttribEXT)(GLuint vaobj, GLuint index);
    void (ONUT_STD_CALL *onutEnableVertexArrayEXT)(GLuint vaobj, GLenum array);
    void (ONUT_STD_CALL *onutEnableVertexAttribAPPLE)(GLuint index, GLenum pname);
    void (ONUT_STD_CALL *onutEnableVertexAttribArrayARB)(GLuint index);
    void (ONUT_STD_CALL *onutEnableiEXT)(GLenum target, GLuint index);
    void (ONUT_STD_CALL *onutEnableiNV)(GLenum target, GLuint index);
    void (ONUT_STD_CALL *onutEnableiOES)(GLenum target, GLuint index);
    void (ONUT_STD_CALL *onutEndConditionalRenderNV)(void);
    void (ONUT_STD_CALL *onutEndConditionalRenderNVX)(void);
    void (ONUT_STD_CALL *onutEndFragmentShaderATI)(void);
    void (ONUT_STD_CALL *onutEndOcclusionQueryNV)(void);
    void (ONUT_STD_CALL *onutEndPerfMonitorAMD)(GLuint monitor);
    void (ONUT_STD_CALL *onutEndPerfQueryINTEL)(GLuint queryHandle);
    void (ONUT_STD_CALL *onutEndQueryARB)(GLenum target);
    void (ONUT_STD_CALL *onutEndQueryEXT)(GLenum target);
    void (ONUT_STD_CALL *onutEndTilingQCOM)(GLbitfield preserveMask);
    void (ONUT_STD_CALL *onutEndTransformFeedbackEXT)(void);
    void (ONUT_STD_CALL *onutEndTransformFeedbackNV)(void);
    void (ONUT_STD_CALL *onutEndVertexShaderEXT)(void);
    void (ONUT_STD_CALL *onutEndVideoCaptureNV)(GLuint video_capture_slot);
    void (ONUT_STD_CALL *onutEvalCoord1xOES)(GLfixed u);
    void (ONUT_STD_CALL *onutEvalCoord1xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutEvalCoord2xOES)(GLfixed u, GLfixed v);
    void (ONUT_STD_CALL *onutEvalCoord2xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutEvalMapsNV)(GLenum target, GLenum mode);
    void (ONUT_STD_CALL *onutEvaluateDepthValuesARB)(void);
    void (ONUT_STD_CALL *onutExecuteProgramNV)(GLenum target, GLuint id, const GLfloat *params);
    void (ONUT_STD_CALL *onutExtGetBufferPointervQCOM)(GLenum target, void **params);
    void (ONUT_STD_CALL *onutExtGetBuffersQCOM)(GLuint *buffers, GLint maxBuffers, GLint *numBuffers);
    void (ONUT_STD_CALL *onutExtGetFramebuffersQCOM)(GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers);
    void (ONUT_STD_CALL *onutExtGetProgramBinarySourceQCOM)(GLuint program, GLenum shadertype, GLchar *source, GLint *length);
    void (ONUT_STD_CALL *onutExtGetProgramsQCOM)(GLuint *programs, GLint maxPrograms, GLint *numPrograms);
    void (ONUT_STD_CALL *onutExtGetRenderbuffersQCOM)(GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers);
    void (ONUT_STD_CALL *onutExtGetShadersQCOM)(GLuint *shaders, GLint maxShaders, GLint *numShaders);
    void (ONUT_STD_CALL *onutExtGetTexLevelParameterivQCOM)(GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutExtGetTexSubImageQCOM)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void *texels);
    void (ONUT_STD_CALL *onutExtGetTexturesQCOM)(GLuint *textures, GLint maxTextures, GLint *numTextures);
    GLboolean (ONUT_STD_CALL *onutExtIsProgramBinaryQCOM)(GLuint program);
    void (ONUT_STD_CALL *onutExtTexObjectStateOverrideiQCOM)(GLenum target, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutExtractComponentEXT)(GLuint res, GLuint src, GLuint num);
    void (ONUT_STD_CALL *onutFeedbackBufferxOES)(GLsizei n, GLenum type, const GLfixed *buffer);
    GLsync (ONUT_STD_CALL *onutFenceSyncAPPLE)(GLenum condition, GLbitfield flags);
    void (ONUT_STD_CALL *onutFinalCombinerInputNV)(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
    GLint (ONUT_STD_CALL *onutFinishAsyncSGIX)(GLuint *markerp);
    void (ONUT_STD_CALL *onutFinishFenceAPPLE)(GLuint fence);
    void (ONUT_STD_CALL *onutFinishFenceNV)(GLuint fence);
    void (ONUT_STD_CALL *onutFinishObjectAPPLE)(GLenum object, GLint name);
    void (ONUT_STD_CALL *onutFinishTextureSUNX)(void);
    void (ONUT_STD_CALL *onutFlushMappedBufferRangeAPPLE)(GLenum target, GLintptr offset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutFlushMappedBufferRangeEXT)(GLenum target, GLintptr offset, GLsizeiptr length);
    void (ONUT_STD_CALL *onutFlushMappedNamedBufferRangeEXT)(GLuint buffer, GLintptr offset, GLsizeiptr length);
    void (ONUT_STD_CALL *onutFlushPixelDataRangeNV)(GLenum target);
    void (ONUT_STD_CALL *onutFlushRasterSGIX)(void);
    void (ONUT_STD_CALL *onutFlushStaticDataIBM)(GLenum target);
    void (ONUT_STD_CALL *onutFlushVertexArrayRangeAPPLE)(GLsizei length, void *pointer);
    void (ONUT_STD_CALL *onutFlushVertexArrayRangeNV)(void);
    void (ONUT_STD_CALL *onutFogCoordFormatNV)(GLenum type, GLsizei stride);
    void (ONUT_STD_CALL *onutFogCoordPointerEXT)(GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutFogCoordPointerListIBM)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
    void (ONUT_STD_CALL *onutFogCoorddEXT)(GLdouble coord);
    void (ONUT_STD_CALL *onutFogCoorddvEXT)(const GLdouble *coord);
    void (ONUT_STD_CALL *onutFogCoordfEXT)(GLfloat coord);
    void (ONUT_STD_CALL *onutFogCoordfvEXT)(const GLfloat *coord);
    void (ONUT_STD_CALL *onutFogCoordhNV)(GLhalfNV fog);
    void (ONUT_STD_CALL *onutFogCoordhvNV)(const GLhalfNV *fog);
    void (ONUT_STD_CALL *onutFogFuncSGIS)(GLsizei n, const GLfloat *points);
    void (ONUT_STD_CALL *onutFogxOES)(GLenum pname, GLfixed param);
    void (ONUT_STD_CALL *onutFogxvOES)(GLenum pname, const GLfixed *param);
    void (ONUT_STD_CALL *onutFragmentColorMaterialSGIX)(GLenum face, GLenum mode);
    void (ONUT_STD_CALL *onutFragmentCoverageColorNV)(GLuint color);
    void (ONUT_STD_CALL *onutFragmentLightModelfSGIX)(GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutFragmentLightModelfvSGIX)(GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutFragmentLightModeliSGIX)(GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutFragmentLightModelivSGIX)(GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutFragmentLightfSGIX)(GLenum light, GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutFragmentLightfvSGIX)(GLenum light, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutFragmentLightiSGIX)(GLenum light, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutFragmentLightivSGIX)(GLenum light, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutFragmentMaterialfSGIX)(GLenum face, GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutFragmentMaterialfvSGIX)(GLenum face, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutFragmentMaterialiSGIX)(GLenum face, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutFragmentMaterialivSGIX)(GLenum face, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutFrameTerminatorGREMEDY)(void);
    void (ONUT_STD_CALL *onutFrameZoomSGIX)(GLint factor);
    void (ONUT_STD_CALL *onutFramebufferDrawBufferEXT)(GLuint framebuffer, GLenum mode);
    void (ONUT_STD_CALL *onutFramebufferDrawBuffersEXT)(GLuint framebuffer, GLsizei n, const GLenum *bufs);
    void (ONUT_STD_CALL *onutFramebufferFetchBarrierQCOM)(void);
    void (ONUT_STD_CALL *onutFramebufferFoveationConfigQCOM)(GLuint framebuffer, GLuint numLayers, GLuint focalPointsPerLayer, GLuint requestedFeatures, GLuint *providedFeatures);
    void (ONUT_STD_CALL *onutFramebufferFoveationParametersQCOM)(GLuint framebuffer, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea);
    void (ONUT_STD_CALL *onutFramebufferPixelLocalStorageSizeEXT)(GLuint target, GLsizei size);
    void (ONUT_STD_CALL *onutFramebufferReadBufferEXT)(GLuint framebuffer, GLenum mode);
    void (ONUT_STD_CALL *onutFramebufferRenderbufferEXT)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    void (ONUT_STD_CALL *onutFramebufferSampleLocationsfvARB)(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutFramebufferSampleLocationsfvNV)(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutFramebufferSamplePositionsfvAMD)(GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat *values);
    void (ONUT_STD_CALL *onutFramebufferTexture1DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutFramebufferTexture2DDownsampleIMG)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint xscale, GLint yscale);
    void (ONUT_STD_CALL *onutFramebufferTexture2DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutFramebufferTexture2DMultisampleEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
    void (ONUT_STD_CALL *onutFramebufferTexture2DMultisampleIMG)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
    void (ONUT_STD_CALL *onutFramebufferTexture3DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
    void (ONUT_STD_CALL *onutFramebufferTexture3DOES)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
    void (ONUT_STD_CALL *onutFramebufferTextureARB)(GLenum target, GLenum attachment, GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutFramebufferTextureEXT)(GLenum target, GLenum attachment, GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutFramebufferTextureFaceARB)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
    void (ONUT_STD_CALL *onutFramebufferTextureFaceEXT)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
    void (ONUT_STD_CALL *onutFramebufferTextureLayerARB)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
    void (ONUT_STD_CALL *onutFramebufferTextureLayerDownsampleIMG)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLint xscale, GLint yscale);
    void (ONUT_STD_CALL *onutFramebufferTextureLayerEXT)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
    void (ONUT_STD_CALL *onutFramebufferTextureMultisampleMultiviewOVR)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews);
    void (ONUT_STD_CALL *onutFramebufferTextureMultiviewOVR)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
    void (ONUT_STD_CALL *onutFramebufferTextureOES)(GLenum target, GLenum attachment, GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutFreeObjectBufferATI)(GLuint buffer);
    void (ONUT_STD_CALL *onutFrustumfOES)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
    void (ONUT_STD_CALL *onutFrustumxOES)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
    GLuint (ONUT_STD_CALL *onutGenAsyncMarkersSGIX)(GLsizei range);
    void (ONUT_STD_CALL *onutGenBuffersARB)(GLsizei n, GLuint *buffers);
    void (ONUT_STD_CALL *onutGenFencesAPPLE)(GLsizei n, GLuint *fences);
    void (ONUT_STD_CALL *onutGenFencesNV)(GLsizei n, GLuint *fences);
    GLuint (ONUT_STD_CALL *onutGenFragmentShadersATI)(GLuint range);
    void (ONUT_STD_CALL *onutGenFramebuffersEXT)(GLsizei n, GLuint *framebuffers);
    void (ONUT_STD_CALL *onutGenNamesAMD)(GLenum identifier, GLuint num, GLuint *names);
    void (ONUT_STD_CALL *onutGenOcclusionQueriesNV)(GLsizei n, GLuint *ids);
    GLuint (ONUT_STD_CALL *onutGenPathsNV)(GLsizei range);
    void (ONUT_STD_CALL *onutGenPerfMonitorsAMD)(GLsizei n, GLuint *monitors);
    void (ONUT_STD_CALL *onutGenProgramPipelinesEXT)(GLsizei n, GLuint *pipelines);
    void (ONUT_STD_CALL *onutGenProgramsARB)(GLsizei n, GLuint *programs);
    void (ONUT_STD_CALL *onutGenProgramsNV)(GLsizei n, GLuint *programs);
    void (ONUT_STD_CALL *onutGenQueriesARB)(GLsizei n, GLuint *ids);
    void (ONUT_STD_CALL *onutGenQueriesEXT)(GLsizei n, GLuint *ids);
    void (ONUT_STD_CALL *onutGenRenderbuffersEXT)(GLsizei n, GLuint *renderbuffers);
    void (ONUT_STD_CALL *onutGenSemaphoresEXT)(GLsizei n, GLuint *semaphores);
    GLuint (ONUT_STD_CALL *onutGenSymbolsEXT)(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
    void (ONUT_STD_CALL *onutGenTexturesEXT)(GLsizei n, GLuint *textures);
    void (ONUT_STD_CALL *onutGenTransformFeedbacksNV)(GLsizei n, GLuint *ids);
    void (ONUT_STD_CALL *onutGenVertexArraysAPPLE)(GLsizei n, GLuint *arrays);
    void (ONUT_STD_CALL *onutGenVertexArraysOES)(GLsizei n, GLuint *arrays);
    GLuint (ONUT_STD_CALL *onutGenVertexShadersEXT)(GLuint range);
    void (ONUT_STD_CALL *onutGenerateMipmapEXT)(GLenum target);
    void (ONUT_STD_CALL *onutGenerateMultiTexMipmapEXT)(GLenum texunit, GLenum target);
    void (ONUT_STD_CALL *onutGenerateTextureMipmapEXT)(GLuint texture, GLenum target);
    void (ONUT_STD_CALL *onutGetActiveAttribARB)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
    void (ONUT_STD_CALL *onutGetActiveUniformARB)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
    void (ONUT_STD_CALL *onutGetActiveVaryingNV)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
    void (ONUT_STD_CALL *onutGetArrayObjectfvATI)(GLenum array, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetArrayObjectivATI)(GLenum array, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetAttachedObjectsARB)(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
    GLint (ONUT_STD_CALL *onutGetAttribLocationARB)(GLhandleARB programObj, const GLcharARB *name);
    void (ONUT_STD_CALL *onutGetBooleanIndexedvEXT)(GLenum target, GLuint index, GLboolean *data);
    void (ONUT_STD_CALL *onutGetBufferParameterivARB)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetBufferParameterui64vNV)(GLenum target, GLenum pname, GLuint64EXT *params);
    void (ONUT_STD_CALL *onutGetBufferPointervARB)(GLenum target, GLenum pname, void **params);
    void (ONUT_STD_CALL *onutGetBufferPointervOES)(GLenum target, GLenum pname, void **params);
    void (ONUT_STD_CALL *onutGetBufferSubDataARB)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data);
    void (ONUT_STD_CALL *onutGetClipPlanefOES)(GLenum plane, GLfloat *equation);
    void (ONUT_STD_CALL *onutGetClipPlanexOES)(GLenum plane, GLfixed *equation);
    void (ONUT_STD_CALL *onutGetColorTable)(GLenum target, GLenum format, GLenum type, void *table);
    void (ONUT_STD_CALL *onutGetColorTableEXT)(GLenum target, GLenum format, GLenum type, void *data);
    void (ONUT_STD_CALL *onutGetColorTableParameterfv)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetColorTableParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetColorTableParameterfvSGI)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetColorTableParameteriv)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetColorTableParameterivEXT)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetColorTableParameterivSGI)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetColorTableSGI)(GLenum target, GLenum format, GLenum type, void *table);
    void (ONUT_STD_CALL *onutGetCombinerInputParameterfvNV)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetCombinerInputParameterivNV)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetCombinerOutputParameterfvNV)(GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetCombinerOutputParameterivNV)(GLenum stage, GLenum portion, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetCombinerStageParameterfvNV)(GLenum stage, GLenum pname, GLfloat *params);
    GLuint (ONUT_STD_CALL *onutGetCommandHeaderNV)(GLenum tokenID, GLuint size);
    void (ONUT_STD_CALL *onutGetCompressedMultiTexImageEXT)(GLenum texunit, GLenum target, GLint lod, void *img);
    void (ONUT_STD_CALL *onutGetCompressedTexImageARB)(GLenum target, GLint level, void *img);
    void (ONUT_STD_CALL *onutGetCompressedTextureImageEXT)(GLuint texture, GLenum target, GLint lod, void *img);
    void (ONUT_STD_CALL *onutGetConvolutionFilter)(GLenum target, GLenum format, GLenum type, void *image);
    void (ONUT_STD_CALL *onutGetConvolutionFilterEXT)(GLenum target, GLenum format, GLenum type, void *image);
    void (ONUT_STD_CALL *onutGetConvolutionParameterfv)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetConvolutionParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetConvolutionParameteriv)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetConvolutionParameterivEXT)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetConvolutionParameterxvOES)(GLenum target, GLenum pname, GLfixed *params);
    void (ONUT_STD_CALL *onutGetCoverageModulationTableNV)(GLsizei bufsize, GLfloat *v);
    GLuint (ONUT_STD_CALL *onutGetDebugMessageLogAMD)(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
    GLuint (ONUT_STD_CALL *onutGetDebugMessageLogARB)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
    GLuint (ONUT_STD_CALL *onutGetDebugMessageLogKHR)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
    void (ONUT_STD_CALL *onutGetDetailTexFuncSGIS)(GLenum target, GLfloat *points);
    void (ONUT_STD_CALL *onutGetDoubleIndexedvEXT)(GLenum target, GLuint index, GLdouble *data);
    void (ONUT_STD_CALL *onutGetDoublei_vEXT)(GLenum pname, GLuint index, GLdouble *params);
    void (ONUT_STD_CALL *onutGetDriverControlStringQCOM)(GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString);
    void (ONUT_STD_CALL *onutGetDriverControlsQCOM)(GLint *num, GLsizei size, GLuint *driverControls);
    void (ONUT_STD_CALL *onutGetFenceivNV)(GLuint fence, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetFinalCombinerInputParameterfvNV)(GLenum variable, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetFinalCombinerInputParameterivNV)(GLenum variable, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetFirstPerfQueryIdINTEL)(GLuint *queryId);
    void (ONUT_STD_CALL *onutGetFixedvOES)(GLenum pname, GLfixed *params);
    void (ONUT_STD_CALL *onutGetFloatIndexedvEXT)(GLenum target, GLuint index, GLfloat *data);
    void (ONUT_STD_CALL *onutGetFloati_vEXT)(GLenum pname, GLuint index, GLfloat *params);
    void (ONUT_STD_CALL *onutGetFloati_vNV)(GLenum target, GLuint index, GLfloat *data);
    void (ONUT_STD_CALL *onutGetFloati_vOES)(GLenum target, GLuint index, GLfloat *data);
    void (ONUT_STD_CALL *onutGetFogFuncSGIS)(GLfloat *points);
    GLint (ONUT_STD_CALL *onutGetFragDataIndexEXT)(GLuint program, const GLchar *name);
    GLint (ONUT_STD_CALL *onutGetFragDataLocationEXT)(GLuint program, const GLchar *name);
    void (ONUT_STD_CALL *onutGetFragmentLightfvSGIX)(GLenum light, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetFragmentLightivSGIX)(GLenum light, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetFragmentMaterialfvSGIX)(GLenum face, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetFragmentMaterialivSGIX)(GLenum face, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetFramebufferAttachmentParameterivEXT)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetFramebufferParameterfvAMD)(GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values);
    void (ONUT_STD_CALL *onutGetFramebufferParameterivEXT)(GLuint framebuffer, GLenum pname, GLint *params);
    GLsizei (ONUT_STD_CALL *onutGetFramebufferPixelLocalStorageSizeEXT)(GLuint target);
    GLenum (ONUT_STD_CALL *onutGetGraphicsResetStatusARB)(void);
    GLenum (ONUT_STD_CALL *onutGetGraphicsResetStatusEXT)(void);
    GLenum (ONUT_STD_CALL *onutGetGraphicsResetStatusKHR)(void);
    GLhandleARB (ONUT_STD_CALL *onutGetHandleARB)(GLenum pname);
    void (ONUT_STD_CALL *onutGetHistogram)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
    void (ONUT_STD_CALL *onutGetHistogramEXT)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
    void (ONUT_STD_CALL *onutGetHistogramParameterfv)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetHistogramParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetHistogramParameteriv)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetHistogramParameterivEXT)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetHistogramParameterxvOES)(GLenum target, GLenum pname, GLfixed *params);
    GLuint64 (ONUT_STD_CALL *onutGetImageHandleARB)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
    GLuint64 (ONUT_STD_CALL *onutGetImageHandleNV)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
    void (ONUT_STD_CALL *onutGetImageTransformParameterfvHP)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetImageTransformParameterivHP)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetInfoLogARB)(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
    GLint (ONUT_STD_CALL *onutGetInstrumentsSGIX)(void);
    void (ONUT_STD_CALL *onutGetInteger64vAPPLE)(GLenum pname, GLint64 *params);
    void (ONUT_STD_CALL *onutGetIntegerIndexedvEXT)(GLenum target, GLuint index, GLint *data);
    void (ONUT_STD_CALL *onutGetIntegeri_vEXT)(GLenum target, GLuint index, GLint *data);
    void (ONUT_STD_CALL *onutGetIntegerui64i_vNV)(GLenum value, GLuint index, GLuint64EXT *result);
    void (ONUT_STD_CALL *onutGetIntegerui64vNV)(GLenum value, GLuint64EXT *result);
    void (ONUT_STD_CALL *onutGetInternalformatSampleivNV)(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
    void (ONUT_STD_CALL *onutGetInvariantBooleanvEXT)(GLuint id, GLenum value, GLboolean *data);
    void (ONUT_STD_CALL *onutGetInvariantFloatvEXT)(GLuint id, GLenum value, GLfloat *data);
    void (ONUT_STD_CALL *onutGetInvariantIntegervEXT)(GLuint id, GLenum value, GLint *data);
    void (ONUT_STD_CALL *onutGetLightxOES)(GLenum light, GLenum pname, GLfixed *params);
    void (ONUT_STD_CALL *onutGetListParameterfvSGIX)(GLuint list, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetListParameterivSGIX)(GLuint list, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetLocalConstantBooleanvEXT)(GLuint id, GLenum value, GLboolean *data);
    void (ONUT_STD_CALL *onutGetLocalConstantFloatvEXT)(GLuint id, GLenum value, GLfloat *data);
    void (ONUT_STD_CALL *onutGetLocalConstantIntegervEXT)(GLuint id, GLenum value, GLint *data);
    void (ONUT_STD_CALL *onutGetMapAttribParameterfvNV)(GLenum target, GLuint index, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetMapAttribParameterivNV)(GLenum target, GLuint index, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetMapControlPointsNV)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points);
    void (ONUT_STD_CALL *onutGetMapParameterfvNV)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetMapParameterivNV)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetMapxvOES)(GLenum target, GLenum query, GLfixed *v);
    void (ONUT_STD_CALL *onutGetMaterialxOES)(GLenum face, GLenum pname, GLfixed param);
    void (ONUT_STD_CALL *onutGetMemoryObjectParameterivEXT)(GLuint memoryObject, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetMinmax)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
    void (ONUT_STD_CALL *onutGetMinmaxEXT)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
    void (ONUT_STD_CALL *onutGetMinmaxParameterfv)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetMinmaxParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetMinmaxParameteriv)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetMinmaxParameterivEXT)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetMultiTexEnvfvEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetMultiTexEnvivEXT)(GLenum texunit, GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetMultiTexGendvEXT)(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);
    void (ONUT_STD_CALL *onutGetMultiTexGenfvEXT)(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetMultiTexGenivEXT)(GLenum texunit, GLenum coord, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetMultiTexImageEXT)(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
    void (ONUT_STD_CALL *onutGetMultiTexLevelParameterfvEXT)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetMultiTexLevelParameterivEXT)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetMultiTexParameterIivEXT)(GLenum texunit, GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetMultiTexParameterIuivEXT)(GLenum texunit, GLenum target, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetMultiTexParameterfvEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetMultiTexParameterivEXT)(GLenum texunit, GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetMultisamplefvNV)(GLenum pname, GLuint index, GLfloat *val);
    void (ONUT_STD_CALL *onutGetNamedBufferParameterivEXT)(GLuint buffer, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetNamedBufferParameterui64vNV)(GLuint buffer, GLenum pname, GLuint64EXT *params);
    void (ONUT_STD_CALL *onutGetNamedBufferPointervEXT)(GLuint buffer, GLenum pname, void **params);
    void (ONUT_STD_CALL *onutGetNamedBufferSubDataEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
    void (ONUT_STD_CALL *onutGetNamedFramebufferAttachmentParameterivEXT)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetNamedFramebufferParameterfvAMD)(GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values);
    void (ONUT_STD_CALL *onutGetNamedFramebufferParameterivEXT)(GLuint framebuffer, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetNamedProgramLocalParameterIivEXT)(GLuint program, GLenum target, GLuint index, GLint *params);
    void (ONUT_STD_CALL *onutGetNamedProgramLocalParameterIuivEXT)(GLuint program, GLenum target, GLuint index, GLuint *params);
    void (ONUT_STD_CALL *onutGetNamedProgramLocalParameterdvEXT)(GLuint program, GLenum target, GLuint index, GLdouble *params);
    void (ONUT_STD_CALL *onutGetNamedProgramLocalParameterfvEXT)(GLuint program, GLenum target, GLuint index, GLfloat *params);
    void (ONUT_STD_CALL *onutGetNamedProgramStringEXT)(GLuint program, GLenum target, GLenum pname, void *string);
    void (ONUT_STD_CALL *onutGetNamedProgramivEXT)(GLuint program, GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetNamedRenderbufferParameterivEXT)(GLuint renderbuffer, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetNamedStringARB)(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);
    void (ONUT_STD_CALL *onutGetNamedStringivARB)(GLint namelen, const GLchar *name, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetNextPerfQueryIdINTEL)(GLuint queryId, GLuint *nextQueryId);
    void (ONUT_STD_CALL *onutGetObjectBufferfvATI)(GLuint buffer, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetObjectBufferivATI)(GLuint buffer, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetObjectLabelEXT)(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);
    void (ONUT_STD_CALL *onutGetObjectLabelKHR)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
    void (ONUT_STD_CALL *onutGetObjectParameterfvARB)(GLhandleARB obj, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetObjectParameterivAPPLE)(GLenum objectType, GLuint name, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetObjectParameterivARB)(GLhandleARB obj, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetObjectPtrLabelKHR)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
    void (ONUT_STD_CALL *onutGetOcclusionQueryivNV)(GLuint id, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetOcclusionQueryuivNV)(GLuint id, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetPathColorGenfvNV)(GLenum color, GLenum pname, GLfloat *value);
    void (ONUT_STD_CALL *onutGetPathColorGenivNV)(GLenum color, GLenum pname, GLint *value);
    void (ONUT_STD_CALL *onutGetPathCommandsNV)(GLuint path, GLubyte *commands);
    void (ONUT_STD_CALL *onutGetPathCoordsNV)(GLuint path, GLfloat *coords);
    void (ONUT_STD_CALL *onutGetPathDashArrayNV)(GLuint path, GLfloat *dashArray);
    GLfloat (ONUT_STD_CALL *onutGetPathLengthNV)(GLuint path, GLsizei startSegment, GLsizei numSegments);
    void (ONUT_STD_CALL *onutGetPathMetricRangeNV)(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);
    void (ONUT_STD_CALL *onutGetPathMetricsNV)(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);
    void (ONUT_STD_CALL *onutGetPathParameterfvNV)(GLuint path, GLenum pname, GLfloat *value);
    void (ONUT_STD_CALL *onutGetPathParameterivNV)(GLuint path, GLenum pname, GLint *value);
    void (ONUT_STD_CALL *onutGetPathSpacingNV)(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);
    void (ONUT_STD_CALL *onutGetPathTexGenfvNV)(GLenum texCoordSet, GLenum pname, GLfloat *value);
    void (ONUT_STD_CALL *onutGetPathTexGenivNV)(GLenum texCoordSet, GLenum pname, GLint *value);
    void (ONUT_STD_CALL *onutGetPerfCounterInfoINTEL)(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
    void (ONUT_STD_CALL *onutGetPerfMonitorCounterDataAMD)(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
    void (ONUT_STD_CALL *onutGetPerfMonitorCounterInfoAMD)(GLuint group, GLuint counter, GLenum pname, void *data);
    void (ONUT_STD_CALL *onutGetPerfMonitorCounterStringAMD)(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
    void (ONUT_STD_CALL *onutGetPerfMonitorCountersAMD)(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
    void (ONUT_STD_CALL *onutGetPerfMonitorGroupStringAMD)(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
    void (ONUT_STD_CALL *onutGetPerfMonitorGroupsAMD)(GLint *numGroups, GLsizei groupsSize, GLuint *groups);
    void (ONUT_STD_CALL *onutGetPerfQueryDataINTEL)(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);
    void (ONUT_STD_CALL *onutGetPerfQueryIdByNameINTEL)(GLchar *queryName, GLuint *queryId);
    void (ONUT_STD_CALL *onutGetPerfQueryInfoINTEL)(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
    void (ONUT_STD_CALL *onutGetPixelMapxv)(GLenum map, GLint size, GLfixed *values);
    void (ONUT_STD_CALL *onutGetPixelTexGenParameterfvSGIS)(GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetPixelTexGenParameterivSGIS)(GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetPixelTransformParameterfvEXT)(GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetPixelTransformParameterivEXT)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetPointerIndexedvEXT)(GLenum target, GLuint index, void **data);
    void (ONUT_STD_CALL *onutGetPointeri_vEXT)(GLenum pname, GLuint index, void **params);
    void (ONUT_STD_CALL *onutGetPointervEXT)(GLenum pname, void **params);
    void (ONUT_STD_CALL *onutGetPointervKHR)(GLenum pname, void **params);
    void (ONUT_STD_CALL *onutGetProgramBinaryOES)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
    void (ONUT_STD_CALL *onutGetProgramEnvParameterIivNV)(GLenum target, GLuint index, GLint *params);
    void (ONUT_STD_CALL *onutGetProgramEnvParameterIuivNV)(GLenum target, GLuint index, GLuint *params);
    void (ONUT_STD_CALL *onutGetProgramEnvParameterdvARB)(GLenum target, GLuint index, GLdouble *params);
    void (ONUT_STD_CALL *onutGetProgramEnvParameterfvARB)(GLenum target, GLuint index, GLfloat *params);
    void (ONUT_STD_CALL *onutGetProgramLocalParameterIivNV)(GLenum target, GLuint index, GLint *params);
    void (ONUT_STD_CALL *onutGetProgramLocalParameterIuivNV)(GLenum target, GLuint index, GLuint *params);
    void (ONUT_STD_CALL *onutGetProgramLocalParameterdvARB)(GLenum target, GLuint index, GLdouble *params);
    void (ONUT_STD_CALL *onutGetProgramLocalParameterfvARB)(GLenum target, GLuint index, GLfloat *params);
    void (ONUT_STD_CALL *onutGetProgramNamedParameterdvNV)(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
    void (ONUT_STD_CALL *onutGetProgramNamedParameterfvNV)(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
    void (ONUT_STD_CALL *onutGetProgramParameterdvNV)(GLenum target, GLuint index, GLenum pname, GLdouble *params);
    void (ONUT_STD_CALL *onutGetProgramParameterfvNV)(GLenum target, GLuint index, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetProgramPipelineInfoLogEXT)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
    void (ONUT_STD_CALL *onutGetProgramPipelineivEXT)(GLuint pipeline, GLenum pname, GLint *params);
    GLint (ONUT_STD_CALL *onutGetProgramResourceLocationIndexEXT)(GLuint program, GLenum programInterface, const GLchar *name);
    void (ONUT_STD_CALL *onutGetProgramResourcefvNV)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
    void (ONUT_STD_CALL *onutGetProgramStringARB)(GLenum target, GLenum pname, void *string);
    void (ONUT_STD_CALL *onutGetProgramStringNV)(GLuint id, GLenum pname, GLubyte *program);
    void (ONUT_STD_CALL *onutGetProgramSubroutineParameteruivNV)(GLenum target, GLuint index, GLuint *param);
    void (ONUT_STD_CALL *onutGetProgramivARB)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetProgramivNV)(GLuint id, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetQueryObjecti64vEXT)(GLuint id, GLenum pname, GLint64 *params);
    void (ONUT_STD_CALL *onutGetQueryObjectivARB)(GLuint id, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetQueryObjectivEXT)(GLuint id, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetQueryObjectui64vEXT)(GLuint id, GLenum pname, GLuint64 *params);
    void (ONUT_STD_CALL *onutGetQueryObjectuivARB)(GLuint id, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetQueryObjectuivEXT)(GLuint id, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetQueryivARB)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetQueryivEXT)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetRenderbufferParameterivEXT)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetSamplerParameterIivEXT)(GLuint sampler, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetSamplerParameterIivOES)(GLuint sampler, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetSamplerParameterIuivEXT)(GLuint sampler, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetSamplerParameterIuivOES)(GLuint sampler, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetSemaphoreParameterui64vEXT)(GLuint semaphore, GLenum pname, GLuint64 *params);
    void (ONUT_STD_CALL *onutGetSeparableFilter)(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
    void (ONUT_STD_CALL *onutGetSeparableFilterEXT)(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
    void (ONUT_STD_CALL *onutGetShaderSourceARB)(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);
    void (ONUT_STD_CALL *onutGetSharpenTexFuncSGIS)(GLenum target, GLfloat *points);
    GLushort (ONUT_STD_CALL *onutGetStageIndexNV)(GLenum shadertype);
    void (ONUT_STD_CALL *onutGetSyncivAPPLE)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
    void (ONUT_STD_CALL *onutGetTexBumpParameterfvATI)(GLenum pname, GLfloat *param);
    void (ONUT_STD_CALL *onutGetTexBumpParameterivATI)(GLenum pname, GLint *param);
    void (ONUT_STD_CALL *onutGetTexEnvxvOES)(GLenum target, GLenum pname, GLfixed *params);
    void (ONUT_STD_CALL *onutGetTexFilterFuncSGIS)(GLenum target, GLenum filter, GLfloat *weights);
    void (ONUT_STD_CALL *onutGetTexGenxvOES)(GLenum coord, GLenum pname, GLfixed *params);
    void (ONUT_STD_CALL *onutGetTexLevelParameterxvOES)(GLenum target, GLint level, GLenum pname, GLfixed *params);
    void (ONUT_STD_CALL *onutGetTexParameterIivEXT)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetTexParameterIivOES)(GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetTexParameterIuivEXT)(GLenum target, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetTexParameterIuivOES)(GLenum target, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetTexParameterPointervAPPLE)(GLenum target, GLenum pname, void **params);
    void (ONUT_STD_CALL *onutGetTexParameterxvOES)(GLenum target, GLenum pname, GLfixed *params);
    GLuint64 (ONUT_STD_CALL *onutGetTextureHandleARB)(GLuint texture);
    GLuint64 (ONUT_STD_CALL *onutGetTextureHandleIMG)(GLuint texture);
    GLuint64 (ONUT_STD_CALL *onutGetTextureHandleNV)(GLuint texture);
    void (ONUT_STD_CALL *onutGetTextureImageEXT)(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
    void (ONUT_STD_CALL *onutGetTextureLevelParameterfvEXT)(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetTextureLevelParameterivEXT)(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetTextureParameterIivEXT)(GLuint texture, GLenum target, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetTextureParameterIuivEXT)(GLuint texture, GLenum target, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetTextureParameterfvEXT)(GLuint texture, GLenum target, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetTextureParameterivEXT)(GLuint texture, GLenum target, GLenum pname, GLint *params);
    GLuint64 (ONUT_STD_CALL *onutGetTextureSamplerHandleARB)(GLuint texture, GLuint sampler);
    GLuint64 (ONUT_STD_CALL *onutGetTextureSamplerHandleIMG)(GLuint texture, GLuint sampler);
    GLuint64 (ONUT_STD_CALL *onutGetTextureSamplerHandleNV)(GLuint texture, GLuint sampler);
    void (ONUT_STD_CALL *onutGetTrackMatrixivNV)(GLenum target, GLuint address, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetTransformFeedbackVaryingEXT)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
    void (ONUT_STD_CALL *onutGetTransformFeedbackVaryingNV)(GLuint program, GLuint index, GLint *location);
    void (ONUT_STD_CALL *onutGetTranslatedShaderSourceANGLE)(GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source);
    GLint (ONUT_STD_CALL *onutGetUniformBufferSizeEXT)(GLuint program, GLint location);
    GLint (ONUT_STD_CALL *onutGetUniformLocationARB)(GLhandleARB programObj, const GLcharARB *name);
    GLintptr (ONUT_STD_CALL *onutGetUniformOffsetEXT)(GLuint program, GLint location);
    void (ONUT_STD_CALL *onutGetUniformfvARB)(GLhandleARB programObj, GLint location, GLfloat *params);
    void (ONUT_STD_CALL *onutGetUniformi64vARB)(GLuint program, GLint location, GLint64 *params);
    void (ONUT_STD_CALL *onutGetUniformi64vNV)(GLuint program, GLint location, GLint64EXT *params);
    void (ONUT_STD_CALL *onutGetUniformivARB)(GLhandleARB programObj, GLint location, GLint *params);
    void (ONUT_STD_CALL *onutGetUniformui64vARB)(GLuint program, GLint location, GLuint64 *params);
    void (ONUT_STD_CALL *onutGetUniformui64vNV)(GLuint program, GLint location, GLuint64EXT *params);
    void (ONUT_STD_CALL *onutGetUniformuivEXT)(GLuint program, GLint location, GLuint *params);
    void (ONUT_STD_CALL *onutGetUnsignedBytei_vEXT)(GLenum target, GLuint index, GLubyte *data);
    void (ONUT_STD_CALL *onutGetUnsignedBytevEXT)(GLenum pname, GLubyte *data);
    void (ONUT_STD_CALL *onutGetVariantArrayObjectfvATI)(GLuint id, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetVariantArrayObjectivATI)(GLuint id, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetVariantBooleanvEXT)(GLuint id, GLenum value, GLboolean *data);
    void (ONUT_STD_CALL *onutGetVariantFloatvEXT)(GLuint id, GLenum value, GLfloat *data);
    void (ONUT_STD_CALL *onutGetVariantIntegervEXT)(GLuint id, GLenum value, GLint *data);
    void (ONUT_STD_CALL *onutGetVariantPointervEXT)(GLuint id, GLenum value, void **data);
    GLint (ONUT_STD_CALL *onutGetVaryingLocationNV)(GLuint program, const GLchar *name);
    void (ONUT_STD_CALL *onutGetVertexArrayIntegeri_vEXT)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
    void (ONUT_STD_CALL *onutGetVertexArrayIntegervEXT)(GLuint vaobj, GLenum pname, GLint *param);
    void (ONUT_STD_CALL *onutGetVertexArrayPointeri_vEXT)(GLuint vaobj, GLuint index, GLenum pname, void **param);
    void (ONUT_STD_CALL *onutGetVertexArrayPointervEXT)(GLuint vaobj, GLenum pname, void **param);
    void (ONUT_STD_CALL *onutGetVertexAttribArrayObjectfvATI)(GLuint index, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetVertexAttribArrayObjectivATI)(GLuint index, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetVertexAttribIivEXT)(GLuint index, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetVertexAttribIuivEXT)(GLuint index, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutGetVertexAttribLdvEXT)(GLuint index, GLenum pname, GLdouble *params);
    void (ONUT_STD_CALL *onutGetVertexAttribLi64vNV)(GLuint index, GLenum pname, GLint64EXT *params);
    void (ONUT_STD_CALL *onutGetVertexAttribLui64vARB)(GLuint index, GLenum pname, GLuint64EXT *params);
    void (ONUT_STD_CALL *onutGetVertexAttribLui64vNV)(GLuint index, GLenum pname, GLuint64EXT *params);
    void (ONUT_STD_CALL *onutGetVertexAttribPointervARB)(GLuint index, GLenum pname, void **pointer);
    void (ONUT_STD_CALL *onutGetVertexAttribPointervNV)(GLuint index, GLenum pname, void **pointer);
    void (ONUT_STD_CALL *onutGetVertexAttribdvARB)(GLuint index, GLenum pname, GLdouble *params);
    void (ONUT_STD_CALL *onutGetVertexAttribdvNV)(GLuint index, GLenum pname, GLdouble *params);
    void (ONUT_STD_CALL *onutGetVertexAttribfvARB)(GLuint index, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetVertexAttribfvNV)(GLuint index, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetVertexAttribivARB)(GLuint index, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetVertexAttribivNV)(GLuint index, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetVideoCaptureStreamdvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);
    void (ONUT_STD_CALL *onutGetVideoCaptureStreamfvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);
    void (ONUT_STD_CALL *onutGetVideoCaptureStreamivNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetVideoCaptureivNV)(GLuint video_capture_slot, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetVideoi64vNV)(GLuint video_slot, GLenum pname, GLint64EXT *params);
    void (ONUT_STD_CALL *onutGetVideoivNV)(GLuint video_slot, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutGetVideoui64vNV)(GLuint video_slot, GLenum pname, GLuint64EXT *params);
    void (ONUT_STD_CALL *onutGetVideouivNV)(GLuint video_slot, GLenum pname, GLuint *params);
    GLVULKANPROCNV (ONUT_STD_CALL *onutGetVkProcAddrNV)(const GLchar *name);
    void (ONUT_STD_CALL *onutGetnColorTableARB)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
    void (ONUT_STD_CALL *onutGetnCompressedTexImageARB)(GLenum target, GLint lod, GLsizei bufSize, void *img);
    void (ONUT_STD_CALL *onutGetnConvolutionFilterARB)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
    void (ONUT_STD_CALL *onutGetnHistogramARB)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
    void (ONUT_STD_CALL *onutGetnMapdvARB)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
    void (ONUT_STD_CALL *onutGetnMapfvARB)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
    void (ONUT_STD_CALL *onutGetnMapivARB)(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
    void (ONUT_STD_CALL *onutGetnMinmaxARB)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
    void (ONUT_STD_CALL *onutGetnPixelMapfvARB)(GLenum map, GLsizei bufSize, GLfloat *values);
    void (ONUT_STD_CALL *onutGetnPixelMapuivARB)(GLenum map, GLsizei bufSize, GLuint *values);
    void (ONUT_STD_CALL *onutGetnPixelMapusvARB)(GLenum map, GLsizei bufSize, GLushort *values);
    void (ONUT_STD_CALL *onutGetnPolygonStippleARB)(GLsizei bufSize, GLubyte *pattern);
    void (ONUT_STD_CALL *onutGetnSeparableFilterARB)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
    void (ONUT_STD_CALL *onutGetnTexImageARB)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);
    void (ONUT_STD_CALL *onutGetnUniformdvARB)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
    void (ONUT_STD_CALL *onutGetnUniformfvARB)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
    void (ONUT_STD_CALL *onutGetnUniformfvEXT)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
    void (ONUT_STD_CALL *onutGetnUniformfvKHR)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
    void (ONUT_STD_CALL *onutGetnUniformi64vARB)(GLuint program, GLint location, GLsizei bufSize, GLint64 *params);
    void (ONUT_STD_CALL *onutGetnUniformivARB)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
    void (ONUT_STD_CALL *onutGetnUniformivEXT)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
    void (ONUT_STD_CALL *onutGetnUniformivKHR)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
    void (ONUT_STD_CALL *onutGetnUniformui64vARB)(GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);
    void (ONUT_STD_CALL *onutGetnUniformuivARB)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
    void (ONUT_STD_CALL *onutGetnUniformuivKHR)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
    void (ONUT_STD_CALL *onutGlobalAlphaFactorbSUN)(GLbyte factor);
    void (ONUT_STD_CALL *onutGlobalAlphaFactordSUN)(GLdouble factor);
    void (ONUT_STD_CALL *onutGlobalAlphaFactorfSUN)(GLfloat factor);
    void (ONUT_STD_CALL *onutGlobalAlphaFactoriSUN)(GLint factor);
    void (ONUT_STD_CALL *onutGlobalAlphaFactorsSUN)(GLshort factor);
    void (ONUT_STD_CALL *onutGlobalAlphaFactorubSUN)(GLubyte factor);
    void (ONUT_STD_CALL *onutGlobalAlphaFactoruiSUN)(GLuint factor);
    void (ONUT_STD_CALL *onutGlobalAlphaFactorusSUN)(GLushort factor);
    void (ONUT_STD_CALL *onutHintPGI)(GLenum target, GLint mode);
    void (ONUT_STD_CALL *onutHistogram)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
    void (ONUT_STD_CALL *onutHistogramEXT)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
    void (ONUT_STD_CALL *onutIglooInterfaceSGIX)(GLenum pname, const void *params);
    void (ONUT_STD_CALL *onutImageTransformParameterfHP)(GLenum target, GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutImageTransformParameterfvHP)(GLenum target, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutImageTransformParameteriHP)(GLenum target, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutImageTransformParameterivHP)(GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutImportMemoryFdEXT)(GLuint memory, GLuint64 size, GLenum handleType, GLint fd);
    void (ONUT_STD_CALL *onutImportMemoryWin32HandleEXT)(GLuint memory, GLuint64 size, GLenum handleType, void *handle);
    void (ONUT_STD_CALL *onutImportMemoryWin32NameEXT)(GLuint memory, GLuint64 size, GLenum handleType, const void *name);
    void (ONUT_STD_CALL *onutImportSemaphoreFdEXT)(GLuint semaphore, GLenum handleType, GLint fd);
    void (ONUT_STD_CALL *onutImportSemaphoreWin32HandleEXT)(GLuint semaphore, GLenum handleType, void *handle);
    void (ONUT_STD_CALL *onutImportSemaphoreWin32NameEXT)(GLuint semaphore, GLenum handleType, const void *name);
    GLsync (ONUT_STD_CALL *onutImportSyncEXT)(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
    void (ONUT_STD_CALL *onutIndexFormatNV)(GLenum type, GLsizei stride);
    void (ONUT_STD_CALL *onutIndexFuncEXT)(GLenum func, GLclampf ref);
    void (ONUT_STD_CALL *onutIndexMaterialEXT)(GLenum face, GLenum mode);
    void (ONUT_STD_CALL *onutIndexPointerEXT)(GLenum type, GLsizei stride, GLsizei count, const void *pointer);
    void (ONUT_STD_CALL *onutIndexPointerListIBM)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
    void (ONUT_STD_CALL *onutIndexxOES)(GLfixed component);
    void (ONUT_STD_CALL *onutIndexxvOES)(const GLfixed *component);
    void (ONUT_STD_CALL *onutInsertComponentEXT)(GLuint res, GLuint src, GLuint num);
    void (ONUT_STD_CALL *onutInsertEventMarkerEXT)(GLsizei length, const GLchar *marker);
    void (ONUT_STD_CALL *onutInstrumentsBufferSGIX)(GLsizei size, GLint *buffer);
    void (ONUT_STD_CALL *onutInterpolatePathsNV)(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
    GLboolean (ONUT_STD_CALL *onutIsAsyncMarkerSGIX)(GLuint marker);
    GLboolean (ONUT_STD_CALL *onutIsBufferARB)(GLuint buffer);
    GLboolean (ONUT_STD_CALL *onutIsBufferResidentNV)(GLenum target);
    GLboolean (ONUT_STD_CALL *onutIsCommandListNV)(GLuint list);
    GLboolean (ONUT_STD_CALL *onutIsEnabledIndexedEXT)(GLenum target, GLuint index);
    GLboolean (ONUT_STD_CALL *onutIsEnablediEXT)(GLenum target, GLuint index);
    GLboolean (ONUT_STD_CALL *onutIsEnablediNV)(GLenum target, GLuint index);
    GLboolean (ONUT_STD_CALL *onutIsEnablediOES)(GLenum target, GLuint index);
    GLboolean (ONUT_STD_CALL *onutIsFenceAPPLE)(GLuint fence);
    GLboolean (ONUT_STD_CALL *onutIsFenceNV)(GLuint fence);
    GLboolean (ONUT_STD_CALL *onutIsFramebufferEXT)(GLuint framebuffer);
    GLboolean (ONUT_STD_CALL *onutIsImageHandleResidentARB)(GLuint64 handle);
    GLboolean (ONUT_STD_CALL *onutIsImageHandleResidentNV)(GLuint64 handle);
    GLboolean (ONUT_STD_CALL *onutIsMemoryObjectEXT)(GLuint memoryObject);
    GLboolean (ONUT_STD_CALL *onutIsNameAMD)(GLenum identifier, GLuint name);
    GLboolean (ONUT_STD_CALL *onutIsNamedBufferResidentNV)(GLuint buffer);
    GLboolean (ONUT_STD_CALL *onutIsNamedStringARB)(GLint namelen, const GLchar *name);
    GLboolean (ONUT_STD_CALL *onutIsObjectBufferATI)(GLuint buffer);
    GLboolean (ONUT_STD_CALL *onutIsOcclusionQueryNV)(GLuint id);
    GLboolean (ONUT_STD_CALL *onutIsPathNV)(GLuint path);
    GLboolean (ONUT_STD_CALL *onutIsPointInFillPathNV)(GLuint path, GLuint mask, GLfloat x, GLfloat y);
    GLboolean (ONUT_STD_CALL *onutIsPointInStrokePathNV)(GLuint path, GLfloat x, GLfloat y);
    GLboolean (ONUT_STD_CALL *onutIsProgramARB)(GLuint program);
    GLboolean (ONUT_STD_CALL *onutIsProgramNV)(GLuint id);
    GLboolean (ONUT_STD_CALL *onutIsProgramPipelineEXT)(GLuint pipeline);
    GLboolean (ONUT_STD_CALL *onutIsQueryARB)(GLuint id);
    GLboolean (ONUT_STD_CALL *onutIsQueryEXT)(GLuint id);
    GLboolean (ONUT_STD_CALL *onutIsRenderbufferEXT)(GLuint renderbuffer);
    GLboolean (ONUT_STD_CALL *onutIsSemaphoreEXT)(GLuint semaphore);
    GLboolean (ONUT_STD_CALL *onutIsStateNV)(GLuint state);
    GLboolean (ONUT_STD_CALL *onutIsSyncAPPLE)(GLsync sync);
    GLboolean (ONUT_STD_CALL *onutIsTextureEXT)(GLuint texture);
    GLboolean (ONUT_STD_CALL *onutIsTextureHandleResidentARB)(GLuint64 handle);
    GLboolean (ONUT_STD_CALL *onutIsTextureHandleResidentNV)(GLuint64 handle);
    GLboolean (ONUT_STD_CALL *onutIsTransformFeedbackNV)(GLuint id);
    GLboolean (ONUT_STD_CALL *onutIsVariantEnabledEXT)(GLuint id, GLenum cap);
    GLboolean (ONUT_STD_CALL *onutIsVertexArrayAPPLE)(GLuint array);
    GLboolean (ONUT_STD_CALL *onutIsVertexArrayOES)(GLuint array);
    GLboolean (ONUT_STD_CALL *onutIsVertexAttribEnabledAPPLE)(GLuint index, GLenum pname);
    void (ONUT_STD_CALL *onutLGPUCopyImageSubDataNVX)(GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
    void (ONUT_STD_CALL *onutLGPUInterlockNVX)(void);
    void (ONUT_STD_CALL *onutLGPUNamedBufferSubDataNVX)(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
    void (ONUT_STD_CALL *onutLabelObjectEXT)(GLenum type, GLuint object, GLsizei length, const GLchar *label);
    void (ONUT_STD_CALL *onutLightEnviSGIX)(GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutLightModelxOES)(GLenum pname, GLfixed param);
    void (ONUT_STD_CALL *onutLightModelxvOES)(GLenum pname, const GLfixed *param);
    void (ONUT_STD_CALL *onutLightxOES)(GLenum light, GLenum pname, GLfixed param);
    void (ONUT_STD_CALL *onutLightxvOES)(GLenum light, GLenum pname, const GLfixed *params);
    void (ONUT_STD_CALL *onutLineWidthxOES)(GLfixed width);
    void (ONUT_STD_CALL *onutLinkProgramARB)(GLhandleARB programObj);
    void (ONUT_STD_CALL *onutListDrawCommandsStatesClientNV)(GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
    void (ONUT_STD_CALL *onutListParameterfSGIX)(GLuint list, GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutListParameterfvSGIX)(GLuint list, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutListParameteriSGIX)(GLuint list, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutListParameterivSGIX)(GLuint list, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutLoadIdentityDeformationMapSGIX)(GLbitfield mask);
    void (ONUT_STD_CALL *onutLoadMatrixxOES)(const GLfixed *m);
    void (ONUT_STD_CALL *onutLoadProgramNV)(GLenum target, GLuint id, GLsizei len, const GLubyte *program);
    void (ONUT_STD_CALL *onutLoadTransposeMatrixdARB)(const GLdouble *m);
    void (ONUT_STD_CALL *onutLoadTransposeMatrixfARB)(const GLfloat *m);
    void (ONUT_STD_CALL *onutLoadTransposeMatrixxOES)(const GLfixed *m);
    void (ONUT_STD_CALL *onutLockArraysEXT)(GLint first, GLsizei count);
    void (ONUT_STD_CALL *onutMakeBufferNonResidentNV)(GLenum target);
    void (ONUT_STD_CALL *onutMakeBufferResidentNV)(GLenum target, GLenum access);
    void (ONUT_STD_CALL *onutMakeImageHandleNonResidentARB)(GLuint64 handle);
    void (ONUT_STD_CALL *onutMakeImageHandleNonResidentNV)(GLuint64 handle);
    void (ONUT_STD_CALL *onutMakeImageHandleResidentARB)(GLuint64 handle, GLenum access);
    void (ONUT_STD_CALL *onutMakeImageHandleResidentNV)(GLuint64 handle, GLenum access);
    void (ONUT_STD_CALL *onutMakeNamedBufferNonResidentNV)(GLuint buffer);
    void (ONUT_STD_CALL *onutMakeNamedBufferResidentNV)(GLuint buffer, GLenum access);
    void (ONUT_STD_CALL *onutMakeTextureHandleNonResidentARB)(GLuint64 handle);
    void (ONUT_STD_CALL *onutMakeTextureHandleNonResidentNV)(GLuint64 handle);
    void (ONUT_STD_CALL *onutMakeTextureHandleResidentARB)(GLuint64 handle);
    void (ONUT_STD_CALL *onutMakeTextureHandleResidentNV)(GLuint64 handle);
    void (ONUT_STD_CALL *onutMap1xOES)(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
    void (ONUT_STD_CALL *onutMap2xOES)(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
    void *(ONUT_STD_CALL *onutMapBufferARB)(GLenum target, GLenum access);
    void *(ONUT_STD_CALL *onutMapBufferOES)(GLenum target, GLenum access);
    void *(ONUT_STD_CALL *onutMapBufferRangeEXT)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
    void (ONUT_STD_CALL *onutMapControlPointsNV)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points);
    void (ONUT_STD_CALL *onutMapGrid1xOES)(GLint n, GLfixed u1, GLfixed u2);
    void (ONUT_STD_CALL *onutMapGrid2xOES)(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
    void *(ONUT_STD_CALL *onutMapNamedBufferEXT)(GLuint buffer, GLenum access);
    void *(ONUT_STD_CALL *onutMapNamedBufferRangeEXT)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
    void *(ONUT_STD_CALL *onutMapObjectBufferATI)(GLuint buffer);
    void (ONUT_STD_CALL *onutMapParameterfvNV)(GLenum target, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutMapParameterivNV)(GLenum target, GLenum pname, const GLint *params);
    void *(ONUT_STD_CALL *onutMapTexture2DINTEL)(GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout);
    void (ONUT_STD_CALL *onutMapVertexAttrib1dAPPLE)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
    void (ONUT_STD_CALL *onutMapVertexAttrib1fAPPLE)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
    void (ONUT_STD_CALL *onutMapVertexAttrib2dAPPLE)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
    void (ONUT_STD_CALL *onutMapVertexAttrib2fAPPLE)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
    void (ONUT_STD_CALL *onutMaterialxOES)(GLenum face, GLenum pname, GLfixed param);
    void (ONUT_STD_CALL *onutMaterialxvOES)(GLenum face, GLenum pname, const GLfixed *param);
    void (ONUT_STD_CALL *onutMatrixFrustumEXT)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
    void (ONUT_STD_CALL *onutMatrixIndexPointerARB)(GLint size, GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutMatrixIndexubvARB)(GLint size, const GLubyte *indices);
    void (ONUT_STD_CALL *onutMatrixIndexuivARB)(GLint size, const GLuint *indices);
    void (ONUT_STD_CALL *onutMatrixIndexusvARB)(GLint size, const GLushort *indices);
    void (ONUT_STD_CALL *onutMatrixLoad3x2fNV)(GLenum matrixMode, const GLfloat *m);
    void (ONUT_STD_CALL *onutMatrixLoad3x3fNV)(GLenum matrixMode, const GLfloat *m);
    void (ONUT_STD_CALL *onutMatrixLoadIdentityEXT)(GLenum mode);
    void (ONUT_STD_CALL *onutMatrixLoadTranspose3x3fNV)(GLenum matrixMode, const GLfloat *m);
    void (ONUT_STD_CALL *onutMatrixLoadTransposedEXT)(GLenum mode, const GLdouble *m);
    void (ONUT_STD_CALL *onutMatrixLoadTransposefEXT)(GLenum mode, const GLfloat *m);
    void (ONUT_STD_CALL *onutMatrixLoaddEXT)(GLenum mode, const GLdouble *m);
    void (ONUT_STD_CALL *onutMatrixLoadfEXT)(GLenum mode, const GLfloat *m);
    void (ONUT_STD_CALL *onutMatrixMult3x2fNV)(GLenum matrixMode, const GLfloat *m);
    void (ONUT_STD_CALL *onutMatrixMult3x3fNV)(GLenum matrixMode, const GLfloat *m);
    void (ONUT_STD_CALL *onutMatrixMultTranspose3x3fNV)(GLenum matrixMode, const GLfloat *m);
    void (ONUT_STD_CALL *onutMatrixMultTransposedEXT)(GLenum mode, const GLdouble *m);
    void (ONUT_STD_CALL *onutMatrixMultTransposefEXT)(GLenum mode, const GLfloat *m);
    void (ONUT_STD_CALL *onutMatrixMultdEXT)(GLenum mode, const GLdouble *m);
    void (ONUT_STD_CALL *onutMatrixMultfEXT)(GLenum mode, const GLfloat *m);
    void (ONUT_STD_CALL *onutMatrixOrthoEXT)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
    void (ONUT_STD_CALL *onutMatrixPopEXT)(GLenum mode);
    void (ONUT_STD_CALL *onutMatrixPushEXT)(GLenum mode);
    void (ONUT_STD_CALL *onutMatrixRotatedEXT)(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutMatrixRotatefEXT)(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutMatrixScaledEXT)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutMatrixScalefEXT)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutMatrixTranslatedEXT)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutMatrixTranslatefEXT)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutMaxShaderCompilerThreadsARB)(GLuint count);
    void (ONUT_STD_CALL *onutMemoryBarrierEXT)(GLbitfield barriers);
    void (ONUT_STD_CALL *onutMemoryObjectParameterivEXT)(GLuint memoryObject, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutMinSampleShadingARB)(GLfloat value);
    void (ONUT_STD_CALL *onutMinSampleShadingOES)(GLfloat value);
    void (ONUT_STD_CALL *onutMinmax)(GLenum target, GLenum internalformat, GLboolean sink);
    void (ONUT_STD_CALL *onutMinmaxEXT)(GLenum target, GLenum internalformat, GLboolean sink);
    void (ONUT_STD_CALL *onutMultMatrixxOES)(const GLfixed *m);
    void (ONUT_STD_CALL *onutMultTransposeMatrixdARB)(const GLdouble *m);
    void (ONUT_STD_CALL *onutMultTransposeMatrixfARB)(const GLfloat *m);
    void (ONUT_STD_CALL *onutMultTransposeMatrixxOES)(const GLfixed *m);
    void (ONUT_STD_CALL *onutMultiDrawArraysEXT)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
    void (ONUT_STD_CALL *onutMultiDrawArraysIndirectAMD)(GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride);
    void (ONUT_STD_CALL *onutMultiDrawArraysIndirectBindlessCountNV)(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
    void (ONUT_STD_CALL *onutMultiDrawArraysIndirectBindlessNV)(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
    void (ONUT_STD_CALL *onutMultiDrawArraysIndirectCountARB)(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
    void (ONUT_STD_CALL *onutMultiDrawArraysIndirectEXT)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
    void (ONUT_STD_CALL *onutMultiDrawElementArrayAPPLE)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
    void (ONUT_STD_CALL *onutMultiDrawElementsBaseVertexEXT)(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei primcount, const GLint *basevertex);
    void (ONUT_STD_CALL *onutMultiDrawElementsBaseVertexOES)(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei primcount, const GLint *basevertex);
    void (ONUT_STD_CALL *onutMultiDrawElementsEXT)(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei primcount);
    void (ONUT_STD_CALL *onutMultiDrawElementsIndirectAMD)(GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride);
    void (ONUT_STD_CALL *onutMultiDrawElementsIndirectBindlessCountNV)(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
    void (ONUT_STD_CALL *onutMultiDrawElementsIndirectBindlessNV)(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
    void (ONUT_STD_CALL *onutMultiDrawElementsIndirectCountARB)(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
    void (ONUT_STD_CALL *onutMultiDrawElementsIndirectEXT)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
    void (ONUT_STD_CALL *onutMultiDrawRangeElementArrayAPPLE)(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
    void (ONUT_STD_CALL *onutMultiModeDrawArraysIBM)(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
    void (ONUT_STD_CALL *onutMultiModeDrawElementsIBM)(const GLenum *mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei primcount, GLint modestride);
    void (ONUT_STD_CALL *onutMultiTexBufferEXT)(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
    void (ONUT_STD_CALL *onutMultiTexCoord1bOES)(GLenum texture, GLbyte s);
    void (ONUT_STD_CALL *onutMultiTexCoord1bvOES)(GLenum texture, const GLbyte *coords);
    void (ONUT_STD_CALL *onutMultiTexCoord1dARB)(GLenum target, GLdouble s);
    void (ONUT_STD_CALL *onutMultiTexCoord1dvARB)(GLenum target, const GLdouble *v);
    void (ONUT_STD_CALL *onutMultiTexCoord1fARB)(GLenum target, GLfloat s);
    void (ONUT_STD_CALL *onutMultiTexCoord1fvARB)(GLenum target, const GLfloat *v);
    void (ONUT_STD_CALL *onutMultiTexCoord1hNV)(GLenum target, GLhalfNV s);
    void (ONUT_STD_CALL *onutMultiTexCoord1hvNV)(GLenum target, const GLhalfNV *v);
    void (ONUT_STD_CALL *onutMultiTexCoord1iARB)(GLenum target, GLint s);
    void (ONUT_STD_CALL *onutMultiTexCoord1ivARB)(GLenum target, const GLint *v);
    void (ONUT_STD_CALL *onutMultiTexCoord1sARB)(GLenum target, GLshort s);
    void (ONUT_STD_CALL *onutMultiTexCoord1svARB)(GLenum target, const GLshort *v);
    void (ONUT_STD_CALL *onutMultiTexCoord1xOES)(GLenum texture, GLfixed s);
    void (ONUT_STD_CALL *onutMultiTexCoord1xvOES)(GLenum texture, const GLfixed *coords);
    void (ONUT_STD_CALL *onutMultiTexCoord2bOES)(GLenum texture, GLbyte s, GLbyte t);
    void (ONUT_STD_CALL *onutMultiTexCoord2bvOES)(GLenum texture, const GLbyte *coords);
    void (ONUT_STD_CALL *onutMultiTexCoord2dARB)(GLenum target, GLdouble s, GLdouble t);
    void (ONUT_STD_CALL *onutMultiTexCoord2dvARB)(GLenum target, const GLdouble *v);
    void (ONUT_STD_CALL *onutMultiTexCoord2fARB)(GLenum target, GLfloat s, GLfloat t);
    void (ONUT_STD_CALL *onutMultiTexCoord2fvARB)(GLenum target, const GLfloat *v);
    void (ONUT_STD_CALL *onutMultiTexCoord2hNV)(GLenum target, GLhalfNV s, GLhalfNV t);
    void (ONUT_STD_CALL *onutMultiTexCoord2hvNV)(GLenum target, const GLhalfNV *v);
    void (ONUT_STD_CALL *onutMultiTexCoord2iARB)(GLenum target, GLint s, GLint t);
    void (ONUT_STD_CALL *onutMultiTexCoord2ivARB)(GLenum target, const GLint *v);
    void (ONUT_STD_CALL *onutMultiTexCoord2sARB)(GLenum target, GLshort s, GLshort t);
    void (ONUT_STD_CALL *onutMultiTexCoord2svARB)(GLenum target, const GLshort *v);
    void (ONUT_STD_CALL *onutMultiTexCoord2xOES)(GLenum texture, GLfixed s, GLfixed t);
    void (ONUT_STD_CALL *onutMultiTexCoord2xvOES)(GLenum texture, const GLfixed *coords);
    void (ONUT_STD_CALL *onutMultiTexCoord3bOES)(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
    void (ONUT_STD_CALL *onutMultiTexCoord3bvOES)(GLenum texture, const GLbyte *coords);
    void (ONUT_STD_CALL *onutMultiTexCoord3dARB)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
    void (ONUT_STD_CALL *onutMultiTexCoord3dvARB)(GLenum target, const GLdouble *v);
    void (ONUT_STD_CALL *onutMultiTexCoord3fARB)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
    void (ONUT_STD_CALL *onutMultiTexCoord3fvARB)(GLenum target, const GLfloat *v);
    void (ONUT_STD_CALL *onutMultiTexCoord3hNV)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
    void (ONUT_STD_CALL *onutMultiTexCoord3hvNV)(GLenum target, const GLhalfNV *v);
    void (ONUT_STD_CALL *onutMultiTexCoord3iARB)(GLenum target, GLint s, GLint t, GLint r);
    void (ONUT_STD_CALL *onutMultiTexCoord3ivARB)(GLenum target, const GLint *v);
    void (ONUT_STD_CALL *onutMultiTexCoord3sARB)(GLenum target, GLshort s, GLshort t, GLshort r);
    void (ONUT_STD_CALL *onutMultiTexCoord3svARB)(GLenum target, const GLshort *v);
    void (ONUT_STD_CALL *onutMultiTexCoord3xOES)(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
    void (ONUT_STD_CALL *onutMultiTexCoord3xvOES)(GLenum texture, const GLfixed *coords);
    void (ONUT_STD_CALL *onutMultiTexCoord4bOES)(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
    void (ONUT_STD_CALL *onutMultiTexCoord4bvOES)(GLenum texture, const GLbyte *coords);
    void (ONUT_STD_CALL *onutMultiTexCoord4dARB)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
    void (ONUT_STD_CALL *onutMultiTexCoord4dvARB)(GLenum target, const GLdouble *v);
    void (ONUT_STD_CALL *onutMultiTexCoord4fARB)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
    void (ONUT_STD_CALL *onutMultiTexCoord4fvARB)(GLenum target, const GLfloat *v);
    void (ONUT_STD_CALL *onutMultiTexCoord4hNV)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
    void (ONUT_STD_CALL *onutMultiTexCoord4hvNV)(GLenum target, const GLhalfNV *v);
    void (ONUT_STD_CALL *onutMultiTexCoord4iARB)(GLenum target, GLint s, GLint t, GLint r, GLint q);
    void (ONUT_STD_CALL *onutMultiTexCoord4ivARB)(GLenum target, const GLint *v);
    void (ONUT_STD_CALL *onutMultiTexCoord4sARB)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
    void (ONUT_STD_CALL *onutMultiTexCoord4svARB)(GLenum target, const GLshort *v);
    void (ONUT_STD_CALL *onutMultiTexCoord4xOES)(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
    void (ONUT_STD_CALL *onutMultiTexCoord4xvOES)(GLenum texture, const GLfixed *coords);
    void (ONUT_STD_CALL *onutMultiTexCoordPointerEXT)(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutMultiTexEnvfEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutMultiTexEnvfvEXT)(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutMultiTexEnviEXT)(GLenum texunit, GLenum target, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutMultiTexEnvivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutMultiTexGendEXT)(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
    void (ONUT_STD_CALL *onutMultiTexGendvEXT)(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);
    void (ONUT_STD_CALL *onutMultiTexGenfEXT)(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutMultiTexGenfvEXT)(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutMultiTexGeniEXT)(GLenum texunit, GLenum coord, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutMultiTexGenivEXT)(GLenum texunit, GLenum coord, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutMultiTexImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutMultiTexImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutMultiTexImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutMultiTexParameterIivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutMultiTexParameterIuivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLuint *params);
    void (ONUT_STD_CALL *onutMultiTexParameterfEXT)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutMultiTexParameterfvEXT)(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutMultiTexParameteriEXT)(GLenum texunit, GLenum target, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutMultiTexParameterivEXT)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutMultiTexRenderbufferEXT)(GLenum texunit, GLenum target, GLuint renderbuffer);
    void (ONUT_STD_CALL *onutMultiTexSubImage1DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutMultiTexSubImage2DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutMultiTexSubImage3DEXT)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutMulticastBarrierNV)(void);
    void (ONUT_STD_CALL *onutMulticastBlitFramebufferNV)(GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    void (ONUT_STD_CALL *onutMulticastBufferSubDataNV)(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data);
    void (ONUT_STD_CALL *onutMulticastCopyBufferSubDataNV)(GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutMulticastCopyImageSubDataNV)(GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
    void (ONUT_STD_CALL *onutMulticastFramebufferSampleLocationsfvNV)(GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutMulticastGetQueryObjecti64vNV)(GLuint gpu, GLuint id, GLenum pname, GLint64 *params);
    void (ONUT_STD_CALL *onutMulticastGetQueryObjectivNV)(GLuint gpu, GLuint id, GLenum pname, GLint *params);
    void (ONUT_STD_CALL *onutMulticastGetQueryObjectui64vNV)(GLuint gpu, GLuint id, GLenum pname, GLuint64 *params);
    void (ONUT_STD_CALL *onutMulticastGetQueryObjectuivNV)(GLuint gpu, GLuint id, GLenum pname, GLuint *params);
    void (ONUT_STD_CALL *onutMulticastWaitSyncNV)(GLuint signalGpu, GLbitfield waitGpuMask);
    void (ONUT_STD_CALL *onutNamedBufferDataEXT)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
    void (ONUT_STD_CALL *onutNamedBufferPageCommitmentARB)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
    void (ONUT_STD_CALL *onutNamedBufferPageCommitmentEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
    void (ONUT_STD_CALL *onutNamedBufferStorageEXT)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
    void (ONUT_STD_CALL *onutNamedBufferStorageExternalEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
    void (ONUT_STD_CALL *onutNamedBufferStorageMemEXT)(GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset);
    void (ONUT_STD_CALL *onutNamedBufferSubDataEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
    void (ONUT_STD_CALL *onutNamedCopyBufferSubDataEXT)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutNamedFramebufferParameteriEXT)(GLuint framebuffer, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutNamedFramebufferRenderbufferEXT)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    void (ONUT_STD_CALL *onutNamedFramebufferSampleLocationsfvARB)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutNamedFramebufferSampleLocationsfvNV)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutNamedFramebufferSamplePositionsfvAMD)(GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat *values);
    void (ONUT_STD_CALL *onutNamedFramebufferTexture1DEXT)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutNamedFramebufferTexture2DEXT)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutNamedFramebufferTexture3DEXT)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
    void (ONUT_STD_CALL *onutNamedFramebufferTextureEXT)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutNamedFramebufferTextureFaceEXT)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
    void (ONUT_STD_CALL *onutNamedFramebufferTextureLayerEXT)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
    void (ONUT_STD_CALL *onutNamedProgramLocalParameter4dEXT)(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutNamedProgramLocalParameter4dvEXT)(GLuint program, GLenum target, GLuint index, const GLdouble *params);
    void (ONUT_STD_CALL *onutNamedProgramLocalParameter4fEXT)(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (ONUT_STD_CALL *onutNamedProgramLocalParameter4fvEXT)(GLuint program, GLenum target, GLuint index, const GLfloat *params);
    void (ONUT_STD_CALL *onutNamedProgramLocalParameterI4iEXT)(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
    void (ONUT_STD_CALL *onutNamedProgramLocalParameterI4ivEXT)(GLuint program, GLenum target, GLuint index, const GLint *params);
    void (ONUT_STD_CALL *onutNamedProgramLocalParameterI4uiEXT)(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    void (ONUT_STD_CALL *onutNamedProgramLocalParameterI4uivEXT)(GLuint program, GLenum target, GLuint index, const GLuint *params);
    void (ONUT_STD_CALL *onutNamedProgramLocalParameters4fvEXT)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);
    void (ONUT_STD_CALL *onutNamedProgramLocalParametersI4ivEXT)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);
    void (ONUT_STD_CALL *onutNamedProgramLocalParametersI4uivEXT)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);
    void (ONUT_STD_CALL *onutNamedProgramStringEXT)(GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);
    void (ONUT_STD_CALL *onutNamedRenderbufferStorageEXT)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutNamedRenderbufferStorageMultisampleCoverageEXT)(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutNamedRenderbufferStorageMultisampleEXT)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutNamedStringARB)(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);
    GLuint (ONUT_STD_CALL *onutNewBufferRegion)(GLenum region);
    GLuint (ONUT_STD_CALL *onutNewObjectBufferATI)(GLsizei size, const void *pointer, GLenum usage);
    void (ONUT_STD_CALL *onutNormal3fVertex3fSUN)(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutNormal3fVertex3fvSUN)(const GLfloat *n, const GLfloat *v);
    void (ONUT_STD_CALL *onutNormal3hNV)(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
    void (ONUT_STD_CALL *onutNormal3hvNV)(const GLhalfNV *v);
    void (ONUT_STD_CALL *onutNormal3xOES)(GLfixed nx, GLfixed ny, GLfixed nz);
    void (ONUT_STD_CALL *onutNormal3xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutNormalFormatNV)(GLenum type, GLsizei stride);
    void (ONUT_STD_CALL *onutNormalPointerEXT)(GLenum type, GLsizei stride, GLsizei count, const void *pointer);
    void (ONUT_STD_CALL *onutNormalPointerListIBM)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
    void (ONUT_STD_CALL *onutNormalPointervINTEL)(GLenum type, const void **pointer);
    void (ONUT_STD_CALL *onutNormalStream3bATI)(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
    void (ONUT_STD_CALL *onutNormalStream3bvATI)(GLenum stream, const GLbyte *coords);
    void (ONUT_STD_CALL *onutNormalStream3dATI)(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
    void (ONUT_STD_CALL *onutNormalStream3dvATI)(GLenum stream, const GLdouble *coords);
    void (ONUT_STD_CALL *onutNormalStream3fATI)(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
    void (ONUT_STD_CALL *onutNormalStream3fvATI)(GLenum stream, const GLfloat *coords);
    void (ONUT_STD_CALL *onutNormalStream3iATI)(GLenum stream, GLint nx, GLint ny, GLint nz);
    void (ONUT_STD_CALL *onutNormalStream3ivATI)(GLenum stream, const GLint *coords);
    void (ONUT_STD_CALL *onutNormalStream3sATI)(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
    void (ONUT_STD_CALL *onutNormalStream3svATI)(GLenum stream, const GLshort *coords);
    void (ONUT_STD_CALL *onutObjectLabelKHR)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
    void (ONUT_STD_CALL *onutObjectPtrLabelKHR)(const void *ptr, GLsizei length, const GLchar *label);
    GLenum (ONUT_STD_CALL *onutObjectPurgeableAPPLE)(GLenum objectType, GLuint name, GLenum option);
    GLenum (ONUT_STD_CALL *onutObjectUnpurgeableAPPLE)(GLenum objectType, GLuint name, GLenum option);
    void (ONUT_STD_CALL *onutOrthofOES)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
    void (ONUT_STD_CALL *onutOrthoxOES)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
    void (ONUT_STD_CALL *onutPNTrianglesfATI)(GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutPNTrianglesiATI)(GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutPassTexCoordATI)(GLuint dst, GLuint coord, GLenum swizzle);
    void (ONUT_STD_CALL *onutPassThroughxOES)(GLfixed token);
    void (ONUT_STD_CALL *onutPatchParameteriEXT)(GLenum pname, GLint value);
    void (ONUT_STD_CALL *onutPatchParameteriOES)(GLenum pname, GLint value);
    void (ONUT_STD_CALL *onutPathColorGenNV)(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);
    void (ONUT_STD_CALL *onutPathCommandsNV)(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
    void (ONUT_STD_CALL *onutPathCoordsNV)(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);
    void (ONUT_STD_CALL *onutPathCoverDepthFuncNV)(GLenum func);
    void (ONUT_STD_CALL *onutPathDashArrayNV)(GLuint path, GLsizei dashCount, const GLfloat *dashArray);
    void (ONUT_STD_CALL *onutPathFogGenNV)(GLenum genMode);
    GLenum (ONUT_STD_CALL *onutPathGlyphIndexArrayNV)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
    GLenum (ONUT_STD_CALL *onutPathGlyphIndexRangeNV)(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
    void (ONUT_STD_CALL *onutPathGlyphRangeNV)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
    void (ONUT_STD_CALL *onutPathGlyphsNV)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
    GLenum (ONUT_STD_CALL *onutPathMemoryGlyphIndexArrayNV)(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
    void (ONUT_STD_CALL *onutPathParameterfNV)(GLuint path, GLenum pname, GLfloat value);
    void (ONUT_STD_CALL *onutPathParameterfvNV)(GLuint path, GLenum pname, const GLfloat *value);
    void (ONUT_STD_CALL *onutPathParameteriNV)(GLuint path, GLenum pname, GLint value);
    void (ONUT_STD_CALL *onutPathParameterivNV)(GLuint path, GLenum pname, const GLint *value);
    void (ONUT_STD_CALL *onutPathStencilDepthOffsetNV)(GLfloat factor, GLfloat units);
    void (ONUT_STD_CALL *onutPathStencilFuncNV)(GLenum func, GLint ref, GLuint mask);
    void (ONUT_STD_CALL *onutPathStringNV)(GLuint path, GLenum format, GLsizei length, const void *pathString);
    void (ONUT_STD_CALL *onutPathSubCommandsNV)(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
    void (ONUT_STD_CALL *onutPathSubCoordsNV)(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);
    void (ONUT_STD_CALL *onutPathTexGenNV)(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);
    void (ONUT_STD_CALL *onutPauseTransformFeedbackNV)(void);
    void (ONUT_STD_CALL *onutPixelDataRangeNV)(GLenum target, GLsizei length, const void *pointer);
    void (ONUT_STD_CALL *onutPixelMapx)(GLenum map, GLint size, const GLfixed *values);
    void (ONUT_STD_CALL *onutPixelStorex)(GLenum pname, GLfixed param);
    void (ONUT_STD_CALL *onutPixelTexGenParameterfSGIS)(GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutPixelTexGenParameterfvSGIS)(GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutPixelTexGenParameteriSGIS)(GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutPixelTexGenParameterivSGIS)(GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutPixelTexGenSGIX)(GLenum mode);
    void (ONUT_STD_CALL *onutPixelTransferxOES)(GLenum pname, GLfixed param);
    void (ONUT_STD_CALL *onutPixelTransformParameterfEXT)(GLenum target, GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutPixelTransformParameterfvEXT)(GLenum target, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutPixelTransformParameteriEXT)(GLenum target, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutPixelTransformParameterivEXT)(GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutPixelZoomxOES)(GLfixed xfactor, GLfixed yfactor);
    GLboolean (ONUT_STD_CALL *onutPointAlongPathNV)(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);
    void (ONUT_STD_CALL *onutPointParameterfARB)(GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutPointParameterfEXT)(GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutPointParameterfSGIS)(GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutPointParameterfvARB)(GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutPointParameterfvEXT)(GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutPointParameterfvSGIS)(GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutPointParameteriNV)(GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutPointParameterivNV)(GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutPointParameterxvOES)(GLenum pname, const GLfixed *params);
    void (ONUT_STD_CALL *onutPointSizexOES)(GLfixed size);
    GLint (ONUT_STD_CALL *onutPollAsyncSGIX)(GLuint *markerp);
    GLint (ONUT_STD_CALL *onutPollInstrumentsSGIX)(GLint *marker_p);
    void (ONUT_STD_CALL *onutPolygonModeNV)(GLenum face, GLenum mode);
    void (ONUT_STD_CALL *onutPolygonOffsetClampEXT)(GLfloat factor, GLfloat units, GLfloat clamp);
    void (ONUT_STD_CALL *onutPolygonOffsetEXT)(GLfloat factor, GLfloat bias);
    void (ONUT_STD_CALL *onutPolygonOffsetxOES)(GLfixed factor, GLfixed units);
    void (ONUT_STD_CALL *onutPopDebugGroupKHR)(void);
    void (ONUT_STD_CALL *onutPopGroupMarkerEXT)(void);
    void (ONUT_STD_CALL *onutPresentFrameDualFillNV)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
    void (ONUT_STD_CALL *onutPresentFrameKeyedNV)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
    void (ONUT_STD_CALL *onutPrimitiveBoundingBoxARB)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
    void (ONUT_STD_CALL *onutPrimitiveBoundingBoxEXT)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
    void (ONUT_STD_CALL *onutPrimitiveBoundingBoxOES)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
    void (ONUT_STD_CALL *onutPrimitiveRestartIndexNV)(GLuint index);
    void (ONUT_STD_CALL *onutPrimitiveRestartNV)(void);
    void (ONUT_STD_CALL *onutPrioritizeTexturesEXT)(GLsizei n, const GLuint *textures, const GLclampf *priorities);
    void (ONUT_STD_CALL *onutPrioritizeTexturesxOES)(GLsizei n, const GLuint *textures, const GLfixed *priorities);
    void (ONUT_STD_CALL *onutProgramBinaryOES)(GLuint program, GLenum binaryFormat, const void *binary, GLint length);
    void (ONUT_STD_CALL *onutProgramBufferParametersIivNV)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params);
    void (ONUT_STD_CALL *onutProgramBufferParametersIuivNV)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params);
    void (ONUT_STD_CALL *onutProgramBufferParametersfvNV)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params);
    void (ONUT_STD_CALL *onutProgramEnvParameter4dARB)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutProgramEnvParameter4dvARB)(GLenum target, GLuint index, const GLdouble *params);
    void (ONUT_STD_CALL *onutProgramEnvParameter4fARB)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (ONUT_STD_CALL *onutProgramEnvParameter4fvARB)(GLenum target, GLuint index, const GLfloat *params);
    void (ONUT_STD_CALL *onutProgramEnvParameterI4iNV)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
    void (ONUT_STD_CALL *onutProgramEnvParameterI4ivNV)(GLenum target, GLuint index, const GLint *params);
    void (ONUT_STD_CALL *onutProgramEnvParameterI4uiNV)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    void (ONUT_STD_CALL *onutProgramEnvParameterI4uivNV)(GLenum target, GLuint index, const GLuint *params);
    void (ONUT_STD_CALL *onutProgramEnvParameters4fvEXT)(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
    void (ONUT_STD_CALL *onutProgramEnvParametersI4ivNV)(GLenum target, GLuint index, GLsizei count, const GLint *params);
    void (ONUT_STD_CALL *onutProgramEnvParametersI4uivNV)(GLenum target, GLuint index, GLsizei count, const GLuint *params);
    void (ONUT_STD_CALL *onutProgramLocalParameter4dARB)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutProgramLocalParameter4dvARB)(GLenum target, GLuint index, const GLdouble *params);
    void (ONUT_STD_CALL *onutProgramLocalParameter4fARB)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (ONUT_STD_CALL *onutProgramLocalParameter4fvARB)(GLenum target, GLuint index, const GLfloat *params);
    void (ONUT_STD_CALL *onutProgramLocalParameterI4iNV)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
    void (ONUT_STD_CALL *onutProgramLocalParameterI4ivNV)(GLenum target, GLuint index, const GLint *params);
    void (ONUT_STD_CALL *onutProgramLocalParameterI4uiNV)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    void (ONUT_STD_CALL *onutProgramLocalParameterI4uivNV)(GLenum target, GLuint index, const GLuint *params);
    void (ONUT_STD_CALL *onutProgramLocalParameters4fvEXT)(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
    void (ONUT_STD_CALL *onutProgramLocalParametersI4ivNV)(GLenum target, GLuint index, GLsizei count, const GLint *params);
    void (ONUT_STD_CALL *onutProgramLocalParametersI4uivNV)(GLenum target, GLuint index, GLsizei count, const GLuint *params);
    void (ONUT_STD_CALL *onutProgramNamedParameter4dNV)(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutProgramNamedParameter4dvNV)(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
    void (ONUT_STD_CALL *onutProgramNamedParameter4fNV)(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (ONUT_STD_CALL *onutProgramNamedParameter4fvNV)(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
    void (ONUT_STD_CALL *onutProgramParameter4dNV)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutProgramParameter4dvNV)(GLenum target, GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutProgramParameter4fNV)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (ONUT_STD_CALL *onutProgramParameter4fvNV)(GLenum target, GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutProgramParameteriARB)(GLuint program, GLenum pname, GLint value);
    void (ONUT_STD_CALL *onutProgramParameteriEXT)(GLuint program, GLenum pname, GLint value);
    void (ONUT_STD_CALL *onutProgramParameters4dvNV)(GLenum target, GLuint index, GLsizei count, const GLdouble *v);
    void (ONUT_STD_CALL *onutProgramParameters4fvNV)(GLenum target, GLuint index, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutProgramPathFragmentInputGenNV)(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
    void (ONUT_STD_CALL *onutProgramStringARB)(GLenum target, GLenum format, GLsizei len, const void *string);
    void (ONUT_STD_CALL *onutProgramSubroutineParametersuivNV)(GLenum target, GLsizei count, const GLuint *params);
    void (ONUT_STD_CALL *onutProgramUniform1dEXT)(GLuint program, GLint location, GLdouble x);
    void (ONUT_STD_CALL *onutProgramUniform1dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniform1fEXT)(GLuint program, GLint location, GLfloat v0);
    void (ONUT_STD_CALL *onutProgramUniform1fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniform1i64ARB)(GLuint program, GLint location, GLint64 x);
    void (ONUT_STD_CALL *onutProgramUniform1i64NV)(GLuint program, GLint location, GLint64EXT x);
    void (ONUT_STD_CALL *onutProgramUniform1i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
    void (ONUT_STD_CALL *onutProgramUniform1i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
    void (ONUT_STD_CALL *onutProgramUniform1iEXT)(GLuint program, GLint location, GLint v0);
    void (ONUT_STD_CALL *onutProgramUniform1ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutProgramUniform1ui64ARB)(GLuint program, GLint location, GLuint64 x);
    void (ONUT_STD_CALL *onutProgramUniform1ui64NV)(GLuint program, GLint location, GLuint64EXT x);
    void (ONUT_STD_CALL *onutProgramUniform1ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
    void (ONUT_STD_CALL *onutProgramUniform1ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
    void (ONUT_STD_CALL *onutProgramUniform1uiEXT)(GLuint program, GLint location, GLuint v0);
    void (ONUT_STD_CALL *onutProgramUniform1uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutProgramUniform2dEXT)(GLuint program, GLint location, GLdouble x, GLdouble y);
    void (ONUT_STD_CALL *onutProgramUniform2dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniform2fEXT)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
    void (ONUT_STD_CALL *onutProgramUniform2fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniform2i64ARB)(GLuint program, GLint location, GLint64 x, GLint64 y);
    void (ONUT_STD_CALL *onutProgramUniform2i64NV)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
    void (ONUT_STD_CALL *onutProgramUniform2i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
    void (ONUT_STD_CALL *onutProgramUniform2i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
    void (ONUT_STD_CALL *onutProgramUniform2iEXT)(GLuint program, GLint location, GLint v0, GLint v1);
    void (ONUT_STD_CALL *onutProgramUniform2ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutProgramUniform2ui64ARB)(GLuint program, GLint location, GLuint64 x, GLuint64 y);
    void (ONUT_STD_CALL *onutProgramUniform2ui64NV)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
    void (ONUT_STD_CALL *onutProgramUniform2ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
    void (ONUT_STD_CALL *onutProgramUniform2ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
    void (ONUT_STD_CALL *onutProgramUniform2uiEXT)(GLuint program, GLint location, GLuint v0, GLuint v1);
    void (ONUT_STD_CALL *onutProgramUniform2uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutProgramUniform3dEXT)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutProgramUniform3dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniform3fEXT)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    void (ONUT_STD_CALL *onutProgramUniform3fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniform3i64ARB)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
    void (ONUT_STD_CALL *onutProgramUniform3i64NV)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
    void (ONUT_STD_CALL *onutProgramUniform3i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
    void (ONUT_STD_CALL *onutProgramUniform3i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
    void (ONUT_STD_CALL *onutProgramUniform3iEXT)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
    void (ONUT_STD_CALL *onutProgramUniform3ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutProgramUniform3ui64ARB)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
    void (ONUT_STD_CALL *onutProgramUniform3ui64NV)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
    void (ONUT_STD_CALL *onutProgramUniform3ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
    void (ONUT_STD_CALL *onutProgramUniform3ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
    void (ONUT_STD_CALL *onutProgramUniform3uiEXT)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
    void (ONUT_STD_CALL *onutProgramUniform3uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutProgramUniform4dEXT)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutProgramUniform4dvEXT)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniform4fEXT)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    void (ONUT_STD_CALL *onutProgramUniform4fvEXT)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniform4i64ARB)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
    void (ONUT_STD_CALL *onutProgramUniform4i64NV)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
    void (ONUT_STD_CALL *onutProgramUniform4i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
    void (ONUT_STD_CALL *onutProgramUniform4i64vNV)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
    void (ONUT_STD_CALL *onutProgramUniform4iEXT)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    void (ONUT_STD_CALL *onutProgramUniform4ivEXT)(GLuint program, GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutProgramUniform4ui64ARB)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
    void (ONUT_STD_CALL *onutProgramUniform4ui64NV)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
    void (ONUT_STD_CALL *onutProgramUniform4ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
    void (ONUT_STD_CALL *onutProgramUniform4ui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
    void (ONUT_STD_CALL *onutProgramUniform4uiEXT)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    void (ONUT_STD_CALL *onutProgramUniform4uivEXT)(GLuint program, GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutProgramUniformHandleui64ARB)(GLuint program, GLint location, GLuint64 value);
    void (ONUT_STD_CALL *onutProgramUniformHandleui64IMG)(GLuint program, GLint location, GLuint64 value);
    void (ONUT_STD_CALL *onutProgramUniformHandleui64NV)(GLuint program, GLint location, GLuint64 value);
    void (ONUT_STD_CALL *onutProgramUniformHandleui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
    void (ONUT_STD_CALL *onutProgramUniformHandleui64vIMG)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
    void (ONUT_STD_CALL *onutProgramUniformHandleui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
    void (ONUT_STD_CALL *onutProgramUniformMatrix2dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix2fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix2x3dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix2x3fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix2x4dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix2x4fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix3dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix3fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix3x2dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix3x2fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix3x4dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix3x4fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix4dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix4fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix4x2dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix4x2fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix4x3dvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    void (ONUT_STD_CALL *onutProgramUniformMatrix4x3fvEXT)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutProgramUniformui64NV)(GLuint program, GLint location, GLuint64EXT value);
    void (ONUT_STD_CALL *onutProgramUniformui64vNV)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
    void (ONUT_STD_CALL *onutProgramVertexLimitNV)(GLenum target, GLint limit);
    void (ONUT_STD_CALL *onutProvokingVertexEXT)(GLenum mode);
    void (ONUT_STD_CALL *onutPushClientAttribDefaultEXT)(GLbitfield mask);
    void (ONUT_STD_CALL *onutPushDebugGroupKHR)(GLenum source, GLuint id, GLsizei length, const GLchar *message);
    void (ONUT_STD_CALL *onutPushGroupMarkerEXT)(GLsizei length, const GLchar *marker);
    void (ONUT_STD_CALL *onutQueryCounterEXT)(GLuint id, GLenum target);
    GLbitfield (ONUT_STD_CALL *onutQueryMatrixxOES)(GLfixed *mantissa, GLint *exponent);
    void (ONUT_STD_CALL *onutQueryObjectParameteruiAMD)(GLenum target, GLuint id, GLenum pname, GLuint param);
    void (ONUT_STD_CALL *onutRasterPos2xOES)(GLfixed x, GLfixed y);
    void (ONUT_STD_CALL *onutRasterPos2xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutRasterPos3xOES)(GLfixed x, GLfixed y, GLfixed z);
    void (ONUT_STD_CALL *onutRasterPos3xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutRasterPos4xOES)(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
    void (ONUT_STD_CALL *onutRasterPos4xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutRasterSamplesEXT)(GLuint samples, GLboolean fixedsamplelocations);
    void (ONUT_STD_CALL *onutReadBufferIndexedEXT)(GLenum src, GLint index);
    void (ONUT_STD_CALL *onutReadBufferNV)(GLenum mode);
    void (ONUT_STD_CALL *onutReadBufferRegion)(GLuint region, GLint x, GLint y, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutReadInstrumentsSGIX)(GLint marker);
    void (ONUT_STD_CALL *onutReadnPixelsARB)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
    void (ONUT_STD_CALL *onutReadnPixelsEXT)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
    void (ONUT_STD_CALL *onutReadnPixelsKHR)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
    void (ONUT_STD_CALL *onutRectxOES)(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
    void (ONUT_STD_CALL *onutRectxvOES)(const GLfixed *v1, const GLfixed *v2);
    void (ONUT_STD_CALL *onutReferencePlaneSGIX)(const GLdouble *equation);
    GLboolean (ONUT_STD_CALL *onutReleaseKeyedMutexWin32EXT)(GLuint memory, GLuint64 key);
    void (ONUT_STD_CALL *onutRenderGpuMaskNV)(GLbitfield mask);
    void (ONUT_STD_CALL *onutRenderbufferStorageEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutRenderbufferStorageMultisampleANGLE)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutRenderbufferStorageMultisampleAPPLE)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutRenderbufferStorageMultisampleCoverageNV)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutRenderbufferStorageMultisampleEXT)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutRenderbufferStorageMultisampleIMG)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutRenderbufferStorageMultisampleNV)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutReplacementCodePointerSUN)(GLenum type, GLsizei stride, const void **pointer);
    void (ONUT_STD_CALL *onutReplacementCodeubSUN)(GLubyte code);
    void (ONUT_STD_CALL *onutReplacementCodeubvSUN)(const GLubyte *code);
    void (ONUT_STD_CALL *onutReplacementCodeuiColor3fVertex3fSUN)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutReplacementCodeuiColor3fVertex3fvSUN)(const GLuint *rc, const GLfloat *c, const GLfloat *v);
    void (ONUT_STD_CALL *onutReplacementCodeuiColor4fNormal3fVertex3fSUN)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutReplacementCodeuiColor4fNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
    void (ONUT_STD_CALL *onutReplacementCodeuiColor4ubVertex3fSUN)(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutReplacementCodeuiColor4ubVertex3fvSUN)(const GLuint *rc, const GLubyte *c, const GLfloat *v);
    void (ONUT_STD_CALL *onutReplacementCodeuiNormal3fVertex3fSUN)(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutReplacementCodeuiNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *n, const GLfloat *v);
    void (ONUT_STD_CALL *onutReplacementCodeuiSUN)(GLuint code);
    void (ONUT_STD_CALL *onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
    void (ONUT_STD_CALL *onutReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);
    void (ONUT_STD_CALL *onutReplacementCodeuiTexCoord2fVertex3fSUN)(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutReplacementCodeuiTexCoord2fVertex3fvSUN)(const GLuint *rc, const GLfloat *tc, const GLfloat *v);
    void (ONUT_STD_CALL *onutReplacementCodeuiVertex3fSUN)(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutReplacementCodeuiVertex3fvSUN)(const GLuint *rc, const GLfloat *v);
    void (ONUT_STD_CALL *onutReplacementCodeuivSUN)(const GLuint *code);
    void (ONUT_STD_CALL *onutReplacementCodeusSUN)(GLushort code);
    void (ONUT_STD_CALL *onutReplacementCodeusvSUN)(const GLushort *code);
    void (ONUT_STD_CALL *onutRequestResidentProgramsNV)(GLsizei n, const GLuint *programs);
    void (ONUT_STD_CALL *onutResetHistogram)(GLenum target);
    void (ONUT_STD_CALL *onutResetHistogramEXT)(GLenum target);
    void (ONUT_STD_CALL *onutResetMinmax)(GLenum target);
    void (ONUT_STD_CALL *onutResetMinmaxEXT)(GLenum target);
    void (ONUT_STD_CALL *onutResizeBuffersMESA)(void);
    void (ONUT_STD_CALL *onutResolveDepthValuesNV)(void);
    void (ONUT_STD_CALL *onutResolveMultisampleFramebufferAPPLE)(void);
    void (ONUT_STD_CALL *onutResumeTransformFeedbackNV)(void);
    void (ONUT_STD_CALL *onutRotatexOES)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
    void (ONUT_STD_CALL *onutSampleCoverageARB)(GLfloat value, GLboolean invert);
    void (ONUT_STD_CALL *onutSampleMapATI)(GLuint dst, GLuint interp, GLenum swizzle);
    void (ONUT_STD_CALL *onutSampleMaskEXT)(GLclampf value, GLboolean invert);
    void (ONUT_STD_CALL *onutSampleMaskIndexedNV)(GLuint index, GLbitfield mask);
    void (ONUT_STD_CALL *onutSampleMaskSGIS)(GLclampf value, GLboolean invert);
    void (ONUT_STD_CALL *onutSamplePatternEXT)(GLenum pattern);
    void (ONUT_STD_CALL *onutSamplePatternSGIS)(GLenum pattern);
    void (ONUT_STD_CALL *onutSamplerParameterIivEXT)(GLuint sampler, GLenum pname, const GLint *param);
    void (ONUT_STD_CALL *onutSamplerParameterIivOES)(GLuint sampler, GLenum pname, const GLint *param);
    void (ONUT_STD_CALL *onutSamplerParameterIuivEXT)(GLuint sampler, GLenum pname, const GLuint *param);
    void (ONUT_STD_CALL *onutSamplerParameterIuivOES)(GLuint sampler, GLenum pname, const GLuint *param);
    void (ONUT_STD_CALL *onutScalexOES)(GLfixed x, GLfixed y, GLfixed z);
    void (ONUT_STD_CALL *onutScissorArrayvNV)(GLuint first, GLsizei count, const GLint *v);
    void (ONUT_STD_CALL *onutScissorArrayvOES)(GLuint first, GLsizei count, const GLint *v);
    void (ONUT_STD_CALL *onutScissorIndexedNV)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutScissorIndexedOES)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutScissorIndexedvNV)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutScissorIndexedvOES)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutSecondaryColor3bEXT)(GLbyte red, GLbyte green, GLbyte blue);
    void (ONUT_STD_CALL *onutSecondaryColor3bvEXT)(const GLbyte *v);
    void (ONUT_STD_CALL *onutSecondaryColor3dEXT)(GLdouble red, GLdouble green, GLdouble blue);
    void (ONUT_STD_CALL *onutSecondaryColor3dvEXT)(const GLdouble *v);
    void (ONUT_STD_CALL *onutSecondaryColor3fEXT)(GLfloat red, GLfloat green, GLfloat blue);
    void (ONUT_STD_CALL *onutSecondaryColor3fvEXT)(const GLfloat *v);
    void (ONUT_STD_CALL *onutSecondaryColor3hNV)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
    void (ONUT_STD_CALL *onutSecondaryColor3hvNV)(const GLhalfNV *v);
    void (ONUT_STD_CALL *onutSecondaryColor3iEXT)(GLint red, GLint green, GLint blue);
    void (ONUT_STD_CALL *onutSecondaryColor3ivEXT)(const GLint *v);
    void (ONUT_STD_CALL *onutSecondaryColor3sEXT)(GLshort red, GLshort green, GLshort blue);
    void (ONUT_STD_CALL *onutSecondaryColor3svEXT)(const GLshort *v);
    void (ONUT_STD_CALL *onutSecondaryColor3ubEXT)(GLubyte red, GLubyte green, GLubyte blue);
    void (ONUT_STD_CALL *onutSecondaryColor3ubvEXT)(const GLubyte *v);
    void (ONUT_STD_CALL *onutSecondaryColor3uiEXT)(GLuint red, GLuint green, GLuint blue);
    void (ONUT_STD_CALL *onutSecondaryColor3uivEXT)(const GLuint *v);
    void (ONUT_STD_CALL *onutSecondaryColor3usEXT)(GLushort red, GLushort green, GLushort blue);
    void (ONUT_STD_CALL *onutSecondaryColor3usvEXT)(const GLushort *v);
    void (ONUT_STD_CALL *onutSecondaryColorFormatNV)(GLint size, GLenum type, GLsizei stride);
    void (ONUT_STD_CALL *onutSecondaryColorPointerEXT)(GLint size, GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutSecondaryColorPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
    void (ONUT_STD_CALL *onutSelectPerfMonitorCountersAMD)(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
    void (ONUT_STD_CALL *onutSemaphoreParameterui64vEXT)(GLuint semaphore, GLenum pname, const GLuint64 *params);
    void (ONUT_STD_CALL *onutSeparableFilter2D)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
    void (ONUT_STD_CALL *onutSeparableFilter2DEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
    void (ONUT_STD_CALL *onutSetFenceAPPLE)(GLuint fence);
    void (ONUT_STD_CALL *onutSetFenceNV)(GLuint fence, GLenum condition);
    void (ONUT_STD_CALL *onutSetFragmentShaderConstantATI)(GLuint dst, const GLfloat *value);
    void (ONUT_STD_CALL *onutSetInvariantEXT)(GLuint id, GLenum type, const void *addr);
    void (ONUT_STD_CALL *onutSetLocalConstantEXT)(GLuint id, GLenum type, const void *addr);
    void (ONUT_STD_CALL *onutSetMultisamplefvAMD)(GLenum pname, GLuint index, const GLfloat *val);
    void (ONUT_STD_CALL *onutShaderOp1EXT)(GLenum op, GLuint res, GLuint arg1);
    void (ONUT_STD_CALL *onutShaderOp2EXT)(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
    void (ONUT_STD_CALL *onutShaderOp3EXT)(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
    void (ONUT_STD_CALL *onutShaderSourceARB)(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);
    void (ONUT_STD_CALL *onutSharpenTexFuncSGIS)(GLenum target, GLsizei n, const GLfloat *points);
    void (ONUT_STD_CALL *onutSignalSemaphoreEXT)(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts);
    void (ONUT_STD_CALL *onutSignalVkFenceNV)(GLuint64 vkFence);
    void (ONUT_STD_CALL *onutSignalVkSemaphoreNV)(GLuint64 vkSemaphore);
    void (ONUT_STD_CALL *onutSpecializeShaderARB)(GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);
    void (ONUT_STD_CALL *onutSpriteParameterfSGIX)(GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutSpriteParameterfvSGIX)(GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutSpriteParameteriSGIX)(GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutSpriteParameterivSGIX)(GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutStartInstrumentsSGIX)(void);
    void (ONUT_STD_CALL *onutStartTilingQCOM)(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
    void (ONUT_STD_CALL *onutStateCaptureNV)(GLuint state, GLenum mode);
    void (ONUT_STD_CALL *onutStencilClearTagEXT)(GLsizei stencilTagBits, GLuint stencilClearTag);
    void (ONUT_STD_CALL *onutStencilFillPathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);
    void (ONUT_STD_CALL *onutStencilFillPathNV)(GLuint path, GLenum fillMode, GLuint mask);
    void (ONUT_STD_CALL *onutStencilFuncSeparateATI)(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
    void (ONUT_STD_CALL *onutStencilOpSeparateATI)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
    void (ONUT_STD_CALL *onutStencilOpValueAMD)(GLenum face, GLuint value);
    void (ONUT_STD_CALL *onutStencilStrokePathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);
    void (ONUT_STD_CALL *onutStencilStrokePathNV)(GLuint path, GLint reference, GLuint mask);
    void (ONUT_STD_CALL *onutStencilThenCoverFillPathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
    void (ONUT_STD_CALL *onutStencilThenCoverFillPathNV)(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
    void (ONUT_STD_CALL *onutStencilThenCoverStrokePathInstancedNV)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
    void (ONUT_STD_CALL *onutStencilThenCoverStrokePathNV)(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
    void (ONUT_STD_CALL *onutStopInstrumentsSGIX)(GLint marker);
    void (ONUT_STD_CALL *onutStringMarkerGREMEDY)(GLsizei len, const void *string);
    void (ONUT_STD_CALL *onutSubpixelPrecisionBiasNV)(GLuint xbits, GLuint ybits);
    void (ONUT_STD_CALL *onutSwizzleEXT)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
    void (ONUT_STD_CALL *onutSyncTextureINTEL)(GLuint texture);
    void (ONUT_STD_CALL *onutTagSampleBufferSGIX)(void);
    void (ONUT_STD_CALL *onutTangent3bEXT)(GLbyte tx, GLbyte ty, GLbyte tz);
    void (ONUT_STD_CALL *onutTangent3bvEXT)(const GLbyte *v);
    void (ONUT_STD_CALL *onutTangent3dEXT)(GLdouble tx, GLdouble ty, GLdouble tz);
    void (ONUT_STD_CALL *onutTangent3dvEXT)(const GLdouble *v);
    void (ONUT_STD_CALL *onutTangent3fEXT)(GLfloat tx, GLfloat ty, GLfloat tz);
    void (ONUT_STD_CALL *onutTangent3fvEXT)(const GLfloat *v);
    void (ONUT_STD_CALL *onutTangent3iEXT)(GLint tx, GLint ty, GLint tz);
    void (ONUT_STD_CALL *onutTangent3ivEXT)(const GLint *v);
    void (ONUT_STD_CALL *onutTangent3sEXT)(GLshort tx, GLshort ty, GLshort tz);
    void (ONUT_STD_CALL *onutTangent3svEXT)(const GLshort *v);
    void (ONUT_STD_CALL *onutTangentPointerEXT)(GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutTbufferMask3DFX)(GLuint mask);
    void (ONUT_STD_CALL *onutTessellationFactorAMD)(GLfloat factor);
    void (ONUT_STD_CALL *onutTessellationModeAMD)(GLenum mode);
    GLboolean (ONUT_STD_CALL *onutTestFenceAPPLE)(GLuint fence);
    GLboolean (ONUT_STD_CALL *onutTestFenceNV)(GLuint fence);
    GLboolean (ONUT_STD_CALL *onutTestObjectAPPLE)(GLenum object, GLuint name);
    void (ONUT_STD_CALL *onutTexBufferARB)(GLenum target, GLenum internalformat, GLuint buffer);
    void (ONUT_STD_CALL *onutTexBufferEXT)(GLenum target, GLenum internalformat, GLuint buffer);
    void (ONUT_STD_CALL *onutTexBufferOES)(GLenum target, GLenum internalformat, GLuint buffer);
    void (ONUT_STD_CALL *onutTexBufferRangeEXT)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutTexBufferRangeOES)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutTexBumpParameterfvATI)(GLenum pname, const GLfloat *param);
    void (ONUT_STD_CALL *onutTexBumpParameterivATI)(GLenum pname, const GLint *param);
    void (ONUT_STD_CALL *onutTexCoord1bOES)(GLbyte s);
    void (ONUT_STD_CALL *onutTexCoord1bvOES)(const GLbyte *coords);
    void (ONUT_STD_CALL *onutTexCoord1hNV)(GLhalfNV s);
    void (ONUT_STD_CALL *onutTexCoord1hvNV)(const GLhalfNV *v);
    void (ONUT_STD_CALL *onutTexCoord1xOES)(GLfixed s);
    void (ONUT_STD_CALL *onutTexCoord1xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutTexCoord2bOES)(GLbyte s, GLbyte t);
    void (ONUT_STD_CALL *onutTexCoord2bvOES)(const GLbyte *coords);
    void (ONUT_STD_CALL *onutTexCoord2fColor3fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutTexCoord2fColor3fVertex3fvSUN)(const GLfloat *tc, const GLfloat *c, const GLfloat *v);
    void (ONUT_STD_CALL *onutTexCoord2fColor4fNormal3fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutTexCoord2fColor4fNormal3fVertex3fvSUN)(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
    void (ONUT_STD_CALL *onutTexCoord2fColor4ubVertex3fSUN)(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutTexCoord2fColor4ubVertex3fvSUN)(const GLfloat *tc, const GLubyte *c, const GLfloat *v);
    void (ONUT_STD_CALL *onutTexCoord2fNormal3fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutTexCoord2fNormal3fVertex3fvSUN)(const GLfloat *tc, const GLfloat *n, const GLfloat *v);
    void (ONUT_STD_CALL *onutTexCoord2fVertex3fSUN)(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutTexCoord2fVertex3fvSUN)(const GLfloat *tc, const GLfloat *v);
    void (ONUT_STD_CALL *onutTexCoord2hNV)(GLhalfNV s, GLhalfNV t);
    void (ONUT_STD_CALL *onutTexCoord2hvNV)(const GLhalfNV *v);
    void (ONUT_STD_CALL *onutTexCoord2xOES)(GLfixed s, GLfixed t);
    void (ONUT_STD_CALL *onutTexCoord2xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutTexCoord3bOES)(GLbyte s, GLbyte t, GLbyte r);
    void (ONUT_STD_CALL *onutTexCoord3bvOES)(const GLbyte *coords);
    void (ONUT_STD_CALL *onutTexCoord3hNV)(GLhalfNV s, GLhalfNV t, GLhalfNV r);
    void (ONUT_STD_CALL *onutTexCoord3hvNV)(const GLhalfNV *v);
    void (ONUT_STD_CALL *onutTexCoord3xOES)(GLfixed s, GLfixed t, GLfixed r);
    void (ONUT_STD_CALL *onutTexCoord3xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutTexCoord4bOES)(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
    void (ONUT_STD_CALL *onutTexCoord4bvOES)(const GLbyte *coords);
    void (ONUT_STD_CALL *onutTexCoord4fColor4fNormal3fVertex4fSUN)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (ONUT_STD_CALL *onutTexCoord4fColor4fNormal3fVertex4fvSUN)(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
    void (ONUT_STD_CALL *onutTexCoord4fVertex4fSUN)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (ONUT_STD_CALL *onutTexCoord4fVertex4fvSUN)(const GLfloat *tc, const GLfloat *v);
    void (ONUT_STD_CALL *onutTexCoord4hNV)(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
    void (ONUT_STD_CALL *onutTexCoord4hvNV)(const GLhalfNV *v);
    void (ONUT_STD_CALL *onutTexCoord4xOES)(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
    void (ONUT_STD_CALL *onutTexCoord4xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutTexCoordFormatNV)(GLint size, GLenum type, GLsizei stride);
    void (ONUT_STD_CALL *onutTexCoordPointerEXT)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
    void (ONUT_STD_CALL *onutTexCoordPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
    void (ONUT_STD_CALL *onutTexCoordPointervINTEL)(GLint size, GLenum type, const void **pointer);
    void (ONUT_STD_CALL *onutTexEnvxOES)(GLenum target, GLenum pname, GLfixed param);
    void (ONUT_STD_CALL *onutTexEnvxvOES)(GLenum target, GLenum pname, const GLfixed *params);
    void (ONUT_STD_CALL *onutTexFilterFuncSGIS)(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);
    void (ONUT_STD_CALL *onutTexGenxOES)(GLenum coord, GLenum pname, GLfixed param);
    void (ONUT_STD_CALL *onutTexGenxvOES)(GLenum coord, GLenum pname, const GLfixed *params);
    void (ONUT_STD_CALL *onutTexImage2DMultisampleCoverageNV)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
    void (ONUT_STD_CALL *onutTexImage3DEXT)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTexImage3DMultisampleCoverageNV)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
    void (ONUT_STD_CALL *onutTexImage3DOES)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTexImage4DSGIS)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTexPageCommitmentARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
    void (ONUT_STD_CALL *onutTexPageCommitmentEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
    void (ONUT_STD_CALL *onutTexParameterIivEXT)(GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutTexParameterIivOES)(GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutTexParameterIuivEXT)(GLenum target, GLenum pname, const GLuint *params);
    void (ONUT_STD_CALL *onutTexParameterIuivOES)(GLenum target, GLenum pname, const GLuint *params);
    void (ONUT_STD_CALL *onutTexParameterxOES)(GLenum target, GLenum pname, GLfixed param);
    void (ONUT_STD_CALL *onutTexParameterxvOES)(GLenum target, GLenum pname, const GLfixed *params);
    void (ONUT_STD_CALL *onutTexRenderbufferNV)(GLenum target, GLuint renderbuffer);
    void (ONUT_STD_CALL *onutTexStorage1DEXT)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
    void (ONUT_STD_CALL *onutTexStorage2DEXT)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutTexStorage3DEXT)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    void (ONUT_STD_CALL *onutTexStorage3DMultisampleOES)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    void (ONUT_STD_CALL *onutTexStorageMem1DEXT)(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
    void (ONUT_STD_CALL *onutTexStorageMem2DEXT)(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
    void (ONUT_STD_CALL *onutTexStorageMem2DMultisampleEXT)(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
    void (ONUT_STD_CALL *onutTexStorageMem3DEXT)(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
    void (ONUT_STD_CALL *onutTexStorageMem3DMultisampleEXT)(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
    void (ONUT_STD_CALL *onutTexStorageSparseAMD)(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
    void (ONUT_STD_CALL *onutTexSubImage1DEXT)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTexSubImage2DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTexSubImage3DEXT)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTexSubImage3DOES)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTexSubImage4DSGIS)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTextureBarrierNV)(void);
    void (ONUT_STD_CALL *onutTextureBufferEXT)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
    void (ONUT_STD_CALL *onutTextureBufferRangeEXT)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    void (ONUT_STD_CALL *onutTextureColorMaskSGIS)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
    void (ONUT_STD_CALL *onutTextureImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTextureImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTextureImage2DMultisampleCoverageNV)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
    void (ONUT_STD_CALL *onutTextureImage2DMultisampleNV)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
    void (ONUT_STD_CALL *onutTextureImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTextureImage3DMultisampleCoverageNV)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
    void (ONUT_STD_CALL *onutTextureImage3DMultisampleNV)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
    void (ONUT_STD_CALL *onutTextureLightEXT)(GLenum pname);
    void (ONUT_STD_CALL *onutTextureMaterialEXT)(GLenum face, GLenum mode);
    void (ONUT_STD_CALL *onutTextureNormalEXT)(GLenum mode);
    void (ONUT_STD_CALL *onutTexturePageCommitmentEXT)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
    void (ONUT_STD_CALL *onutTextureParameterIivEXT)(GLuint texture, GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutTextureParameterIuivEXT)(GLuint texture, GLenum target, GLenum pname, const GLuint *params);
    void (ONUT_STD_CALL *onutTextureParameterfEXT)(GLuint texture, GLenum target, GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutTextureParameterfvEXT)(GLuint texture, GLenum target, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutTextureParameteriEXT)(GLuint texture, GLenum target, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutTextureParameterivEXT)(GLuint texture, GLenum target, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutTextureRangeAPPLE)(GLenum target, GLsizei length, const void *pointer);
    void (ONUT_STD_CALL *onutTextureRenderbufferEXT)(GLuint texture, GLenum target, GLuint renderbuffer);
    void (ONUT_STD_CALL *onutTextureStorage1DEXT)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
    void (ONUT_STD_CALL *onutTextureStorage2DEXT)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    void (ONUT_STD_CALL *onutTextureStorage2DMultisampleEXT)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    void (ONUT_STD_CALL *onutTextureStorage3DEXT)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    void (ONUT_STD_CALL *onutTextureStorage3DMultisampleEXT)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    void (ONUT_STD_CALL *onutTextureStorageMem1DEXT)(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
    void (ONUT_STD_CALL *onutTextureStorageMem2DEXT)(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
    void (ONUT_STD_CALL *onutTextureStorageMem2DMultisampleEXT)(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
    void (ONUT_STD_CALL *onutTextureStorageMem3DEXT)(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
    void (ONUT_STD_CALL *onutTextureStorageMem3DMultisampleEXT)(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
    void (ONUT_STD_CALL *onutTextureStorageSparseAMD)(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
    void (ONUT_STD_CALL *onutTextureSubImage1DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTextureSubImage2DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTextureSubImage3DEXT)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
    void (ONUT_STD_CALL *onutTextureViewEXT)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
    void (ONUT_STD_CALL *onutTextureViewOES)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
    void (ONUT_STD_CALL *onutTrackMatrixNV)(GLenum target, GLuint address, GLenum matrix, GLenum transform);
    void (ONUT_STD_CALL *onutTransformFeedbackAttribsNV)(GLsizei count, const GLint *attribs, GLenum bufferMode);
    void (ONUT_STD_CALL *onutTransformFeedbackStreamAttribsNV)(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
    void (ONUT_STD_CALL *onutTransformFeedbackVaryingsEXT)(GLuint program, GLsizei count, const GLchar *const *varyings, GLenum bufferMode);
    void (ONUT_STD_CALL *onutTransformFeedbackVaryingsNV)(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
    void (ONUT_STD_CALL *onutTransformPathNV)(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);
    void (ONUT_STD_CALL *onutTranslatexOES)(GLfixed x, GLfixed y, GLfixed z);
    void (ONUT_STD_CALL *onutUniform1fARB)(GLint location, GLfloat v0);
    void (ONUT_STD_CALL *onutUniform1fvARB)(GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniform1i64ARB)(GLint location, GLint64 x);
    void (ONUT_STD_CALL *onutUniform1i64NV)(GLint location, GLint64EXT x);
    void (ONUT_STD_CALL *onutUniform1i64vARB)(GLint location, GLsizei count, const GLint64 *value);
    void (ONUT_STD_CALL *onutUniform1i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
    void (ONUT_STD_CALL *onutUniform1iARB)(GLint location, GLint v0);
    void (ONUT_STD_CALL *onutUniform1ivARB)(GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutUniform1ui64ARB)(GLint location, GLuint64 x);
    void (ONUT_STD_CALL *onutUniform1ui64NV)(GLint location, GLuint64EXT x);
    void (ONUT_STD_CALL *onutUniform1ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
    void (ONUT_STD_CALL *onutUniform1ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
    void (ONUT_STD_CALL *onutUniform1uiEXT)(GLint location, GLuint v0);
    void (ONUT_STD_CALL *onutUniform1uivEXT)(GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutUniform2fARB)(GLint location, GLfloat v0, GLfloat v1);
    void (ONUT_STD_CALL *onutUniform2fvARB)(GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniform2i64ARB)(GLint location, GLint64 x, GLint64 y);
    void (ONUT_STD_CALL *onutUniform2i64NV)(GLint location, GLint64EXT x, GLint64EXT y);
    void (ONUT_STD_CALL *onutUniform2i64vARB)(GLint location, GLsizei count, const GLint64 *value);
    void (ONUT_STD_CALL *onutUniform2i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
    void (ONUT_STD_CALL *onutUniform2iARB)(GLint location, GLint v0, GLint v1);
    void (ONUT_STD_CALL *onutUniform2ivARB)(GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutUniform2ui64ARB)(GLint location, GLuint64 x, GLuint64 y);
    void (ONUT_STD_CALL *onutUniform2ui64NV)(GLint location, GLuint64EXT x, GLuint64EXT y);
    void (ONUT_STD_CALL *onutUniform2ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
    void (ONUT_STD_CALL *onutUniform2ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
    void (ONUT_STD_CALL *onutUniform2uiEXT)(GLint location, GLuint v0, GLuint v1);
    void (ONUT_STD_CALL *onutUniform2uivEXT)(GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutUniform3fARB)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    void (ONUT_STD_CALL *onutUniform3fvARB)(GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniform3i64ARB)(GLint location, GLint64 x, GLint64 y, GLint64 z);
    void (ONUT_STD_CALL *onutUniform3i64NV)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
    void (ONUT_STD_CALL *onutUniform3i64vARB)(GLint location, GLsizei count, const GLint64 *value);
    void (ONUT_STD_CALL *onutUniform3i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
    void (ONUT_STD_CALL *onutUniform3iARB)(GLint location, GLint v0, GLint v1, GLint v2);
    void (ONUT_STD_CALL *onutUniform3ivARB)(GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutUniform3ui64ARB)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
    void (ONUT_STD_CALL *onutUniform3ui64NV)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
    void (ONUT_STD_CALL *onutUniform3ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
    void (ONUT_STD_CALL *onutUniform3ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
    void (ONUT_STD_CALL *onutUniform3uiEXT)(GLint location, GLuint v0, GLuint v1, GLuint v2);
    void (ONUT_STD_CALL *onutUniform3uivEXT)(GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutUniform4fARB)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    void (ONUT_STD_CALL *onutUniform4fvARB)(GLint location, GLsizei count, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniform4i64ARB)(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
    void (ONUT_STD_CALL *onutUniform4i64NV)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
    void (ONUT_STD_CALL *onutUniform4i64vARB)(GLint location, GLsizei count, const GLint64 *value);
    void (ONUT_STD_CALL *onutUniform4i64vNV)(GLint location, GLsizei count, const GLint64EXT *value);
    void (ONUT_STD_CALL *onutUniform4iARB)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    void (ONUT_STD_CALL *onutUniform4ivARB)(GLint location, GLsizei count, const GLint *value);
    void (ONUT_STD_CALL *onutUniform4ui64ARB)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
    void (ONUT_STD_CALL *onutUniform4ui64NV)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
    void (ONUT_STD_CALL *onutUniform4ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
    void (ONUT_STD_CALL *onutUniform4ui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
    void (ONUT_STD_CALL *onutUniform4uiEXT)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    void (ONUT_STD_CALL *onutUniform4uivEXT)(GLint location, GLsizei count, const GLuint *value);
    void (ONUT_STD_CALL *onutUniformBufferEXT)(GLuint program, GLint location, GLuint buffer);
    void (ONUT_STD_CALL *onutUniformHandleui64ARB)(GLint location, GLuint64 value);
    void (ONUT_STD_CALL *onutUniformHandleui64IMG)(GLint location, GLuint64 value);
    void (ONUT_STD_CALL *onutUniformHandleui64NV)(GLint location, GLuint64 value);
    void (ONUT_STD_CALL *onutUniformHandleui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
    void (ONUT_STD_CALL *onutUniformHandleui64vIMG)(GLint location, GLsizei count, const GLuint64 *value);
    void (ONUT_STD_CALL *onutUniformHandleui64vNV)(GLint location, GLsizei count, const GLuint64 *value);
    void (ONUT_STD_CALL *onutUniformMatrix2fvARB)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix2x3fvNV)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix2x4fvNV)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix3fvARB)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix3x2fvNV)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix3x4fvNV)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix4fvARB)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix4x2fvNV)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformMatrix4x3fvNV)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    void (ONUT_STD_CALL *onutUniformui64NV)(GLint location, GLuint64EXT value);
    void (ONUT_STD_CALL *onutUniformui64vNV)(GLint location, GLsizei count, const GLuint64EXT *value);
    void (ONUT_STD_CALL *onutUnlockArraysEXT)(void);
    GLboolean (ONUT_STD_CALL *onutUnmapBufferARB)(GLenum target);
    GLboolean (ONUT_STD_CALL *onutUnmapBufferOES)(GLenum target);
    GLboolean (ONUT_STD_CALL *onutUnmapNamedBufferEXT)(GLuint buffer);
    void (ONUT_STD_CALL *onutUnmapObjectBufferATI)(GLuint buffer);
    void (ONUT_STD_CALL *onutUnmapTexture2DINTEL)(GLuint texture, GLint level);
    void (ONUT_STD_CALL *onutUpdateObjectBufferATI)(GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve);
    void (ONUT_STD_CALL *onutUseProgramObjectARB)(GLhandleARB programObj);
    void (ONUT_STD_CALL *onutUseProgramStagesEXT)(GLuint pipeline, GLbitfield stages, GLuint program);
    void (ONUT_STD_CALL *onutUseShaderProgramEXT)(GLenum type, GLuint program);
    void (ONUT_STD_CALL *onutVDPAUFiniNV)(void);
    void (ONUT_STD_CALL *onutVDPAUGetSurfaceivNV)(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
    void (ONUT_STD_CALL *onutVDPAUInitNV)(const void *vdpDevice, const void *getProcAddress);
    GLboolean (ONUT_STD_CALL *onutVDPAUIsSurfaceNV)(GLvdpauSurfaceNV surface);
    void (ONUT_STD_CALL *onutVDPAUMapSurfacesNV)(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);
    GLvdpauSurfaceNV (ONUT_STD_CALL *onutVDPAURegisterOutputSurfaceNV)(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
    GLvdpauSurfaceNV (ONUT_STD_CALL *onutVDPAURegisterVideoSurfaceNV)(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
    void (ONUT_STD_CALL *onutVDPAUSurfaceAccessNV)(GLvdpauSurfaceNV surface, GLenum access);
    void (ONUT_STD_CALL *onutVDPAUUnmapSurfacesNV)(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);
    void (ONUT_STD_CALL *onutVDPAUUnregisterSurfaceNV)(GLvdpauSurfaceNV surface);
    void (ONUT_STD_CALL *onutValidateProgramARB)(GLhandleARB programObj);
    void (ONUT_STD_CALL *onutValidateProgramPipelineEXT)(GLuint pipeline);
    void (ONUT_STD_CALL *onutVariantArrayObjectATI)(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
    void (ONUT_STD_CALL *onutVariantPointerEXT)(GLuint id, GLenum type, GLuint stride, const void *addr);
    void (ONUT_STD_CALL *onutVariantbvEXT)(GLuint id, const GLbyte *addr);
    void (ONUT_STD_CALL *onutVariantdvEXT)(GLuint id, const GLdouble *addr);
    void (ONUT_STD_CALL *onutVariantfvEXT)(GLuint id, const GLfloat *addr);
    void (ONUT_STD_CALL *onutVariantivEXT)(GLuint id, const GLint *addr);
    void (ONUT_STD_CALL *onutVariantsvEXT)(GLuint id, const GLshort *addr);
    void (ONUT_STD_CALL *onutVariantubvEXT)(GLuint id, const GLubyte *addr);
    void (ONUT_STD_CALL *onutVariantuivEXT)(GLuint id, const GLuint *addr);
    void (ONUT_STD_CALL *onutVariantusvEXT)(GLuint id, const GLushort *addr);
    void (ONUT_STD_CALL *onutVertex2bOES)(GLbyte x, GLbyte y);
    void (ONUT_STD_CALL *onutVertex2bvOES)(const GLbyte *coords);
    void (ONUT_STD_CALL *onutVertex2hNV)(GLhalfNV x, GLhalfNV y);
    void (ONUT_STD_CALL *onutVertex2hvNV)(const GLhalfNV *v);
    void (ONUT_STD_CALL *onutVertex2xOES)(GLfixed x);
    void (ONUT_STD_CALL *onutVertex2xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutVertex3bOES)(GLbyte x, GLbyte y, GLbyte z);
    void (ONUT_STD_CALL *onutVertex3bvOES)(const GLbyte *coords);
    void (ONUT_STD_CALL *onutVertex3hNV)(GLhalfNV x, GLhalfNV y, GLhalfNV z);
    void (ONUT_STD_CALL *onutVertex3hvNV)(const GLhalfNV *v);
    void (ONUT_STD_CALL *onutVertex3xOES)(GLfixed x, GLfixed y);
    void (ONUT_STD_CALL *onutVertex3xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutVertex4bOES)(GLbyte x, GLbyte y, GLbyte z, GLbyte w);
    void (ONUT_STD_CALL *onutVertex4bvOES)(const GLbyte *coords);
    void (ONUT_STD_CALL *onutVertex4hNV)(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
    void (ONUT_STD_CALL *onutVertex4hvNV)(const GLhalfNV *v);
    void (ONUT_STD_CALL *onutVertex4xOES)(GLfixed x, GLfixed y, GLfixed z);
    void (ONUT_STD_CALL *onutVertex4xvOES)(const GLfixed *coords);
    void (ONUT_STD_CALL *onutVertexArrayBindVertexBufferEXT)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
    void (ONUT_STD_CALL *onutVertexArrayColorOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    void (ONUT_STD_CALL *onutVertexArrayEdgeFlagOffsetEXT)(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
    void (ONUT_STD_CALL *onutVertexArrayFogCoordOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
    void (ONUT_STD_CALL *onutVertexArrayIndexOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
    void (ONUT_STD_CALL *onutVertexArrayMultiTexCoordOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    void (ONUT_STD_CALL *onutVertexArrayNormalOffsetEXT)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
    void (ONUT_STD_CALL *onutVertexArrayParameteriAPPLE)(GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutVertexArrayRangeAPPLE)(GLsizei length, void *pointer);
    void (ONUT_STD_CALL *onutVertexArrayRangeNV)(GLsizei length, const void *pointer);
    void (ONUT_STD_CALL *onutVertexArraySecondaryColorOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    void (ONUT_STD_CALL *onutVertexArrayTexCoordOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    void (ONUT_STD_CALL *onutVertexArrayVertexAttribBindingEXT)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
    void (ONUT_STD_CALL *onutVertexArrayVertexAttribDivisorEXT)(GLuint vaobj, GLuint index, GLuint divisor);
    void (ONUT_STD_CALL *onutVertexArrayVertexAttribFormatEXT)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
    void (ONUT_STD_CALL *onutVertexArrayVertexAttribIFormatEXT)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    void (ONUT_STD_CALL *onutVertexArrayVertexAttribIOffsetEXT)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    void (ONUT_STD_CALL *onutVertexArrayVertexAttribLFormatEXT)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    void (ONUT_STD_CALL *onutVertexArrayVertexAttribLOffsetEXT)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    void (ONUT_STD_CALL *onutVertexArrayVertexAttribOffsetEXT)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
    void (ONUT_STD_CALL *onutVertexArrayVertexBindingDivisorEXT)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
    void (ONUT_STD_CALL *onutVertexArrayVertexOffsetEXT)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    void (ONUT_STD_CALL *onutVertexAttrib1dARB)(GLuint index, GLdouble x);
    void (ONUT_STD_CALL *onutVertexAttrib1dNV)(GLuint index, GLdouble x);
    void (ONUT_STD_CALL *onutVertexAttrib1dvARB)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttrib1dvNV)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttrib1fARB)(GLuint index, GLfloat x);
    void (ONUT_STD_CALL *onutVertexAttrib1fNV)(GLuint index, GLfloat x);
    void (ONUT_STD_CALL *onutVertexAttrib1fvARB)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttrib1fvNV)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttrib1hNV)(GLuint index, GLhalfNV x);
    void (ONUT_STD_CALL *onutVertexAttrib1hvNV)(GLuint index, const GLhalfNV *v);
    void (ONUT_STD_CALL *onutVertexAttrib1sARB)(GLuint index, GLshort x);
    void (ONUT_STD_CALL *onutVertexAttrib1sNV)(GLuint index, GLshort x);
    void (ONUT_STD_CALL *onutVertexAttrib1svARB)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib1svNV)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib2dARB)(GLuint index, GLdouble x, GLdouble y);
    void (ONUT_STD_CALL *onutVertexAttrib2dNV)(GLuint index, GLdouble x, GLdouble y);
    void (ONUT_STD_CALL *onutVertexAttrib2dvARB)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttrib2dvNV)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttrib2fARB)(GLuint index, GLfloat x, GLfloat y);
    void (ONUT_STD_CALL *onutVertexAttrib2fNV)(GLuint index, GLfloat x, GLfloat y);
    void (ONUT_STD_CALL *onutVertexAttrib2fvARB)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttrib2fvNV)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttrib2hNV)(GLuint index, GLhalfNV x, GLhalfNV y);
    void (ONUT_STD_CALL *onutVertexAttrib2hvNV)(GLuint index, const GLhalfNV *v);
    void (ONUT_STD_CALL *onutVertexAttrib2sARB)(GLuint index, GLshort x, GLshort y);
    void (ONUT_STD_CALL *onutVertexAttrib2sNV)(GLuint index, GLshort x, GLshort y);
    void (ONUT_STD_CALL *onutVertexAttrib2svARB)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib2svNV)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib3dARB)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutVertexAttrib3dNV)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutVertexAttrib3dvARB)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttrib3dvNV)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttrib3fARB)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutVertexAttrib3fNV)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutVertexAttrib3fvARB)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttrib3fvNV)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttrib3hNV)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
    void (ONUT_STD_CALL *onutVertexAttrib3hvNV)(GLuint index, const GLhalfNV *v);
    void (ONUT_STD_CALL *onutVertexAttrib3sARB)(GLuint index, GLshort x, GLshort y, GLshort z);
    void (ONUT_STD_CALL *onutVertexAttrib3sNV)(GLuint index, GLshort x, GLshort y, GLshort z);
    void (ONUT_STD_CALL *onutVertexAttrib3svARB)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib3svNV)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib4NbvARB)(GLuint index, const GLbyte *v);
    void (ONUT_STD_CALL *onutVertexAttrib4NivARB)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutVertexAttrib4NsvARB)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib4NubARB)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
    void (ONUT_STD_CALL *onutVertexAttrib4NubvARB)(GLuint index, const GLubyte *v);
    void (ONUT_STD_CALL *onutVertexAttrib4NuivARB)(GLuint index, const GLuint *v);
    void (ONUT_STD_CALL *onutVertexAttrib4NusvARB)(GLuint index, const GLushort *v);
    void (ONUT_STD_CALL *onutVertexAttrib4bvARB)(GLuint index, const GLbyte *v);
    void (ONUT_STD_CALL *onutVertexAttrib4dARB)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutVertexAttrib4dNV)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutVertexAttrib4dvARB)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttrib4dvNV)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttrib4fARB)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (ONUT_STD_CALL *onutVertexAttrib4fNV)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (ONUT_STD_CALL *onutVertexAttrib4fvARB)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttrib4fvNV)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttrib4hNV)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
    void (ONUT_STD_CALL *onutVertexAttrib4hvNV)(GLuint index, const GLhalfNV *v);
    void (ONUT_STD_CALL *onutVertexAttrib4ivARB)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutVertexAttrib4sARB)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
    void (ONUT_STD_CALL *onutVertexAttrib4sNV)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
    void (ONUT_STD_CALL *onutVertexAttrib4svARB)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib4svNV)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttrib4ubNV)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
    void (ONUT_STD_CALL *onutVertexAttrib4ubvARB)(GLuint index, const GLubyte *v);
    void (ONUT_STD_CALL *onutVertexAttrib4ubvNV)(GLuint index, const GLubyte *v);
    void (ONUT_STD_CALL *onutVertexAttrib4uivARB)(GLuint index, const GLuint *v);
    void (ONUT_STD_CALL *onutVertexAttrib4usvARB)(GLuint index, const GLushort *v);
    void (ONUT_STD_CALL *onutVertexAttribArrayObjectATI)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
    void (ONUT_STD_CALL *onutVertexAttribDivisorANGLE)(GLuint index, GLuint divisor);
    void (ONUT_STD_CALL *onutVertexAttribDivisorARB)(GLuint index, GLuint divisor);
    void (ONUT_STD_CALL *onutVertexAttribDivisorEXT)(GLuint index, GLuint divisor);
    void (ONUT_STD_CALL *onutVertexAttribDivisorNV)(GLuint index, GLuint divisor);
    void (ONUT_STD_CALL *onutVertexAttribFormatNV)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
    void (ONUT_STD_CALL *onutVertexAttribI1iEXT)(GLuint index, GLint x);
    void (ONUT_STD_CALL *onutVertexAttribI1ivEXT)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutVertexAttribI1uiEXT)(GLuint index, GLuint x);
    void (ONUT_STD_CALL *onutVertexAttribI1uivEXT)(GLuint index, const GLuint *v);
    void (ONUT_STD_CALL *onutVertexAttribI2iEXT)(GLuint index, GLint x, GLint y);
    void (ONUT_STD_CALL *onutVertexAttribI2ivEXT)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutVertexAttribI2uiEXT)(GLuint index, GLuint x, GLuint y);
    void (ONUT_STD_CALL *onutVertexAttribI2uivEXT)(GLuint index, const GLuint *v);
    void (ONUT_STD_CALL *onutVertexAttribI3iEXT)(GLuint index, GLint x, GLint y, GLint z);
    void (ONUT_STD_CALL *onutVertexAttribI3ivEXT)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutVertexAttribI3uiEXT)(GLuint index, GLuint x, GLuint y, GLuint z);
    void (ONUT_STD_CALL *onutVertexAttribI3uivEXT)(GLuint index, const GLuint *v);
    void (ONUT_STD_CALL *onutVertexAttribI4bvEXT)(GLuint index, const GLbyte *v);
    void (ONUT_STD_CALL *onutVertexAttribI4iEXT)(GLuint index, GLint x, GLint y, GLint z, GLint w);
    void (ONUT_STD_CALL *onutVertexAttribI4ivEXT)(GLuint index, const GLint *v);
    void (ONUT_STD_CALL *onutVertexAttribI4svEXT)(GLuint index, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttribI4ubvEXT)(GLuint index, const GLubyte *v);
    void (ONUT_STD_CALL *onutVertexAttribI4uiEXT)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    void (ONUT_STD_CALL *onutVertexAttribI4uivEXT)(GLuint index, const GLuint *v);
    void (ONUT_STD_CALL *onutVertexAttribI4usvEXT)(GLuint index, const GLushort *v);
    void (ONUT_STD_CALL *onutVertexAttribIFormatNV)(GLuint index, GLint size, GLenum type, GLsizei stride);
    void (ONUT_STD_CALL *onutVertexAttribIPointerEXT)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutVertexAttribL1dEXT)(GLuint index, GLdouble x);
    void (ONUT_STD_CALL *onutVertexAttribL1dvEXT)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttribL1i64NV)(GLuint index, GLint64EXT x);
    void (ONUT_STD_CALL *onutVertexAttribL1i64vNV)(GLuint index, const GLint64EXT *v);
    void (ONUT_STD_CALL *onutVertexAttribL1ui64ARB)(GLuint index, GLuint64EXT x);
    void (ONUT_STD_CALL *onutVertexAttribL1ui64NV)(GLuint index, GLuint64EXT x);
    void (ONUT_STD_CALL *onutVertexAttribL1ui64vARB)(GLuint index, const GLuint64EXT *v);
    void (ONUT_STD_CALL *onutVertexAttribL1ui64vNV)(GLuint index, const GLuint64EXT *v);
    void (ONUT_STD_CALL *onutVertexAttribL2dEXT)(GLuint index, GLdouble x, GLdouble y);
    void (ONUT_STD_CALL *onutVertexAttribL2dvEXT)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttribL2i64NV)(GLuint index, GLint64EXT x, GLint64EXT y);
    void (ONUT_STD_CALL *onutVertexAttribL2i64vNV)(GLuint index, const GLint64EXT *v);
    void (ONUT_STD_CALL *onutVertexAttribL2ui64NV)(GLuint index, GLuint64EXT x, GLuint64EXT y);
    void (ONUT_STD_CALL *onutVertexAttribL2ui64vNV)(GLuint index, const GLuint64EXT *v);
    void (ONUT_STD_CALL *onutVertexAttribL3dEXT)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutVertexAttribL3dvEXT)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttribL3i64NV)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
    void (ONUT_STD_CALL *onutVertexAttribL3i64vNV)(GLuint index, const GLint64EXT *v);
    void (ONUT_STD_CALL *onutVertexAttribL3ui64NV)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
    void (ONUT_STD_CALL *onutVertexAttribL3ui64vNV)(GLuint index, const GLuint64EXT *v);
    void (ONUT_STD_CALL *onutVertexAttribL4dEXT)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutVertexAttribL4dvEXT)(GLuint index, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttribL4i64NV)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
    void (ONUT_STD_CALL *onutVertexAttribL4i64vNV)(GLuint index, const GLint64EXT *v);
    void (ONUT_STD_CALL *onutVertexAttribL4ui64NV)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
    void (ONUT_STD_CALL *onutVertexAttribL4ui64vNV)(GLuint index, const GLuint64EXT *v);
    void (ONUT_STD_CALL *onutVertexAttribLFormatNV)(GLuint index, GLint size, GLenum type, GLsizei stride);
    void (ONUT_STD_CALL *onutVertexAttribLPointerEXT)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutVertexAttribParameteriAMD)(GLuint index, GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutVertexAttribPointerARB)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutVertexAttribPointerNV)(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutVertexAttribs1dvNV)(GLuint index, GLsizei count, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttribs1fvNV)(GLuint index, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttribs1hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
    void (ONUT_STD_CALL *onutVertexAttribs1svNV)(GLuint index, GLsizei count, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttribs2dvNV)(GLuint index, GLsizei count, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttribs2fvNV)(GLuint index, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttribs2hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
    void (ONUT_STD_CALL *onutVertexAttribs2svNV)(GLuint index, GLsizei count, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttribs3dvNV)(GLuint index, GLsizei count, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttribs3fvNV)(GLuint index, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttribs3hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
    void (ONUT_STD_CALL *onutVertexAttribs3svNV)(GLuint index, GLsizei count, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttribs4dvNV)(GLuint index, GLsizei count, const GLdouble *v);
    void (ONUT_STD_CALL *onutVertexAttribs4fvNV)(GLuint index, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutVertexAttribs4hvNV)(GLuint index, GLsizei n, const GLhalfNV *v);
    void (ONUT_STD_CALL *onutVertexAttribs4svNV)(GLuint index, GLsizei count, const GLshort *v);
    void (ONUT_STD_CALL *onutVertexAttribs4ubvNV)(GLuint index, GLsizei count, const GLubyte *v);
    void (ONUT_STD_CALL *onutVertexBlendARB)(GLint count);
    void (ONUT_STD_CALL *onutVertexBlendEnvfATI)(GLenum pname, GLfloat param);
    void (ONUT_STD_CALL *onutVertexBlendEnviATI)(GLenum pname, GLint param);
    void (ONUT_STD_CALL *onutVertexFormatNV)(GLint size, GLenum type, GLsizei stride);
    void (ONUT_STD_CALL *onutVertexPointerEXT)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
    void (ONUT_STD_CALL *onutVertexPointerListIBM)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
    void (ONUT_STD_CALL *onutVertexPointervINTEL)(GLint size, GLenum type, const void **pointer);
    void (ONUT_STD_CALL *onutVertexStream1dATI)(GLenum stream, GLdouble x);
    void (ONUT_STD_CALL *onutVertexStream1dvATI)(GLenum stream, const GLdouble *coords);
    void (ONUT_STD_CALL *onutVertexStream1fATI)(GLenum stream, GLfloat x);
    void (ONUT_STD_CALL *onutVertexStream1fvATI)(GLenum stream, const GLfloat *coords);
    void (ONUT_STD_CALL *onutVertexStream1iATI)(GLenum stream, GLint x);
    void (ONUT_STD_CALL *onutVertexStream1ivATI)(GLenum stream, const GLint *coords);
    void (ONUT_STD_CALL *onutVertexStream1sATI)(GLenum stream, GLshort x);
    void (ONUT_STD_CALL *onutVertexStream1svATI)(GLenum stream, const GLshort *coords);
    void (ONUT_STD_CALL *onutVertexStream2dATI)(GLenum stream, GLdouble x, GLdouble y);
    void (ONUT_STD_CALL *onutVertexStream2dvATI)(GLenum stream, const GLdouble *coords);
    void (ONUT_STD_CALL *onutVertexStream2fATI)(GLenum stream, GLfloat x, GLfloat y);
    void (ONUT_STD_CALL *onutVertexStream2fvATI)(GLenum stream, const GLfloat *coords);
    void (ONUT_STD_CALL *onutVertexStream2iATI)(GLenum stream, GLint x, GLint y);
    void (ONUT_STD_CALL *onutVertexStream2ivATI)(GLenum stream, const GLint *coords);
    void (ONUT_STD_CALL *onutVertexStream2sATI)(GLenum stream, GLshort x, GLshort y);
    void (ONUT_STD_CALL *onutVertexStream2svATI)(GLenum stream, const GLshort *coords);
    void (ONUT_STD_CALL *onutVertexStream3dATI)(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutVertexStream3dvATI)(GLenum stream, const GLdouble *coords);
    void (ONUT_STD_CALL *onutVertexStream3fATI)(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutVertexStream3fvATI)(GLenum stream, const GLfloat *coords);
    void (ONUT_STD_CALL *onutVertexStream3iATI)(GLenum stream, GLint x, GLint y, GLint z);
    void (ONUT_STD_CALL *onutVertexStream3ivATI)(GLenum stream, const GLint *coords);
    void (ONUT_STD_CALL *onutVertexStream3sATI)(GLenum stream, GLshort x, GLshort y, GLshort z);
    void (ONUT_STD_CALL *onutVertexStream3svATI)(GLenum stream, const GLshort *coords);
    void (ONUT_STD_CALL *onutVertexStream4dATI)(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutVertexStream4dvATI)(GLenum stream, const GLdouble *coords);
    void (ONUT_STD_CALL *onutVertexStream4fATI)(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (ONUT_STD_CALL *onutVertexStream4fvATI)(GLenum stream, const GLfloat *coords);
    void (ONUT_STD_CALL *onutVertexStream4iATI)(GLenum stream, GLint x, GLint y, GLint z, GLint w);
    void (ONUT_STD_CALL *onutVertexStream4ivATI)(GLenum stream, const GLint *coords);
    void (ONUT_STD_CALL *onutVertexStream4sATI)(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
    void (ONUT_STD_CALL *onutVertexStream4svATI)(GLenum stream, const GLshort *coords);
    void (ONUT_STD_CALL *onutVertexWeightPointerEXT)(GLint size, GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutVertexWeightfEXT)(GLfloat weight);
    void (ONUT_STD_CALL *onutVertexWeightfvEXT)(const GLfloat *weight);
    void (ONUT_STD_CALL *onutVertexWeighthNV)(GLhalfNV weight);
    void (ONUT_STD_CALL *onutVertexWeighthvNV)(const GLhalfNV *weight);
    GLenum (ONUT_STD_CALL *onutVideoCaptureNV)(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);
    void (ONUT_STD_CALL *onutVideoCaptureStreamParameterdvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);
    void (ONUT_STD_CALL *onutVideoCaptureStreamParameterfvNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);
    void (ONUT_STD_CALL *onutVideoCaptureStreamParameterivNV)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);
    void (ONUT_STD_CALL *onutViewportArrayvNV)(GLuint first, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutViewportArrayvOES)(GLuint first, GLsizei count, const GLfloat *v);
    void (ONUT_STD_CALL *onutViewportIndexedfNV)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
    void (ONUT_STD_CALL *onutViewportIndexedfOES)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
    void (ONUT_STD_CALL *onutViewportIndexedfvNV)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutViewportIndexedfvOES)(GLuint index, const GLfloat *v);
    void (ONUT_STD_CALL *onutViewportPositionWScaleNV)(GLuint index, GLfloat xcoeff, GLfloat ycoeff);
    void (ONUT_STD_CALL *onutViewportSwizzleNV)(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);
    void (ONUT_STD_CALL *onutWaitSemaphoreEXT)(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts);
    void (ONUT_STD_CALL *onutWaitSyncAPPLE)(GLsync sync, GLbitfield flags, GLuint64 timeout);
    void (ONUT_STD_CALL *onutWaitVkSemaphoreNV)(GLuint64 vkSemaphore);
    void (ONUT_STD_CALL *onutWeightPathsNV)(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);
    void (ONUT_STD_CALL *onutWeightPointerARB)(GLint size, GLenum type, GLsizei stride, const void *pointer);
    void (ONUT_STD_CALL *onutWeightbvARB)(GLint size, const GLbyte *weights);
    void (ONUT_STD_CALL *onutWeightdvARB)(GLint size, const GLdouble *weights);
    void (ONUT_STD_CALL *onutWeightfvARB)(GLint size, const GLfloat *weights);
    void (ONUT_STD_CALL *onutWeightivARB)(GLint size, const GLint *weights);
    void (ONUT_STD_CALL *onutWeightsvARB)(GLint size, const GLshort *weights);
    void (ONUT_STD_CALL *onutWeightubvARB)(GLint size, const GLubyte *weights);
    void (ONUT_STD_CALL *onutWeightuivARB)(GLint size, const GLuint *weights);
    void (ONUT_STD_CALL *onutWeightusvARB)(GLint size, const GLushort *weights);
    void (ONUT_STD_CALL *onutWindowPos2dARB)(GLdouble x, GLdouble y);
    void (ONUT_STD_CALL *onutWindowPos2dMESA)(GLdouble x, GLdouble y);
    void (ONUT_STD_CALL *onutWindowPos2dvARB)(const GLdouble *v);
    void (ONUT_STD_CALL *onutWindowPos2dvMESA)(const GLdouble *v);
    void (ONUT_STD_CALL *onutWindowPos2fARB)(GLfloat x, GLfloat y);
    void (ONUT_STD_CALL *onutWindowPos2fMESA)(GLfloat x, GLfloat y);
    void (ONUT_STD_CALL *onutWindowPos2fvARB)(const GLfloat *v);
    void (ONUT_STD_CALL *onutWindowPos2fvMESA)(const GLfloat *v);
    void (ONUT_STD_CALL *onutWindowPos2iARB)(GLint x, GLint y);
    void (ONUT_STD_CALL *onutWindowPos2iMESA)(GLint x, GLint y);
    void (ONUT_STD_CALL *onutWindowPos2ivARB)(const GLint *v);
    void (ONUT_STD_CALL *onutWindowPos2ivMESA)(const GLint *v);
    void (ONUT_STD_CALL *onutWindowPos2sARB)(GLshort x, GLshort y);
    void (ONUT_STD_CALL *onutWindowPos2sMESA)(GLshort x, GLshort y);
    void (ONUT_STD_CALL *onutWindowPos2svARB)(const GLshort *v);
    void (ONUT_STD_CALL *onutWindowPos2svMESA)(const GLshort *v);
    void (ONUT_STD_CALL *onutWindowPos3dARB)(GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutWindowPos3dMESA)(GLdouble x, GLdouble y, GLdouble z);
    void (ONUT_STD_CALL *onutWindowPos3dvARB)(const GLdouble *v);
    void (ONUT_STD_CALL *onutWindowPos3dvMESA)(const GLdouble *v);
    void (ONUT_STD_CALL *onutWindowPos3fARB)(GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutWindowPos3fMESA)(GLfloat x, GLfloat y, GLfloat z);
    void (ONUT_STD_CALL *onutWindowPos3fvARB)(const GLfloat *v);
    void (ONUT_STD_CALL *onutWindowPos3fvMESA)(const GLfloat *v);
    void (ONUT_STD_CALL *onutWindowPos3iARB)(GLint x, GLint y, GLint z);
    void (ONUT_STD_CALL *onutWindowPos3iMESA)(GLint x, GLint y, GLint z);
    void (ONUT_STD_CALL *onutWindowPos3ivARB)(const GLint *v);
    void (ONUT_STD_CALL *onutWindowPos3ivMESA)(const GLint *v);
    void (ONUT_STD_CALL *onutWindowPos3sARB)(GLshort x, GLshort y, GLshort z);
    void (ONUT_STD_CALL *onutWindowPos3sMESA)(GLshort x, GLshort y, GLshort z);
    void (ONUT_STD_CALL *onutWindowPos3svARB)(const GLshort *v);
    void (ONUT_STD_CALL *onutWindowPos3svMESA)(const GLshort *v);
    void (ONUT_STD_CALL *onutWindowPos4dMESA)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (ONUT_STD_CALL *onutWindowPos4dvMESA)(const GLdouble *v);
    void (ONUT_STD_CALL *onutWindowPos4fMESA)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (ONUT_STD_CALL *onutWindowPos4fvMESA)(const GLfloat *v);
    void (ONUT_STD_CALL *onutWindowPos4iMESA)(GLint x, GLint y, GLint z, GLint w);
    void (ONUT_STD_CALL *onutWindowPos4ivMESA)(const GLint *v);
    void (ONUT_STD_CALL *onutWindowPos4sMESA)(GLshort x, GLshort y, GLshort z, GLshort w);
    void (ONUT_STD_CALL *onutWindowPos4svMESA)(const GLshort *v);
    void (ONUT_STD_CALL *onutWindowRectanglesEXT)(GLenum mode, GLsizei count, const GLint *box);
    void (ONUT_STD_CALL *onutWriteMaskEXT)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
#endif
} OnutGLAPIConfig;

extern OnutGLAPIConfig onutGLAPI; // global instance.

ONUT_FORCE_INLINE bool onutGLSupport(size_t extensionID) {
    return onutGLAPI.supportedExtensions[extensionID];
}

#if ONUT_GL_WRANGLER_ENABLED

ONUT_FORCE_INLINE void _onutAccumxOES(GLenum op, GLfixed value) { onutGLAPI.onutAccumxOES(op, value); }
ONUT_FORCE_INLINE GLboolean _onutAcquireKeyedMutexWin32EXT(GLuint memory, GLuint64 key, GLuint timeout) { return onutGLAPI.onutAcquireKeyedMutexWin32EXT(memory, key, timeout); }
ONUT_FORCE_INLINE void _onutActiveProgramEXT(GLuint program) { onutGLAPI.onutActiveProgramEXT(program); }
ONUT_FORCE_INLINE void _onutActiveShaderProgram(GLuint pipeline, GLuint program) { onutGLAPI.onutActiveShaderProgram(pipeline, program); }
ONUT_FORCE_INLINE void _onutActiveShaderProgramEXT(GLuint pipeline, GLuint program) { onutGLAPI.onutActiveShaderProgramEXT(pipeline, program); }
ONUT_FORCE_INLINE void _onutActiveStencilFaceEXT(GLenum face) { onutGLAPI.onutActiveStencilFaceEXT(face); }
ONUT_FORCE_INLINE void _onutActiveTexture(GLenum texture) { onutGLAPI.onutActiveTexture(texture); }
ONUT_FORCE_INLINE void _onutActiveTextureARB(GLenum texture) { onutGLAPI.onutActiveTextureARB(texture); }
ONUT_FORCE_INLINE void _onutActiveVaryingNV(GLuint program, const GLchar *name) { onutGLAPI.onutActiveVaryingNV(program, name); }
ONUT_FORCE_INLINE void _onutAlphaFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod) { onutGLAPI.onutAlphaFragmentOp1ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod); }
ONUT_FORCE_INLINE void _onutAlphaFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod) { onutGLAPI.onutAlphaFragmentOp2ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod); }
ONUT_FORCE_INLINE void _onutAlphaFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod) { onutGLAPI.onutAlphaFragmentOp3ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod); }
ONUT_FORCE_INLINE void _onutAlphaFuncQCOM(GLenum func, GLclampf ref) { onutGLAPI.onutAlphaFuncQCOM(func, ref); }
ONUT_FORCE_INLINE void _onutAlphaFuncxOES(GLenum func, GLfixed ref) { onutGLAPI.onutAlphaFuncxOES(func, ref); }
ONUT_FORCE_INLINE void _onutAlphaToCoverageDitherControlNV(GLenum mode) { onutGLAPI.onutAlphaToCoverageDitherControlNV(mode); }
ONUT_FORCE_INLINE void _onutApplyFramebufferAttachmentCMAAINTEL(void) { onutGLAPI.onutApplyFramebufferAttachmentCMAAINTEL(); }
ONUT_FORCE_INLINE void _onutApplyTextureEXT(GLenum mode) { onutGLAPI.onutApplyTextureEXT(mode); }
ONUT_FORCE_INLINE GLboolean _onutAreProgramsResidentNV(GLsizei n, const GLuint *programs, GLboolean *residences) { return onutGLAPI.onutAreProgramsResidentNV(n, programs, residences); }
ONUT_FORCE_INLINE GLboolean _onutAreTexturesResidentEXT(GLsizei n, const GLuint *textures, GLboolean *residences) { return onutGLAPI.onutAreTexturesResidentEXT(n, textures, residences); }
ONUT_FORCE_INLINE void _onutArrayElementEXT(GLint i) { onutGLAPI.onutArrayElementEXT(i); }
ONUT_FORCE_INLINE void _onutArrayObjectATI(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset) { onutGLAPI.onutArrayObjectATI(array, size, type, stride, buffer, offset); }
ONUT_FORCE_INLINE void _onutAsyncMarkerSGIX(GLuint marker) { onutGLAPI.onutAsyncMarkerSGIX(marker); }
ONUT_FORCE_INLINE void _onutAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj) { onutGLAPI.onutAttachObjectARB(containerObj, obj); }
ONUT_FORCE_INLINE void _onutAttachShader(GLuint program, GLuint shader) { onutGLAPI.onutAttachShader(program, shader); }
ONUT_FORCE_INLINE void _onutBeginConditionalRender(GLuint id, GLenum mode) { onutGLAPI.onutBeginConditionalRender(id, mode); }
ONUT_FORCE_INLINE void _onutBeginConditionalRenderNV(GLuint id, GLenum mode) { onutGLAPI.onutBeginConditionalRenderNV(id, mode); }
ONUT_FORCE_INLINE void _onutBeginConditionalRenderNVX(GLuint id) { onutGLAPI.onutBeginConditionalRenderNVX(id); }
ONUT_FORCE_INLINE void _onutBeginFragmentShaderATI(void) { onutGLAPI.onutBeginFragmentShaderATI(); }
ONUT_FORCE_INLINE void _onutBeginOcclusionQueryNV(GLuint id) { onutGLAPI.onutBeginOcclusionQueryNV(id); }
ONUT_FORCE_INLINE void _onutBeginPerfMonitorAMD(GLuint monitor) { onutGLAPI.onutBeginPerfMonitorAMD(monitor); }
ONUT_FORCE_INLINE void _onutBeginPerfQueryINTEL(GLuint queryHandle) { onutGLAPI.onutBeginPerfQueryINTEL(queryHandle); }
ONUT_FORCE_INLINE void _onutBeginQuery(GLenum target, GLuint id) { onutGLAPI.onutBeginQuery(target, id); }
ONUT_FORCE_INLINE void _onutBeginQueryARB(GLenum target, GLuint id) { onutGLAPI.onutBeginQueryARB(target, id); }
ONUT_FORCE_INLINE void _onutBeginQueryEXT(GLenum target, GLuint id) { onutGLAPI.onutBeginQueryEXT(target, id); }
ONUT_FORCE_INLINE void _onutBeginQueryIndexed(GLenum target, GLuint index, GLuint id) { onutGLAPI.onutBeginQueryIndexed(target, index, id); }
ONUT_FORCE_INLINE void _onutBeginTransformFeedback(GLenum primitiveMode) { onutGLAPI.onutBeginTransformFeedback(primitiveMode); }
ONUT_FORCE_INLINE void _onutBeginTransformFeedbackEXT(GLenum primitiveMode) { onutGLAPI.onutBeginTransformFeedbackEXT(primitiveMode); }
ONUT_FORCE_INLINE void _onutBeginTransformFeedbackNV(GLenum primitiveMode) { onutGLAPI.onutBeginTransformFeedbackNV(primitiveMode); }
ONUT_FORCE_INLINE void _onutBeginVertexShaderEXT(void) { onutGLAPI.onutBeginVertexShaderEXT(); }
ONUT_FORCE_INLINE void _onutBeginVideoCaptureNV(GLuint video_capture_slot) { onutGLAPI.onutBeginVideoCaptureNV(video_capture_slot); }
ONUT_FORCE_INLINE void _onutBindAttribLocation(GLuint program, GLuint index, const GLchar *name) { onutGLAPI.onutBindAttribLocation(program, index, name); }
ONUT_FORCE_INLINE void _onutBindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB *name) { onutGLAPI.onutBindAttribLocationARB(programObj, index, name); }
ONUT_FORCE_INLINE void _onutBindBuffer(GLenum target, GLuint buffer) { onutGLAPI.onutBindBuffer(target, buffer); }
ONUT_FORCE_INLINE void _onutBindBufferARB(GLenum target, GLuint buffer) { onutGLAPI.onutBindBufferARB(target, buffer); }
ONUT_FORCE_INLINE void _onutBindBufferBase(GLenum target, GLuint index, GLuint buffer) { onutGLAPI.onutBindBufferBase(target, index, buffer); }
ONUT_FORCE_INLINE void _onutBindBufferBaseEXT(GLenum target, GLuint index, GLuint buffer) { onutGLAPI.onutBindBufferBaseEXT(target, index, buffer); }
ONUT_FORCE_INLINE void _onutBindBufferBaseNV(GLenum target, GLuint index, GLuint buffer) { onutGLAPI.onutBindBufferBaseNV(target, index, buffer); }
ONUT_FORCE_INLINE void _onutBindBufferOffsetEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset) { onutGLAPI.onutBindBufferOffsetEXT(target, index, buffer, offset); }
ONUT_FORCE_INLINE void _onutBindBufferOffsetNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset) { onutGLAPI.onutBindBufferOffsetNV(target, index, buffer, offset); }
ONUT_FORCE_INLINE void _onutBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) { onutGLAPI.onutBindBufferRange(target, index, buffer, offset, size); }
ONUT_FORCE_INLINE void _onutBindBufferRangeEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) { onutGLAPI.onutBindBufferRangeEXT(target, index, buffer, offset, size); }
ONUT_FORCE_INLINE void _onutBindBufferRangeNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) { onutGLAPI.onutBindBufferRangeNV(target, index, buffer, offset, size); }
ONUT_FORCE_INLINE void _onutBindBuffersBase(GLenum target, GLuint first, GLsizei count, const GLuint *buffers) { onutGLAPI.onutBindBuffersBase(target, first, count, buffers); }
ONUT_FORCE_INLINE void _onutBindBuffersRange(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes) { onutGLAPI.onutBindBuffersRange(target, first, count, buffers, offsets, sizes); }
ONUT_FORCE_INLINE void _onutBindFragDataLocation(GLuint program, GLuint color, const GLchar *name) { onutGLAPI.onutBindFragDataLocation(program, color, name); }
ONUT_FORCE_INLINE void _onutBindFragDataLocationEXT(GLuint program, GLuint color, const GLchar *name) { onutGLAPI.onutBindFragDataLocationEXT(program, color, name); }
ONUT_FORCE_INLINE void _onutBindFragDataLocationIndexed(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name) { onutGLAPI.onutBindFragDataLocationIndexed(program, colorNumber, index, name); }
ONUT_FORCE_INLINE void _onutBindFragDataLocationIndexedEXT(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name) { onutGLAPI.onutBindFragDataLocationIndexedEXT(program, colorNumber, index, name); }
ONUT_FORCE_INLINE void _onutBindFragmentShaderATI(GLuint id) { onutGLAPI.onutBindFragmentShaderATI(id); }
ONUT_FORCE_INLINE void _onutBindFramebuffer(GLenum target, GLuint framebuffer) { onutGLAPI.onutBindFramebuffer(target, framebuffer); }
ONUT_FORCE_INLINE void _onutBindFramebufferEXT(GLenum target, GLuint framebuffer) { onutGLAPI.onutBindFramebufferEXT(target, framebuffer); }
ONUT_FORCE_INLINE void _onutBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format) { onutGLAPI.onutBindImageTexture(unit, texture, level, layered, layer, access, format); }
ONUT_FORCE_INLINE void _onutBindImageTextureEXT(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format) { onutGLAPI.onutBindImageTextureEXT(index, texture, level, layered, layer, access, format); }
ONUT_FORCE_INLINE void _onutBindImageTextures(GLuint first, GLsizei count, const GLuint *textures) { onutGLAPI.onutBindImageTextures(first, count, textures); }
ONUT_FORCE_INLINE GLuint _onutBindLightParameterEXT(GLenum light, GLenum value) { return onutGLAPI.onutBindLightParameterEXT(light, value); }
ONUT_FORCE_INLINE GLuint _onutBindMaterialParameterEXT(GLenum face, GLenum value) { return onutGLAPI.onutBindMaterialParameterEXT(face, value); }
ONUT_FORCE_INLINE void _onutBindMultiTextureEXT(GLenum texunit, GLenum target, GLuint texture) { onutGLAPI.onutBindMultiTextureEXT(texunit, target, texture); }
ONUT_FORCE_INLINE GLuint _onutBindParameterEXT(GLenum value) { return onutGLAPI.onutBindParameterEXT(value); }
ONUT_FORCE_INLINE void _onutBindProgramARB(GLenum target, GLuint program) { onutGLAPI.onutBindProgramARB(target, program); }
ONUT_FORCE_INLINE void _onutBindProgramNV(GLenum target, GLuint id) { onutGLAPI.onutBindProgramNV(target, id); }
ONUT_FORCE_INLINE void _onutBindProgramPipeline(GLuint pipeline) { onutGLAPI.onutBindProgramPipeline(pipeline); }
ONUT_FORCE_INLINE void _onutBindProgramPipelineEXT(GLuint pipeline) { onutGLAPI.onutBindProgramPipelineEXT(pipeline); }
ONUT_FORCE_INLINE void _onutBindRenderbuffer(GLenum target, GLuint renderbuffer) { onutGLAPI.onutBindRenderbuffer(target, renderbuffer); }
ONUT_FORCE_INLINE void _onutBindRenderbufferEXT(GLenum target, GLuint renderbuffer) { onutGLAPI.onutBindRenderbufferEXT(target, renderbuffer); }
ONUT_FORCE_INLINE void _onutBindSampler(GLuint unit, GLuint sampler) { onutGLAPI.onutBindSampler(unit, sampler); }
ONUT_FORCE_INLINE void _onutBindSamplers(GLuint first, GLsizei count, const GLuint *samplers) { onutGLAPI.onutBindSamplers(first, count, samplers); }
ONUT_FORCE_INLINE GLuint _onutBindTexGenParameterEXT(GLenum unit, GLenum coord, GLenum value) { return onutGLAPI.onutBindTexGenParameterEXT(unit, coord, value); }
ONUT_FORCE_INLINE void _onutBindTexture(GLenum target, GLuint texture) { onutGLAPI.onutBindTexture(target, texture); }
ONUT_FORCE_INLINE void _onutBindTextureEXT(GLenum target, GLuint texture) { onutGLAPI.onutBindTextureEXT(target, texture); }
ONUT_FORCE_INLINE void _onutBindTextureUnit(GLuint unit, GLuint texture) { onutGLAPI.onutBindTextureUnit(unit, texture); }
ONUT_FORCE_INLINE GLuint _onutBindTextureUnitParameterEXT(GLenum unit, GLenum value) { return onutGLAPI.onutBindTextureUnitParameterEXT(unit, value); }
ONUT_FORCE_INLINE void _onutBindTextures(GLuint first, GLsizei count, const GLuint *textures) { onutGLAPI.onutBindTextures(first, count, textures); }
ONUT_FORCE_INLINE void _onutBindTransformFeedback(GLenum target, GLuint id) { onutGLAPI.onutBindTransformFeedback(target, id); }
ONUT_FORCE_INLINE void _onutBindTransformFeedbackNV(GLenum target, GLuint id) { onutGLAPI.onutBindTransformFeedbackNV(target, id); }
ONUT_FORCE_INLINE void _onutBindVertexArray(GLuint array) { onutGLAPI.onutBindVertexArray(array); }
ONUT_FORCE_INLINE void _onutBindVertexArrayAPPLE(GLuint array) { onutGLAPI.onutBindVertexArrayAPPLE(array); }
ONUT_FORCE_INLINE void _onutBindVertexArrayOES(GLuint array) { onutGLAPI.onutBindVertexArrayOES(array); }
ONUT_FORCE_INLINE void _onutBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride) { onutGLAPI.onutBindVertexBuffer(bindingindex, buffer, offset, stride); }
ONUT_FORCE_INLINE void _onutBindVertexBuffers(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides) { onutGLAPI.onutBindVertexBuffers(first, count, buffers, offsets, strides); }
ONUT_FORCE_INLINE void _onutBindVertexShaderEXT(GLuint id) { onutGLAPI.onutBindVertexShaderEXT(id); }
ONUT_FORCE_INLINE void _onutBindVideoCaptureStreamBufferNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset) { onutGLAPI.onutBindVideoCaptureStreamBufferNV(video_capture_slot, stream, frame_region, offset); }
ONUT_FORCE_INLINE void _onutBindVideoCaptureStreamTextureNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture) { onutGLAPI.onutBindVideoCaptureStreamTextureNV(video_capture_slot, stream, frame_region, target, texture); }
ONUT_FORCE_INLINE void _onutBinormal3bEXT(GLbyte bx, GLbyte by, GLbyte bz) { onutGLAPI.onutBinormal3bEXT(bx, by, bz); }
ONUT_FORCE_INLINE void _onutBinormal3bvEXT(const GLbyte *v) { onutGLAPI.onutBinormal3bvEXT(v); }
ONUT_FORCE_INLINE void _onutBinormal3dEXT(GLdouble bx, GLdouble by, GLdouble bz) { onutGLAPI.onutBinormal3dEXT(bx, by, bz); }
ONUT_FORCE_INLINE void _onutBinormal3dvEXT(const GLdouble *v) { onutGLAPI.onutBinormal3dvEXT(v); }
ONUT_FORCE_INLINE void _onutBinormal3fEXT(GLfloat bx, GLfloat by, GLfloat bz) { onutGLAPI.onutBinormal3fEXT(bx, by, bz); }
ONUT_FORCE_INLINE void _onutBinormal3fvEXT(const GLfloat *v) { onutGLAPI.onutBinormal3fvEXT(v); }
ONUT_FORCE_INLINE void _onutBinormal3iEXT(GLint bx, GLint by, GLint bz) { onutGLAPI.onutBinormal3iEXT(bx, by, bz); }
ONUT_FORCE_INLINE void _onutBinormal3ivEXT(const GLint *v) { onutGLAPI.onutBinormal3ivEXT(v); }
ONUT_FORCE_INLINE void _onutBinormal3sEXT(GLshort bx, GLshort by, GLshort bz) { onutGLAPI.onutBinormal3sEXT(bx, by, bz); }
ONUT_FORCE_INLINE void _onutBinormal3svEXT(const GLshort *v) { onutGLAPI.onutBinormal3svEXT(v); }
ONUT_FORCE_INLINE void _onutBinormalPointerEXT(GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutBinormalPointerEXT(type, stride, pointer); }
ONUT_FORCE_INLINE void _onutBitmapxOES(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap) { onutGLAPI.onutBitmapxOES(width, height, xorig, yorig, xmove, ymove, bitmap); }
ONUT_FORCE_INLINE void _onutBlendBarrier(void) { onutGLAPI.onutBlendBarrier(); }
ONUT_FORCE_INLINE void _onutBlendBarrierKHR(void) { onutGLAPI.onutBlendBarrierKHR(); }
ONUT_FORCE_INLINE void _onutBlendBarrierNV(void) { onutGLAPI.onutBlendBarrierNV(); }
ONUT_FORCE_INLINE void _onutBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) { onutGLAPI.onutBlendColor(red, green, blue, alpha); }
ONUT_FORCE_INLINE void _onutBlendColorEXT(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) { onutGLAPI.onutBlendColorEXT(red, green, blue, alpha); }
ONUT_FORCE_INLINE void _onutBlendColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) { onutGLAPI.onutBlendColorxOES(red, green, blue, alpha); }
ONUT_FORCE_INLINE void _onutBlendEquation(GLenum mode) { onutGLAPI.onutBlendEquation(mode); }
ONUT_FORCE_INLINE void _onutBlendEquationEXT(GLenum mode) { onutGLAPI.onutBlendEquationEXT(mode); }
ONUT_FORCE_INLINE void _onutBlendEquationIndexedAMD(GLuint buf, GLenum mode) { onutGLAPI.onutBlendEquationIndexedAMD(buf, mode); }
ONUT_FORCE_INLINE void _onutBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha) { onutGLAPI.onutBlendEquationSeparate(modeRGB, modeAlpha); }
ONUT_FORCE_INLINE void _onutBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha) { onutGLAPI.onutBlendEquationSeparateEXT(modeRGB, modeAlpha); }
ONUT_FORCE_INLINE void _onutBlendEquationSeparateIndexedAMD(GLuint buf, GLenum modeRGB, GLenum modeAlpha) { onutGLAPI.onutBlendEquationSeparateIndexedAMD(buf, modeRGB, modeAlpha); }
ONUT_FORCE_INLINE void _onutBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha) { onutGLAPI.onutBlendEquationSeparatei(buf, modeRGB, modeAlpha); }
ONUT_FORCE_INLINE void _onutBlendEquationSeparateiARB(GLuint buf, GLenum modeRGB, GLenum modeAlpha) { onutGLAPI.onutBlendEquationSeparateiARB(buf, modeRGB, modeAlpha); }
ONUT_FORCE_INLINE void _onutBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha) { onutGLAPI.onutBlendEquationSeparateiEXT(buf, modeRGB, modeAlpha); }
ONUT_FORCE_INLINE void _onutBlendEquationSeparateiOES(GLuint buf, GLenum modeRGB, GLenum modeAlpha) { onutGLAPI.onutBlendEquationSeparateiOES(buf, modeRGB, modeAlpha); }
ONUT_FORCE_INLINE void _onutBlendEquationi(GLuint buf, GLenum mode) { onutGLAPI.onutBlendEquationi(buf, mode); }
ONUT_FORCE_INLINE void _onutBlendEquationiARB(GLuint buf, GLenum mode) { onutGLAPI.onutBlendEquationiARB(buf, mode); }
ONUT_FORCE_INLINE void _onutBlendEquationiEXT(GLuint buf, GLenum mode) { onutGLAPI.onutBlendEquationiEXT(buf, mode); }
ONUT_FORCE_INLINE void _onutBlendEquationiOES(GLuint buf, GLenum mode) { onutGLAPI.onutBlendEquationiOES(buf, mode); }
ONUT_FORCE_INLINE void _onutBlendFunc(GLenum sfactor, GLenum dfactor) { onutGLAPI.onutBlendFunc(sfactor, dfactor); }
ONUT_FORCE_INLINE void _onutBlendFuncIndexedAMD(GLuint buf, GLenum src, GLenum dst) { onutGLAPI.onutBlendFuncIndexedAMD(buf, src, dst); }
ONUT_FORCE_INLINE void _onutBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha) { onutGLAPI.onutBlendFuncSeparate(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha); }
ONUT_FORCE_INLINE void _onutBlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha) { onutGLAPI.onutBlendFuncSeparateEXT(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha); }
ONUT_FORCE_INLINE void _onutBlendFuncSeparateINGR(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha) { onutGLAPI.onutBlendFuncSeparateINGR(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha); }
ONUT_FORCE_INLINE void _onutBlendFuncSeparateIndexedAMD(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) { onutGLAPI.onutBlendFuncSeparateIndexedAMD(buf, srcRGB, dstRGB, srcAlpha, dstAlpha); }
ONUT_FORCE_INLINE void _onutBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) { onutGLAPI.onutBlendFuncSeparatei(buf, srcRGB, dstRGB, srcAlpha, dstAlpha); }
ONUT_FORCE_INLINE void _onutBlendFuncSeparateiARB(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) { onutGLAPI.onutBlendFuncSeparateiARB(buf, srcRGB, dstRGB, srcAlpha, dstAlpha); }
ONUT_FORCE_INLINE void _onutBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) { onutGLAPI.onutBlendFuncSeparateiEXT(buf, srcRGB, dstRGB, srcAlpha, dstAlpha); }
ONUT_FORCE_INLINE void _onutBlendFuncSeparateiOES(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) { onutGLAPI.onutBlendFuncSeparateiOES(buf, srcRGB, dstRGB, srcAlpha, dstAlpha); }
ONUT_FORCE_INLINE void _onutBlendFunci(GLuint buf, GLenum src, GLenum dst) { onutGLAPI.onutBlendFunci(buf, src, dst); }
ONUT_FORCE_INLINE void _onutBlendFunciARB(GLuint buf, GLenum src, GLenum dst) { onutGLAPI.onutBlendFunciARB(buf, src, dst); }
ONUT_FORCE_INLINE void _onutBlendFunciEXT(GLuint buf, GLenum src, GLenum dst) { onutGLAPI.onutBlendFunciEXT(buf, src, dst); }
ONUT_FORCE_INLINE void _onutBlendFunciOES(GLuint buf, GLenum src, GLenum dst) { onutGLAPI.onutBlendFunciOES(buf, src, dst); }
ONUT_FORCE_INLINE void _onutBlendParameteriNV(GLenum pname, GLint value) { onutGLAPI.onutBlendParameteriNV(pname, value); }
ONUT_FORCE_INLINE void _onutBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) { onutGLAPI.onutBlitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter); }
ONUT_FORCE_INLINE void _onutBlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) { onutGLAPI.onutBlitFramebufferANGLE(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter); }
ONUT_FORCE_INLINE void _onutBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) { onutGLAPI.onutBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter); }
ONUT_FORCE_INLINE void _onutBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) { onutGLAPI.onutBlitFramebufferNV(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter); }
ONUT_FORCE_INLINE void _onutBlitNamedFramebuffer(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) { onutGLAPI.onutBlitNamedFramebuffer(readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter); }
ONUT_FORCE_INLINE void _onutBufferAddressRangeNV(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length) { onutGLAPI.onutBufferAddressRangeNV(pname, index, address, length); }
ONUT_FORCE_INLINE void _onutBufferData(GLenum target, GLsizeiptr size, const void *data, GLenum usage) { onutGLAPI.onutBufferData(target, size, data, usage); }
ONUT_FORCE_INLINE void _onutBufferDataARB(GLenum target, GLsizeiptrARB size, const void *data, GLenum usage) { onutGLAPI.onutBufferDataARB(target, size, data, usage); }
ONUT_FORCE_INLINE void _onutBufferPageCommitmentARB(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit) { onutGLAPI.onutBufferPageCommitmentARB(target, offset, size, commit); }
ONUT_FORCE_INLINE void _onutBufferParameteriAPPLE(GLenum target, GLenum pname, GLint param) { onutGLAPI.onutBufferParameteriAPPLE(target, pname, param); }
ONUT_FORCE_INLINE GLuint _onutBufferRegionEnabled(void) { return onutGLAPI.onutBufferRegionEnabled(); }
ONUT_FORCE_INLINE void _onutBufferStorage(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags) { onutGLAPI.onutBufferStorage(target, size, data, flags); }
ONUT_FORCE_INLINE void _onutBufferStorageEXT(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags) { onutGLAPI.onutBufferStorageEXT(target, size, data, flags); }
ONUT_FORCE_INLINE void _onutBufferStorageExternalEXT(GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags) { onutGLAPI.onutBufferStorageExternalEXT(target, offset, size, clientBuffer, flags); }
ONUT_FORCE_INLINE void _onutBufferStorageMemEXT(GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset) { onutGLAPI.onutBufferStorageMemEXT(target, size, memory, offset); }
ONUT_FORCE_INLINE void _onutBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void *data) { onutGLAPI.onutBufferSubData(target, offset, size, data); }
ONUT_FORCE_INLINE void _onutBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data) { onutGLAPI.onutBufferSubDataARB(target, offset, size, data); }
ONUT_FORCE_INLINE void _onutCallCommandListNV(GLuint list) { onutGLAPI.onutCallCommandListNV(list); }
ONUT_FORCE_INLINE GLenum _onutCheckFramebufferStatus(GLenum target) { return onutGLAPI.onutCheckFramebufferStatus(target); }
ONUT_FORCE_INLINE GLenum _onutCheckFramebufferStatusEXT(GLenum target) { return onutGLAPI.onutCheckFramebufferStatusEXT(target); }
ONUT_FORCE_INLINE GLenum _onutCheckNamedFramebufferStatus(GLuint framebuffer, GLenum target) { return onutGLAPI.onutCheckNamedFramebufferStatus(framebuffer, target); }
ONUT_FORCE_INLINE GLenum _onutCheckNamedFramebufferStatusEXT(GLuint framebuffer, GLenum target) { return onutGLAPI.onutCheckNamedFramebufferStatusEXT(framebuffer, target); }
ONUT_FORCE_INLINE void _onutClampColor(GLenum target, GLenum clamp) { onutGLAPI.onutClampColor(target, clamp); }
ONUT_FORCE_INLINE void _onutClampColorARB(GLenum target, GLenum clamp) { onutGLAPI.onutClampColorARB(target, clamp); }
ONUT_FORCE_INLINE void _onutClear(GLbitfield mask) { onutGLAPI.onutClear(mask); }
ONUT_FORCE_INLINE void _onutClearAccumxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) { onutGLAPI.onutClearAccumxOES(red, green, blue, alpha); }
ONUT_FORCE_INLINE void _onutClearBufferData(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data) { onutGLAPI.onutClearBufferData(target, internalformat, format, type, data); }
ONUT_FORCE_INLINE void _onutClearBufferSubData(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data) { onutGLAPI.onutClearBufferSubData(target, internalformat, offset, size, format, type, data); }
ONUT_FORCE_INLINE void _onutClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil) { onutGLAPI.onutClearBufferfi(buffer, drawbuffer, depth, stencil); }
ONUT_FORCE_INLINE void _onutClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat *value) { onutGLAPI.onutClearBufferfv(buffer, drawbuffer, value); }
ONUT_FORCE_INLINE void _onutClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint *value) { onutGLAPI.onutClearBufferiv(buffer, drawbuffer, value); }
ONUT_FORCE_INLINE void _onutClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint *value) { onutGLAPI.onutClearBufferuiv(buffer, drawbuffer, value); }
ONUT_FORCE_INLINE void _onutClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) { onutGLAPI.onutClearColor(red, green, blue, alpha); }
ONUT_FORCE_INLINE void _onutClearColorIiEXT(GLint red, GLint green, GLint blue, GLint alpha) { onutGLAPI.onutClearColorIiEXT(red, green, blue, alpha); }
ONUT_FORCE_INLINE void _onutClearColorIuiEXT(GLuint red, GLuint green, GLuint blue, GLuint alpha) { onutGLAPI.onutClearColorIuiEXT(red, green, blue, alpha); }
ONUT_FORCE_INLINE void _onutClearColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) { onutGLAPI.onutClearColorxOES(red, green, blue, alpha); }
ONUT_FORCE_INLINE void _onutClearDepth(GLdouble depth) { onutGLAPI.onutClearDepth(depth); }
ONUT_FORCE_INLINE void _onutClearDepthdNV(GLdouble depth) { onutGLAPI.onutClearDepthdNV(depth); }
ONUT_FORCE_INLINE void _onutClearDepthf(GLfloat d) { onutGLAPI.onutClearDepthf(d); }
ONUT_FORCE_INLINE void _onutClearDepthfOES(GLclampf depth) { onutGLAPI.onutClearDepthfOES(depth); }
ONUT_FORCE_INLINE void _onutClearDepthxOES(GLfixed depth) { onutGLAPI.onutClearDepthxOES(depth); }
ONUT_FORCE_INLINE void _onutClearNamedBufferData(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data) { onutGLAPI.onutClearNamedBufferData(buffer, internalformat, format, type, data); }
ONUT_FORCE_INLINE void _onutClearNamedBufferDataEXT(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data) { onutGLAPI.onutClearNamedBufferDataEXT(buffer, internalformat, format, type, data); }
ONUT_FORCE_INLINE void _onutClearNamedBufferSubData(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data) { onutGLAPI.onutClearNamedBufferSubData(buffer, internalformat, offset, size, format, type, data); }
ONUT_FORCE_INLINE void _onutClearNamedBufferSubDataEXT(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data) { onutGLAPI.onutClearNamedBufferSubDataEXT(buffer, internalformat, offset, size, format, type, data); }
ONUT_FORCE_INLINE void _onutClearNamedFramebufferfi(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil) { onutGLAPI.onutClearNamedFramebufferfi(framebuffer, buffer, drawbuffer, depth, stencil); }
ONUT_FORCE_INLINE void _onutClearNamedFramebufferfv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value) { onutGLAPI.onutClearNamedFramebufferfv(framebuffer, buffer, drawbuffer, value); }
ONUT_FORCE_INLINE void _onutClearNamedFramebufferiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value) { onutGLAPI.onutClearNamedFramebufferiv(framebuffer, buffer, drawbuffer, value); }
ONUT_FORCE_INLINE void _onutClearNamedFramebufferuiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value) { onutGLAPI.onutClearNamedFramebufferuiv(framebuffer, buffer, drawbuffer, value); }
ONUT_FORCE_INLINE void _onutClearPixelLocalStorageuiEXT(GLsizei offset, GLsizei n, const GLuint *values) { onutGLAPI.onutClearPixelLocalStorageuiEXT(offset, n, values); }
ONUT_FORCE_INLINE void _onutClearStencil(GLint s) { onutGLAPI.onutClearStencil(s); }
ONUT_FORCE_INLINE void _onutClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type, const void *data) { onutGLAPI.onutClearTexImage(texture, level, format, type, data); }
ONUT_FORCE_INLINE void _onutClearTexImageEXT(GLuint texture, GLint level, GLenum format, GLenum type, const void *data) { onutGLAPI.onutClearTexImageEXT(texture, level, format, type, data); }
ONUT_FORCE_INLINE void _onutClearTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data) { onutGLAPI.onutClearTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data); }
ONUT_FORCE_INLINE void _onutClearTexSubImageEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data) { onutGLAPI.onutClearTexSubImageEXT(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data); }
ONUT_FORCE_INLINE void _onutClientActiveTexture(GLenum texture) { onutGLAPI.onutClientActiveTexture(texture); }
ONUT_FORCE_INLINE void _onutClientActiveTextureARB(GLenum texture) { onutGLAPI.onutClientActiveTextureARB(texture); }
ONUT_FORCE_INLINE void _onutClientActiveVertexStreamATI(GLenum stream) { onutGLAPI.onutClientActiveVertexStreamATI(stream); }
ONUT_FORCE_INLINE void _onutClientAttribDefaultEXT(GLbitfield mask) { onutGLAPI.onutClientAttribDefaultEXT(mask); }
ONUT_FORCE_INLINE GLenum _onutClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout) { return onutGLAPI.onutClientWaitSync(sync, flags, timeout); }
ONUT_FORCE_INLINE GLenum _onutClientWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout) { return onutGLAPI.onutClientWaitSyncAPPLE(sync, flags, timeout); }
ONUT_FORCE_INLINE void _onutClipControl(GLenum origin, GLenum depth) { onutGLAPI.onutClipControl(origin, depth); }
ONUT_FORCE_INLINE void _onutClipPlanefOES(GLenum plane, const GLfloat *equation) { onutGLAPI.onutClipPlanefOES(plane, equation); }
ONUT_FORCE_INLINE void _onutClipPlanexOES(GLenum plane, const GLfixed *equation) { onutGLAPI.onutClipPlanexOES(plane, equation); }
ONUT_FORCE_INLINE void _onutColor3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutColor3fVertex3fSUN(r, g, b, x, y, z); }
ONUT_FORCE_INLINE void _onutColor3fVertex3fvSUN(const GLfloat *c, const GLfloat *v) { onutGLAPI.onutColor3fVertex3fvSUN(c, v); }
ONUT_FORCE_INLINE void _onutColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue) { onutGLAPI.onutColor3hNV(red, green, blue); }
ONUT_FORCE_INLINE void _onutColor3hvNV(const GLhalfNV *v) { onutGLAPI.onutColor3hvNV(v); }
ONUT_FORCE_INLINE void _onutColor3xOES(GLfixed red, GLfixed green, GLfixed blue) { onutGLAPI.onutColor3xOES(red, green, blue); }
ONUT_FORCE_INLINE void _onutColor3xvOES(const GLfixed *components) { onutGLAPI.onutColor3xvOES(components); }
ONUT_FORCE_INLINE void _onutColor4fNormal3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutColor4fNormal3fVertex3fSUN(r, g, b, a, nx, ny, nz, x, y, z); }
ONUT_FORCE_INLINE void _onutColor4fNormal3fVertex3fvSUN(const GLfloat *c, const GLfloat *n, const GLfloat *v) { onutGLAPI.onutColor4fNormal3fVertex3fvSUN(c, n, v); }
ONUT_FORCE_INLINE void _onutColor4hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha) { onutGLAPI.onutColor4hNV(red, green, blue, alpha); }
ONUT_FORCE_INLINE void _onutColor4hvNV(const GLhalfNV *v) { onutGLAPI.onutColor4hvNV(v); }
ONUT_FORCE_INLINE void _onutColor4ubVertex2fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y) { onutGLAPI.onutColor4ubVertex2fSUN(r, g, b, a, x, y); }
ONUT_FORCE_INLINE void _onutColor4ubVertex2fvSUN(const GLubyte *c, const GLfloat *v) { onutGLAPI.onutColor4ubVertex2fvSUN(c, v); }
ONUT_FORCE_INLINE void _onutColor4ubVertex3fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutColor4ubVertex3fSUN(r, g, b, a, x, y, z); }
ONUT_FORCE_INLINE void _onutColor4ubVertex3fvSUN(const GLubyte *c, const GLfloat *v) { onutGLAPI.onutColor4ubVertex3fvSUN(c, v); }
ONUT_FORCE_INLINE void _onutColor4xOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) { onutGLAPI.onutColor4xOES(red, green, blue, alpha); }
ONUT_FORCE_INLINE void _onutColor4xvOES(const GLfixed *components) { onutGLAPI.onutColor4xvOES(components); }
ONUT_FORCE_INLINE void _onutColorFormatNV(GLint size, GLenum type, GLsizei stride) { onutGLAPI.onutColorFormatNV(size, type, stride); }
ONUT_FORCE_INLINE void _onutColorFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod) { onutGLAPI.onutColorFragmentOp1ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod); }
ONUT_FORCE_INLINE void _onutColorFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod) { onutGLAPI.onutColorFragmentOp2ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod); }
ONUT_FORCE_INLINE void _onutColorFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod) { onutGLAPI.onutColorFragmentOp3ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod); }
ONUT_FORCE_INLINE void _onutColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha) { onutGLAPI.onutColorMask(red, green, blue, alpha); }
ONUT_FORCE_INLINE void _onutColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) { onutGLAPI.onutColorMaskIndexedEXT(index, r, g, b, a); }
ONUT_FORCE_INLINE void _onutColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) { onutGLAPI.onutColorMaski(index, r, g, b, a); }
ONUT_FORCE_INLINE void _onutColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) { onutGLAPI.onutColorMaskiEXT(index, r, g, b, a); }
ONUT_FORCE_INLINE void _onutColorMaskiOES(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) { onutGLAPI.onutColorMaskiOES(index, r, g, b, a); }
ONUT_FORCE_INLINE void _onutColorP3ui(GLenum type, GLuint color) { onutGLAPI.onutColorP3ui(type, color); }
ONUT_FORCE_INLINE void _onutColorP3uiv(GLenum type, const GLuint *color) { onutGLAPI.onutColorP3uiv(type, color); }
ONUT_FORCE_INLINE void _onutColorP4ui(GLenum type, GLuint color) { onutGLAPI.onutColorP4ui(type, color); }
ONUT_FORCE_INLINE void _onutColorP4uiv(GLenum type, const GLuint *color) { onutGLAPI.onutColorP4uiv(type, color); }
ONUT_FORCE_INLINE void _onutColorPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer) { onutGLAPI.onutColorPointerEXT(size, type, stride, count, pointer); }
ONUT_FORCE_INLINE void _onutColorPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride) { onutGLAPI.onutColorPointerListIBM(size, type, stride, pointer, ptrstride); }
ONUT_FORCE_INLINE void _onutColorPointervINTEL(GLint size, GLenum type, const void **pointer) { onutGLAPI.onutColorPointervINTEL(size, type, pointer); }
ONUT_FORCE_INLINE void _onutColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data) { onutGLAPI.onutColorSubTable(target, start, count, format, type, data); }
ONUT_FORCE_INLINE void _onutColorSubTableEXT(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data) { onutGLAPI.onutColorSubTableEXT(target, start, count, format, type, data); }
ONUT_FORCE_INLINE void _onutColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table) { onutGLAPI.onutColorTable(target, internalformat, width, format, type, table); }
ONUT_FORCE_INLINE void _onutColorTableEXT(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table) { onutGLAPI.onutColorTableEXT(target, internalFormat, width, format, type, table); }
ONUT_FORCE_INLINE void _onutColorTableParameterfv(GLenum target, GLenum pname, const GLfloat *params) { onutGLAPI.onutColorTableParameterfv(target, pname, params); }
ONUT_FORCE_INLINE void _onutColorTableParameterfvSGI(GLenum target, GLenum pname, const GLfloat *params) { onutGLAPI.onutColorTableParameterfvSGI(target, pname, params); }
ONUT_FORCE_INLINE void _onutColorTableParameteriv(GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutColorTableParameteriv(target, pname, params); }
ONUT_FORCE_INLINE void _onutColorTableParameterivSGI(GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutColorTableParameterivSGI(target, pname, params); }
ONUT_FORCE_INLINE void _onutColorTableSGI(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table) { onutGLAPI.onutColorTableSGI(target, internalformat, width, format, type, table); }
ONUT_FORCE_INLINE void _onutCombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage) { onutGLAPI.onutCombinerInputNV(stage, portion, variable, input, mapping, componentUsage); }
ONUT_FORCE_INLINE void _onutCombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum) { onutGLAPI.onutCombinerOutputNV(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum); }
ONUT_FORCE_INLINE void _onutCombinerParameterfNV(GLenum pname, GLfloat param) { onutGLAPI.onutCombinerParameterfNV(pname, param); }
ONUT_FORCE_INLINE void _onutCombinerParameterfvNV(GLenum pname, const GLfloat *params) { onutGLAPI.onutCombinerParameterfvNV(pname, params); }
ONUT_FORCE_INLINE void _onutCombinerParameteriNV(GLenum pname, GLint param) { onutGLAPI.onutCombinerParameteriNV(pname, param); }
ONUT_FORCE_INLINE void _onutCombinerParameterivNV(GLenum pname, const GLint *params) { onutGLAPI.onutCombinerParameterivNV(pname, params); }
ONUT_FORCE_INLINE void _onutCombinerStageParameterfvNV(GLenum stage, GLenum pname, const GLfloat *params) { onutGLAPI.onutCombinerStageParameterfvNV(stage, pname, params); }
ONUT_FORCE_INLINE void _onutCommandListSegmentsNV(GLuint list, GLuint segments) { onutGLAPI.onutCommandListSegmentsNV(list, segments); }
ONUT_FORCE_INLINE void _onutCompileCommandListNV(GLuint list) { onutGLAPI.onutCompileCommandListNV(list); }
ONUT_FORCE_INLINE void _onutCompileShader(GLuint shader) { onutGLAPI.onutCompileShader(shader); }
ONUT_FORCE_INLINE void _onutCompileShaderARB(GLhandleARB shaderObj) { onutGLAPI.onutCompileShaderARB(shaderObj); }
ONUT_FORCE_INLINE void _onutCompileShaderIncludeARB(GLuint shader, GLsizei count, const GLchar *const *path, const GLint *length) { onutGLAPI.onutCompileShaderIncludeARB(shader, count, path, length); }
ONUT_FORCE_INLINE void _onutCompressedMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits) { onutGLAPI.onutCompressedMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, imageSize, bits); }
ONUT_FORCE_INLINE void _onutCompressedMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits) { onutGLAPI.onutCompressedMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, imageSize, bits); }
ONUT_FORCE_INLINE void _onutCompressedMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits) { onutGLAPI.onutCompressedMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, imageSize, bits); }
ONUT_FORCE_INLINE void _onutCompressedMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits) { onutGLAPI.onutCompressedMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, imageSize, bits); }
ONUT_FORCE_INLINE void _onutCompressedMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits) { onutGLAPI.onutCompressedMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits); }
ONUT_FORCE_INLINE void _onutCompressedMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits) { onutGLAPI.onutCompressedMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits); }
ONUT_FORCE_INLINE void _onutCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexImage1DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexImage1DARB(target, level, internalformat, width, border, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexImage2DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexImage2DARB(target, level, internalformat, width, height, border, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexImage3DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexImage3DARB(target, level, internalformat, width, height, depth, border, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexImage3DOES(target, level, internalformat, width, height, depth, border, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexSubImage1DARB(target, level, xoffset, width, format, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexSubImage2DARB(target, level, xoffset, yoffset, width, height, format, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexSubImage3DARB(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits) { onutGLAPI.onutCompressedTextureImage1DEXT(texture, target, level, internalformat, width, border, imageSize, bits); }
ONUT_FORCE_INLINE void _onutCompressedTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits) { onutGLAPI.onutCompressedTextureImage2DEXT(texture, target, level, internalformat, width, height, border, imageSize, bits); }
ONUT_FORCE_INLINE void _onutCompressedTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits) { onutGLAPI.onutCompressedTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, imageSize, bits); }
ONUT_FORCE_INLINE void _onutCompressedTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTextureSubImage1D(texture, level, xoffset, width, format, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits) { onutGLAPI.onutCompressedTextureSubImage1DEXT(texture, target, level, xoffset, width, format, imageSize, bits); }
ONUT_FORCE_INLINE void _onutCompressedTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits) { onutGLAPI.onutCompressedTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits); }
ONUT_FORCE_INLINE void _onutCompressedTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data) { onutGLAPI.onutCompressedTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data); }
ONUT_FORCE_INLINE void _onutCompressedTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits) { onutGLAPI.onutCompressedTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits); }
ONUT_FORCE_INLINE void _onutConservativeRasterParameterfNV(GLenum pname, GLfloat value) { onutGLAPI.onutConservativeRasterParameterfNV(pname, value); }
ONUT_FORCE_INLINE void _onutConservativeRasterParameteriNV(GLenum pname, GLint param) { onutGLAPI.onutConservativeRasterParameteriNV(pname, param); }
ONUT_FORCE_INLINE void _onutConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image) { onutGLAPI.onutConvolutionFilter1D(target, internalformat, width, format, type, image); }
ONUT_FORCE_INLINE void _onutConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image) { onutGLAPI.onutConvolutionFilter1DEXT(target, internalformat, width, format, type, image); }
ONUT_FORCE_INLINE void _onutConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image) { onutGLAPI.onutConvolutionFilter2D(target, internalformat, width, height, format, type, image); }
ONUT_FORCE_INLINE void _onutConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image) { onutGLAPI.onutConvolutionFilter2DEXT(target, internalformat, width, height, format, type, image); }
ONUT_FORCE_INLINE void _onutConvolutionParameterf(GLenum target, GLenum pname, GLfloat params) { onutGLAPI.onutConvolutionParameterf(target, pname, params); }
ONUT_FORCE_INLINE void _onutConvolutionParameterfEXT(GLenum target, GLenum pname, GLfloat params) { onutGLAPI.onutConvolutionParameterfEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutConvolutionParameterfv(GLenum target, GLenum pname, const GLfloat *params) { onutGLAPI.onutConvolutionParameterfv(target, pname, params); }
ONUT_FORCE_INLINE void _onutConvolutionParameterfvEXT(GLenum target, GLenum pname, const GLfloat *params) { onutGLAPI.onutConvolutionParameterfvEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutConvolutionParameteri(GLenum target, GLenum pname, GLint params) { onutGLAPI.onutConvolutionParameteri(target, pname, params); }
ONUT_FORCE_INLINE void _onutConvolutionParameteriEXT(GLenum target, GLenum pname, GLint params) { onutGLAPI.onutConvolutionParameteriEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutConvolutionParameteriv(GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutConvolutionParameteriv(target, pname, params); }
ONUT_FORCE_INLINE void _onutConvolutionParameterivEXT(GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutConvolutionParameterivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutConvolutionParameterxOES(GLenum target, GLenum pname, GLfixed param) { onutGLAPI.onutConvolutionParameterxOES(target, pname, param); }
ONUT_FORCE_INLINE void _onutConvolutionParameterxvOES(GLenum target, GLenum pname, const GLfixed *params) { onutGLAPI.onutConvolutionParameterxvOES(target, pname, params); }
ONUT_FORCE_INLINE void _onutCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) { onutGLAPI.onutCopyBufferSubData(readTarget, writeTarget, readOffset, writeOffset, size); }
ONUT_FORCE_INLINE void _onutCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) { onutGLAPI.onutCopyBufferSubDataNV(readTarget, writeTarget, readOffset, writeOffset, size); }
ONUT_FORCE_INLINE void _onutCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width) { onutGLAPI.onutCopyColorSubTable(target, start, x, y, width); }
ONUT_FORCE_INLINE void _onutCopyColorSubTableEXT(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width) { onutGLAPI.onutCopyColorSubTableEXT(target, start, x, y, width); }
ONUT_FORCE_INLINE void _onutCopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) { onutGLAPI.onutCopyColorTable(target, internalformat, x, y, width); }
ONUT_FORCE_INLINE void _onutCopyColorTableSGI(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) { onutGLAPI.onutCopyColorTableSGI(target, internalformat, x, y, width); }
ONUT_FORCE_INLINE void _onutCopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) { onutGLAPI.onutCopyConvolutionFilter1D(target, internalformat, x, y, width); }
ONUT_FORCE_INLINE void _onutCopyConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) { onutGLAPI.onutCopyConvolutionFilter1DEXT(target, internalformat, x, y, width); }
ONUT_FORCE_INLINE void _onutCopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyConvolutionFilter2D(target, internalformat, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCopyConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyConvolutionFilter2DEXT(target, internalformat, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth) { onutGLAPI.onutCopyImageSubData(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth); }
ONUT_FORCE_INLINE void _onutCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth) { onutGLAPI.onutCopyImageSubDataEXT(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth); }
ONUT_FORCE_INLINE void _onutCopyImageSubDataNV(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth) { onutGLAPI.onutCopyImageSubDataNV(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth); }
ONUT_FORCE_INLINE void _onutCopyImageSubDataOES(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth) { onutGLAPI.onutCopyImageSubDataOES(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth); }
ONUT_FORCE_INLINE void _onutCopyMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) { onutGLAPI.onutCopyMultiTexImage1DEXT(texunit, target, level, internalformat, x, y, width, border); }
ONUT_FORCE_INLINE void _onutCopyMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) { onutGLAPI.onutCopyMultiTexImage2DEXT(texunit, target, level, internalformat, x, y, width, height, border); }
ONUT_FORCE_INLINE void _onutCopyMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) { onutGLAPI.onutCopyMultiTexSubImage1DEXT(texunit, target, level, xoffset, x, y, width); }
ONUT_FORCE_INLINE void _onutCopyMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCopyMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) { onutGLAPI.onutCopyNamedBufferSubData(readBuffer, writeBuffer, readOffset, writeOffset, size); }
ONUT_FORCE_INLINE void _onutCopyPathNV(GLuint resultPath, GLuint srcPath) { onutGLAPI.onutCopyPathNV(resultPath, srcPath); }
ONUT_FORCE_INLINE void _onutCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) { onutGLAPI.onutCopyTexImage1D(target, level, internalformat, x, y, width, border); }
ONUT_FORCE_INLINE void _onutCopyTexImage1DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) { onutGLAPI.onutCopyTexImage1DEXT(target, level, internalformat, x, y, width, border); }
ONUT_FORCE_INLINE void _onutCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) { onutGLAPI.onutCopyTexImage2D(target, level, internalformat, x, y, width, height, border); }
ONUT_FORCE_INLINE void _onutCopyTexImage2DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) { onutGLAPI.onutCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border); }
ONUT_FORCE_INLINE void _onutCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) { onutGLAPI.onutCopyTexSubImage1D(target, level, xoffset, x, y, width); }
ONUT_FORCE_INLINE void _onutCopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) { onutGLAPI.onutCopyTexSubImage1DEXT(target, level, xoffset, x, y, width); }
ONUT_FORCE_INLINE void _onutCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCopyTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) { onutGLAPI.onutCopyTextureImage1DEXT(texture, target, level, internalformat, x, y, width, border); }
ONUT_FORCE_INLINE void _onutCopyTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) { onutGLAPI.onutCopyTextureImage2DEXT(texture, target, level, internalformat, x, y, width, height, border); }
ONUT_FORCE_INLINE void _onutCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount) { onutGLAPI.onutCopyTextureLevelsAPPLE(destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount); }
ONUT_FORCE_INLINE void _onutCopyTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) { onutGLAPI.onutCopyTextureSubImage1D(texture, level, xoffset, x, y, width); }
ONUT_FORCE_INLINE void _onutCopyTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) { onutGLAPI.onutCopyTextureSubImage1DEXT(texture, target, level, xoffset, x, y, width); }
ONUT_FORCE_INLINE void _onutCopyTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyTextureSubImage2D(texture, level, xoffset, yoffset, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCopyTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCopyTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCopyTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutCopyTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height); }
ONUT_FORCE_INLINE void _onutCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues) { onutGLAPI.onutCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues); }
ONUT_FORCE_INLINE void _onutCoverFillPathNV(GLuint path, GLenum coverMode) { onutGLAPI.onutCoverFillPathNV(path, coverMode); }
ONUT_FORCE_INLINE void _onutCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues) { onutGLAPI.onutCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues); }
ONUT_FORCE_INLINE void _onutCoverStrokePathNV(GLuint path, GLenum coverMode) { onutGLAPI.onutCoverStrokePathNV(path, coverMode); }
ONUT_FORCE_INLINE void _onutCoverageMaskNV(GLboolean mask) { onutGLAPI.onutCoverageMaskNV(mask); }
ONUT_FORCE_INLINE void _onutCoverageModulationNV(GLenum components) { onutGLAPI.onutCoverageModulationNV(components); }
ONUT_FORCE_INLINE void _onutCoverageModulationTableNV(GLsizei n, const GLfloat *v) { onutGLAPI.onutCoverageModulationTableNV(n, v); }
ONUT_FORCE_INLINE void _onutCoverageOperationNV(GLenum operation) { onutGLAPI.onutCoverageOperationNV(operation); }
ONUT_FORCE_INLINE void _onutCreateBuffers(GLsizei n, GLuint *buffers) { onutGLAPI.onutCreateBuffers(n, buffers); }
ONUT_FORCE_INLINE void _onutCreateCommandListsNV(GLsizei n, GLuint *lists) { onutGLAPI.onutCreateCommandListsNV(n, lists); }
ONUT_FORCE_INLINE void _onutCreateFramebuffers(GLsizei n, GLuint *framebuffers) { onutGLAPI.onutCreateFramebuffers(n, framebuffers); }
ONUT_FORCE_INLINE void _onutCreateMemoryObjectsEXT(GLsizei n, GLuint *memoryObjects) { onutGLAPI.onutCreateMemoryObjectsEXT(n, memoryObjects); }
ONUT_FORCE_INLINE void _onutCreatePerfQueryINTEL(GLuint queryId, GLuint *queryHandle) { onutGLAPI.onutCreatePerfQueryINTEL(queryId, queryHandle); }
ONUT_FORCE_INLINE GLuint _onutCreateProgram(void) { return onutGLAPI.onutCreateProgram(); }
ONUT_FORCE_INLINE GLhandleARB _onutCreateProgramObjectARB(void) { return onutGLAPI.onutCreateProgramObjectARB(); }
ONUT_FORCE_INLINE void _onutCreateProgramPipelines(GLsizei n, GLuint *pipelines) { onutGLAPI.onutCreateProgramPipelines(n, pipelines); }
ONUT_FORCE_INLINE void _onutCreateQueries(GLenum target, GLsizei n, GLuint *ids) { onutGLAPI.onutCreateQueries(target, n, ids); }
ONUT_FORCE_INLINE void _onutCreateRenderbuffers(GLsizei n, GLuint *renderbuffers) { onutGLAPI.onutCreateRenderbuffers(n, renderbuffers); }
ONUT_FORCE_INLINE void _onutCreateSamplers(GLsizei n, GLuint *samplers) { onutGLAPI.onutCreateSamplers(n, samplers); }
ONUT_FORCE_INLINE GLuint _onutCreateShader(GLenum type) { return onutGLAPI.onutCreateShader(type); }
ONUT_FORCE_INLINE GLhandleARB _onutCreateShaderObjectARB(GLenum shaderType) { return onutGLAPI.onutCreateShaderObjectARB(shaderType); }
ONUT_FORCE_INLINE GLuint _onutCreateShaderProgramEXT(GLenum type, const GLchar *string) { return onutGLAPI.onutCreateShaderProgramEXT(type, string); }
ONUT_FORCE_INLINE GLuint _onutCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const *strings) { return onutGLAPI.onutCreateShaderProgramv(type, count, strings); }
ONUT_FORCE_INLINE GLuint _onutCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar **strings) { return onutGLAPI.onutCreateShaderProgramvEXT(type, count, strings); }
ONUT_FORCE_INLINE void _onutCreateStatesNV(GLsizei n, GLuint *states) { onutGLAPI.onutCreateStatesNV(n, states); }
ONUT_FORCE_INLINE GLsync _onutCreateSyncFromCLeventARB(struct _cl_context *context, struct _cl_event *event, GLbitfield flags) { return onutGLAPI.onutCreateSyncFromCLeventARB(context, event, flags); }
ONUT_FORCE_INLINE void _onutCreateTextures(GLenum target, GLsizei n, GLuint *textures) { onutGLAPI.onutCreateTextures(target, n, textures); }
ONUT_FORCE_INLINE void _onutCreateTransformFeedbacks(GLsizei n, GLuint *ids) { onutGLAPI.onutCreateTransformFeedbacks(n, ids); }
ONUT_FORCE_INLINE void _onutCreateVertexArrays(GLsizei n, GLuint *arrays) { onutGLAPI.onutCreateVertexArrays(n, arrays); }
ONUT_FORCE_INLINE void _onutCullFace(GLenum mode) { onutGLAPI.onutCullFace(mode); }
ONUT_FORCE_INLINE void _onutCullParameterdvEXT(GLenum pname, GLdouble *params) { onutGLAPI.onutCullParameterdvEXT(pname, params); }
ONUT_FORCE_INLINE void _onutCullParameterfvEXT(GLenum pname, GLfloat *params) { onutGLAPI.onutCullParameterfvEXT(pname, params); }
ONUT_FORCE_INLINE void _onutCurrentPaletteMatrixARB(GLint index) { onutGLAPI.onutCurrentPaletteMatrixARB(index); }
ONUT_FORCE_INLINE void _onutDebugMessageCallback(GLDEBUGPROC callback, const void *userParam) { onutGLAPI.onutDebugMessageCallback(callback, userParam); }
ONUT_FORCE_INLINE void _onutDebugMessageCallbackAMD(GLDEBUGPROCAMD callback, void *userParam) { onutGLAPI.onutDebugMessageCallbackAMD(callback, userParam); }
ONUT_FORCE_INLINE void _onutDebugMessageCallbackARB(GLDEBUGPROCARB callback, const void *userParam) { onutGLAPI.onutDebugMessageCallbackARB(callback, userParam); }
ONUT_FORCE_INLINE void _onutDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void *userParam) { onutGLAPI.onutDebugMessageCallbackKHR(callback, userParam); }
ONUT_FORCE_INLINE void _onutDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled) { onutGLAPI.onutDebugMessageControl(source, type, severity, count, ids, enabled); }
ONUT_FORCE_INLINE void _onutDebugMessageControlARB(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled) { onutGLAPI.onutDebugMessageControlARB(source, type, severity, count, ids, enabled); }
ONUT_FORCE_INLINE void _onutDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled) { onutGLAPI.onutDebugMessageControlKHR(source, type, severity, count, ids, enabled); }
ONUT_FORCE_INLINE void _onutDebugMessageEnableAMD(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled) { onutGLAPI.onutDebugMessageEnableAMD(category, severity, count, ids, enabled); }
ONUT_FORCE_INLINE void _onutDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf) { onutGLAPI.onutDebugMessageInsert(source, type, id, severity, length, buf); }
ONUT_FORCE_INLINE void _onutDebugMessageInsertAMD(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf) { onutGLAPI.onutDebugMessageInsertAMD(category, severity, id, length, buf); }
ONUT_FORCE_INLINE void _onutDebugMessageInsertARB(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf) { onutGLAPI.onutDebugMessageInsertARB(source, type, id, severity, length, buf); }
ONUT_FORCE_INLINE void _onutDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf) { onutGLAPI.onutDebugMessageInsertKHR(source, type, id, severity, length, buf); }
ONUT_FORCE_INLINE void _onutDeformSGIX(GLbitfield mask) { onutGLAPI.onutDeformSGIX(mask); }
ONUT_FORCE_INLINE void _onutDeformationMap3dSGIX(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points) { onutGLAPI.onutDeformationMap3dSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points); }
ONUT_FORCE_INLINE void _onutDeformationMap3fSGIX(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points) { onutGLAPI.onutDeformationMap3fSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points); }
ONUT_FORCE_INLINE void _onutDeleteAsyncMarkersSGIX(GLuint marker, GLsizei range) { onutGLAPI.onutDeleteAsyncMarkersSGIX(marker, range); }
ONUT_FORCE_INLINE void _onutDeleteBufferRegion(GLenum region) { onutGLAPI.onutDeleteBufferRegion(region); }
ONUT_FORCE_INLINE void _onutDeleteBuffers(GLsizei n, const GLuint *buffers) { onutGLAPI.onutDeleteBuffers(n, buffers); }
ONUT_FORCE_INLINE void _onutDeleteBuffersARB(GLsizei n, const GLuint *buffers) { onutGLAPI.onutDeleteBuffersARB(n, buffers); }
ONUT_FORCE_INLINE void _onutDeleteCommandListsNV(GLsizei n, const GLuint *lists) { onutGLAPI.onutDeleteCommandListsNV(n, lists); }
ONUT_FORCE_INLINE void _onutDeleteFencesAPPLE(GLsizei n, const GLuint *fences) { onutGLAPI.onutDeleteFencesAPPLE(n, fences); }
ONUT_FORCE_INLINE void _onutDeleteFencesNV(GLsizei n, const GLuint *fences) { onutGLAPI.onutDeleteFencesNV(n, fences); }
ONUT_FORCE_INLINE void _onutDeleteFragmentShaderATI(GLuint id) { onutGLAPI.onutDeleteFragmentShaderATI(id); }
ONUT_FORCE_INLINE void _onutDeleteFramebuffers(GLsizei n, const GLuint *framebuffers) { onutGLAPI.onutDeleteFramebuffers(n, framebuffers); }
ONUT_FORCE_INLINE void _onutDeleteFramebuffersEXT(GLsizei n, const GLuint *framebuffers) { onutGLAPI.onutDeleteFramebuffersEXT(n, framebuffers); }
ONUT_FORCE_INLINE void _onutDeleteMemoryObjectsEXT(GLsizei n, const GLuint *memoryObjects) { onutGLAPI.onutDeleteMemoryObjectsEXT(n, memoryObjects); }
ONUT_FORCE_INLINE void _onutDeleteNamedStringARB(GLint namelen, const GLchar *name) { onutGLAPI.onutDeleteNamedStringARB(namelen, name); }
ONUT_FORCE_INLINE void _onutDeleteNamesAMD(GLenum identifier, GLuint num, const GLuint *names) { onutGLAPI.onutDeleteNamesAMD(identifier, num, names); }
ONUT_FORCE_INLINE void _onutDeleteObjectARB(GLhandleARB obj) { onutGLAPI.onutDeleteObjectARB(obj); }
ONUT_FORCE_INLINE void _onutDeleteOcclusionQueriesNV(GLsizei n, const GLuint *ids) { onutGLAPI.onutDeleteOcclusionQueriesNV(n, ids); }
ONUT_FORCE_INLINE void _onutDeletePathsNV(GLuint path, GLsizei range) { onutGLAPI.onutDeletePathsNV(path, range); }
ONUT_FORCE_INLINE void _onutDeletePerfMonitorsAMD(GLsizei n, GLuint *monitors) { onutGLAPI.onutDeletePerfMonitorsAMD(n, monitors); }
ONUT_FORCE_INLINE void _onutDeletePerfQueryINTEL(GLuint queryHandle) { onutGLAPI.onutDeletePerfQueryINTEL(queryHandle); }
ONUT_FORCE_INLINE void _onutDeleteProgram(GLuint program) { onutGLAPI.onutDeleteProgram(program); }
ONUT_FORCE_INLINE void _onutDeleteProgramPipelines(GLsizei n, const GLuint *pipelines) { onutGLAPI.onutDeleteProgramPipelines(n, pipelines); }
ONUT_FORCE_INLINE void _onutDeleteProgramPipelinesEXT(GLsizei n, const GLuint *pipelines) { onutGLAPI.onutDeleteProgramPipelinesEXT(n, pipelines); }
ONUT_FORCE_INLINE void _onutDeleteProgramsARB(GLsizei n, const GLuint *programs) { onutGLAPI.onutDeleteProgramsARB(n, programs); }
ONUT_FORCE_INLINE void _onutDeleteProgramsNV(GLsizei n, const GLuint *programs) { onutGLAPI.onutDeleteProgramsNV(n, programs); }
ONUT_FORCE_INLINE void _onutDeleteQueries(GLsizei n, const GLuint *ids) { onutGLAPI.onutDeleteQueries(n, ids); }
ONUT_FORCE_INLINE void _onutDeleteQueriesARB(GLsizei n, const GLuint *ids) { onutGLAPI.onutDeleteQueriesARB(n, ids); }
ONUT_FORCE_INLINE void _onutDeleteQueriesEXT(GLsizei n, const GLuint *ids) { onutGLAPI.onutDeleteQueriesEXT(n, ids); }
ONUT_FORCE_INLINE void _onutDeleteRenderbuffers(GLsizei n, const GLuint *renderbuffers) { onutGLAPI.onutDeleteRenderbuffers(n, renderbuffers); }
ONUT_FORCE_INLINE void _onutDeleteRenderbuffersEXT(GLsizei n, const GLuint *renderbuffers) { onutGLAPI.onutDeleteRenderbuffersEXT(n, renderbuffers); }
ONUT_FORCE_INLINE void _onutDeleteSamplers(GLsizei count, const GLuint *samplers) { onutGLAPI.onutDeleteSamplers(count, samplers); }
ONUT_FORCE_INLINE void _onutDeleteSemaphoresEXT(GLsizei n, const GLuint *semaphores) { onutGLAPI.onutDeleteSemaphoresEXT(n, semaphores); }
ONUT_FORCE_INLINE void _onutDeleteShader(GLuint shader) { onutGLAPI.onutDeleteShader(shader); }
ONUT_FORCE_INLINE void _onutDeleteStatesNV(GLsizei n, const GLuint *states) { onutGLAPI.onutDeleteStatesNV(n, states); }
ONUT_FORCE_INLINE void _onutDeleteSync(GLsync sync) { onutGLAPI.onutDeleteSync(sync); }
ONUT_FORCE_INLINE void _onutDeleteSyncAPPLE(GLsync sync) { onutGLAPI.onutDeleteSyncAPPLE(sync); }
ONUT_FORCE_INLINE void _onutDeleteTextures(GLsizei n, const GLuint *textures) { onutGLAPI.onutDeleteTextures(n, textures); }
ONUT_FORCE_INLINE void _onutDeleteTexturesEXT(GLsizei n, const GLuint *textures) { onutGLAPI.onutDeleteTexturesEXT(n, textures); }
ONUT_FORCE_INLINE void _onutDeleteTransformFeedbacks(GLsizei n, const GLuint *ids) { onutGLAPI.onutDeleteTransformFeedbacks(n, ids); }
ONUT_FORCE_INLINE void _onutDeleteTransformFeedbacksNV(GLsizei n, const GLuint *ids) { onutGLAPI.onutDeleteTransformFeedbacksNV(n, ids); }
ONUT_FORCE_INLINE void _onutDeleteVertexArrays(GLsizei n, const GLuint *arrays) { onutGLAPI.onutDeleteVertexArrays(n, arrays); }
ONUT_FORCE_INLINE void _onutDeleteVertexArraysAPPLE(GLsizei n, const GLuint *arrays) { onutGLAPI.onutDeleteVertexArraysAPPLE(n, arrays); }
ONUT_FORCE_INLINE void _onutDeleteVertexArraysOES(GLsizei n, const GLuint *arrays) { onutGLAPI.onutDeleteVertexArraysOES(n, arrays); }
ONUT_FORCE_INLINE void _onutDeleteVertexShaderEXT(GLuint id) { onutGLAPI.onutDeleteVertexShaderEXT(id); }
ONUT_FORCE_INLINE void _onutDepthBoundsEXT(GLclampd zmin, GLclampd zmax) { onutGLAPI.onutDepthBoundsEXT(zmin, zmax); }
ONUT_FORCE_INLINE void _onutDepthBoundsdNV(GLdouble zmin, GLdouble zmax) { onutGLAPI.onutDepthBoundsdNV(zmin, zmax); }
ONUT_FORCE_INLINE void _onutDepthFunc(GLenum func) { onutGLAPI.onutDepthFunc(func); }
ONUT_FORCE_INLINE void _onutDepthMask(GLboolean flag) { onutGLAPI.onutDepthMask(flag); }
ONUT_FORCE_INLINE void _onutDepthRange(GLdouble zNear, GLdouble zFar) { onutGLAPI.onutDepthRange(zNear, zFar); }
ONUT_FORCE_INLINE void _onutDepthRangeArrayfvNV(GLuint first, GLsizei count, const GLfloat *v) { onutGLAPI.onutDepthRangeArrayfvNV(first, count, v); }
ONUT_FORCE_INLINE void _onutDepthRangeArrayfvOES(GLuint first, GLsizei count, const GLfloat *v) { onutGLAPI.onutDepthRangeArrayfvOES(first, count, v); }
ONUT_FORCE_INLINE void _onutDepthRangeArrayv(GLuint first, GLsizei count, const GLdouble *v) { onutGLAPI.onutDepthRangeArrayv(first, count, v); }
ONUT_FORCE_INLINE void _onutDepthRangeIndexed(GLuint index, GLdouble n, GLdouble f) { onutGLAPI.onutDepthRangeIndexed(index, n, f); }
ONUT_FORCE_INLINE void _onutDepthRangeIndexedfNV(GLuint index, GLfloat n, GLfloat f) { onutGLAPI.onutDepthRangeIndexedfNV(index, n, f); }
ONUT_FORCE_INLINE void _onutDepthRangeIndexedfOES(GLuint index, GLfloat n, GLfloat f) { onutGLAPI.onutDepthRangeIndexedfOES(index, n, f); }
ONUT_FORCE_INLINE void _onutDepthRangedNV(GLdouble zNear, GLdouble zFar) { onutGLAPI.onutDepthRangedNV(zNear, zFar); }
ONUT_FORCE_INLINE void _onutDepthRangef(GLfloat n, GLfloat f) { onutGLAPI.onutDepthRangef(n, f); }
ONUT_FORCE_INLINE void _onutDepthRangefOES(GLclampf n, GLclampf f) { onutGLAPI.onutDepthRangefOES(n, f); }
ONUT_FORCE_INLINE void _onutDepthRangexOES(GLfixed n, GLfixed f) { onutGLAPI.onutDepthRangexOES(n, f); }
ONUT_FORCE_INLINE void _onutDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj) { onutGLAPI.onutDetachObjectARB(containerObj, attachedObj); }
ONUT_FORCE_INLINE void _onutDetachShader(GLuint program, GLuint shader) { onutGLAPI.onutDetachShader(program, shader); }
ONUT_FORCE_INLINE void _onutDetailTexFuncSGIS(GLenum target, GLsizei n, const GLfloat *points) { onutGLAPI.onutDetailTexFuncSGIS(target, n, points); }
ONUT_FORCE_INLINE void _onutDisable(GLenum cap) { onutGLAPI.onutDisable(cap); }
ONUT_FORCE_INLINE void _onutDisableClientStateIndexedEXT(GLenum array, GLuint index) { onutGLAPI.onutDisableClientStateIndexedEXT(array, index); }
ONUT_FORCE_INLINE void _onutDisableClientStateiEXT(GLenum array, GLuint index) { onutGLAPI.onutDisableClientStateiEXT(array, index); }
ONUT_FORCE_INLINE void _onutDisableDriverControlQCOM(GLuint driverControl) { onutGLAPI.onutDisableDriverControlQCOM(driverControl); }
ONUT_FORCE_INLINE void _onutDisableIndexedEXT(GLenum target, GLuint index) { onutGLAPI.onutDisableIndexedEXT(target, index); }
ONUT_FORCE_INLINE void _onutDisableVariantClientStateEXT(GLuint id) { onutGLAPI.onutDisableVariantClientStateEXT(id); }
ONUT_FORCE_INLINE void _onutDisableVertexArrayAttrib(GLuint vaobj, GLuint index) { onutGLAPI.onutDisableVertexArrayAttrib(vaobj, index); }
ONUT_FORCE_INLINE void _onutDisableVertexArrayAttribEXT(GLuint vaobj, GLuint index) { onutGLAPI.onutDisableVertexArrayAttribEXT(vaobj, index); }
ONUT_FORCE_INLINE void _onutDisableVertexArrayEXT(GLuint vaobj, GLenum array) { onutGLAPI.onutDisableVertexArrayEXT(vaobj, array); }
ONUT_FORCE_INLINE void _onutDisableVertexAttribAPPLE(GLuint index, GLenum pname) { onutGLAPI.onutDisableVertexAttribAPPLE(index, pname); }
ONUT_FORCE_INLINE void _onutDisableVertexAttribArray(GLuint index) { onutGLAPI.onutDisableVertexAttribArray(index); }
ONUT_FORCE_INLINE void _onutDisableVertexAttribArrayARB(GLuint index) { onutGLAPI.onutDisableVertexAttribArrayARB(index); }
ONUT_FORCE_INLINE void _onutDisablei(GLenum target, GLuint index) { onutGLAPI.onutDisablei(target, index); }
ONUT_FORCE_INLINE void _onutDisableiEXT(GLenum target, GLuint index) { onutGLAPI.onutDisableiEXT(target, index); }
ONUT_FORCE_INLINE void _onutDisableiNV(GLenum target, GLuint index) { onutGLAPI.onutDisableiNV(target, index); }
ONUT_FORCE_INLINE void _onutDisableiOES(GLenum target, GLuint index) { onutGLAPI.onutDisableiOES(target, index); }
ONUT_FORCE_INLINE void _onutDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum *attachments) { onutGLAPI.onutDiscardFramebufferEXT(target, numAttachments, attachments); }
ONUT_FORCE_INLINE void _onutDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z) { onutGLAPI.onutDispatchCompute(num_groups_x, num_groups_y, num_groups_z); }
ONUT_FORCE_INLINE void _onutDispatchComputeGroupSizeARB(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z) { onutGLAPI.onutDispatchComputeGroupSizeARB(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z); }
ONUT_FORCE_INLINE void _onutDispatchComputeIndirect(GLintptr indirect) { onutGLAPI.onutDispatchComputeIndirect(indirect); }
ONUT_FORCE_INLINE void _onutDrawArrays(GLenum mode, GLint first, GLsizei count) { onutGLAPI.onutDrawArrays(mode, first, count); }
ONUT_FORCE_INLINE void _onutDrawArraysEXT(GLenum mode, GLint first, GLsizei count) { onutGLAPI.onutDrawArraysEXT(mode, first, count); }
ONUT_FORCE_INLINE void _onutDrawArraysIndirect(GLenum mode, const void *indirect) { onutGLAPI.onutDrawArraysIndirect(mode, indirect); }
ONUT_FORCE_INLINE void _onutDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount) { onutGLAPI.onutDrawArraysInstanced(mode, first, count, instancecount); }
ONUT_FORCE_INLINE void _onutDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount) { onutGLAPI.onutDrawArraysInstancedANGLE(mode, first, count, primcount); }
ONUT_FORCE_INLINE void _onutDrawArraysInstancedARB(GLenum mode, GLint first, GLsizei count, GLsizei primcount) { onutGLAPI.onutDrawArraysInstancedARB(mode, first, count, primcount); }
ONUT_FORCE_INLINE void _onutDrawArraysInstancedBaseInstance(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance) { onutGLAPI.onutDrawArraysInstancedBaseInstance(mode, first, count, instancecount, baseinstance); }
ONUT_FORCE_INLINE void _onutDrawArraysInstancedBaseInstanceEXT(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance) { onutGLAPI.onutDrawArraysInstancedBaseInstanceEXT(mode, first, count, instancecount, baseinstance); }
ONUT_FORCE_INLINE void _onutDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount) { onutGLAPI.onutDrawArraysInstancedEXT(mode, start, count, primcount); }
ONUT_FORCE_INLINE void _onutDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount) { onutGLAPI.onutDrawArraysInstancedNV(mode, first, count, primcount); }
ONUT_FORCE_INLINE void _onutDrawBuffer(GLenum buf) { onutGLAPI.onutDrawBuffer(buf); }
ONUT_FORCE_INLINE void _onutDrawBufferRegion(GLuint region, GLint x, GLint y, GLsizei width, GLsizei height, GLint xDest, GLint yDest) { onutGLAPI.onutDrawBufferRegion(region, x, y, width, height, xDest, yDest); }
ONUT_FORCE_INLINE void _onutDrawBuffers(GLsizei n, const GLenum *bufs) { onutGLAPI.onutDrawBuffers(n, bufs); }
ONUT_FORCE_INLINE void _onutDrawBuffersARB(GLsizei n, const GLenum *bufs) { onutGLAPI.onutDrawBuffersARB(n, bufs); }
ONUT_FORCE_INLINE void _onutDrawBuffersATI(GLsizei n, const GLenum *bufs) { onutGLAPI.onutDrawBuffersATI(n, bufs); }
ONUT_FORCE_INLINE void _onutDrawBuffersEXT(GLsizei n, const GLenum *bufs) { onutGLAPI.onutDrawBuffersEXT(n, bufs); }
ONUT_FORCE_INLINE void _onutDrawBuffersIndexedEXT(GLint n, const GLenum *location, const GLint *indices) { onutGLAPI.onutDrawBuffersIndexedEXT(n, location, indices); }
ONUT_FORCE_INLINE void _onutDrawBuffersNV(GLsizei n, const GLenum *bufs) { onutGLAPI.onutDrawBuffersNV(n, bufs); }
ONUT_FORCE_INLINE void _onutDrawCommandsAddressNV(GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count) { onutGLAPI.onutDrawCommandsAddressNV(primitiveMode, indirects, sizes, count); }
ONUT_FORCE_INLINE void _onutDrawCommandsNV(GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count) { onutGLAPI.onutDrawCommandsNV(primitiveMode, buffer, indirects, sizes, count); }
ONUT_FORCE_INLINE void _onutDrawCommandsStatesAddressNV(const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count) { onutGLAPI.onutDrawCommandsStatesAddressNV(indirects, sizes, states, fbos, count); }
ONUT_FORCE_INLINE void _onutDrawCommandsStatesNV(GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count) { onutGLAPI.onutDrawCommandsStatesNV(buffer, indirects, sizes, states, fbos, count); }
ONUT_FORCE_INLINE void _onutDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count) { onutGLAPI.onutDrawElementArrayAPPLE(mode, first, count); }
ONUT_FORCE_INLINE void _onutDrawElementArrayATI(GLenum mode, GLsizei count) { onutGLAPI.onutDrawElementArrayATI(mode, count); }
ONUT_FORCE_INLINE void _onutDrawElements(GLenum mode, GLsizei count, GLenum type, const void *indices) { onutGLAPI.onutDrawElements(mode, count, type, indices); }
ONUT_FORCE_INLINE void _onutDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex) { onutGLAPI.onutDrawElementsBaseVertex(mode, count, type, indices, basevertex); }
ONUT_FORCE_INLINE void _onutDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex) { onutGLAPI.onutDrawElementsBaseVertexEXT(mode, count, type, indices, basevertex); }
ONUT_FORCE_INLINE void _onutDrawElementsBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex) { onutGLAPI.onutDrawElementsBaseVertexOES(mode, count, type, indices, basevertex); }
ONUT_FORCE_INLINE void _onutDrawElementsIndirect(GLenum mode, GLenum type, const void *indirect) { onutGLAPI.onutDrawElementsIndirect(mode, type, indirect); }
ONUT_FORCE_INLINE void _onutDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount) { onutGLAPI.onutDrawElementsInstanced(mode, count, type, indices, instancecount); }
ONUT_FORCE_INLINE void _onutDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount) { onutGLAPI.onutDrawElementsInstancedANGLE(mode, count, type, indices, primcount); }
ONUT_FORCE_INLINE void _onutDrawElementsInstancedARB(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount) { onutGLAPI.onutDrawElementsInstancedARB(mode, count, type, indices, primcount); }
ONUT_FORCE_INLINE void _onutDrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance) { onutGLAPI.onutDrawElementsInstancedBaseInstance(mode, count, type, indices, instancecount, baseinstance); }
ONUT_FORCE_INLINE void _onutDrawElementsInstancedBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance) { onutGLAPI.onutDrawElementsInstancedBaseInstanceEXT(mode, count, type, indices, instancecount, baseinstance); }
ONUT_FORCE_INLINE void _onutDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex) { onutGLAPI.onutDrawElementsInstancedBaseVertex(mode, count, type, indices, instancecount, basevertex); }
ONUT_FORCE_INLINE void _onutDrawElementsInstancedBaseVertexBaseInstance(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance) { onutGLAPI.onutDrawElementsInstancedBaseVertexBaseInstance(mode, count, type, indices, instancecount, basevertex, baseinstance); }
ONUT_FORCE_INLINE void _onutDrawElementsInstancedBaseVertexBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance) { onutGLAPI.onutDrawElementsInstancedBaseVertexBaseInstanceEXT(mode, count, type, indices, instancecount, basevertex, baseinstance); }
ONUT_FORCE_INLINE void _onutDrawElementsInstancedBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex) { onutGLAPI.onutDrawElementsInstancedBaseVertexEXT(mode, count, type, indices, instancecount, basevertex); }
ONUT_FORCE_INLINE void _onutDrawElementsInstancedBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex) { onutGLAPI.onutDrawElementsInstancedBaseVertexOES(mode, count, type, indices, instancecount, basevertex); }
ONUT_FORCE_INLINE void _onutDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount) { onutGLAPI.onutDrawElementsInstancedEXT(mode, count, type, indices, primcount); }
ONUT_FORCE_INLINE void _onutDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount) { onutGLAPI.onutDrawElementsInstancedNV(mode, count, type, indices, primcount); }
ONUT_FORCE_INLINE void _onutDrawMeshArraysSUN(GLenum mode, GLint first, GLsizei count, GLsizei width) { onutGLAPI.onutDrawMeshArraysSUN(mode, first, count, width); }
ONUT_FORCE_INLINE void _onutDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count) { onutGLAPI.onutDrawRangeElementArrayAPPLE(mode, start, end, first, count); }
ONUT_FORCE_INLINE void _onutDrawRangeElementArrayATI(GLenum mode, GLuint start, GLuint end, GLsizei count) { onutGLAPI.onutDrawRangeElementArrayATI(mode, start, end, count); }
ONUT_FORCE_INLINE void _onutDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices) { onutGLAPI.onutDrawRangeElements(mode, start, end, count, type, indices); }
ONUT_FORCE_INLINE void _onutDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex) { onutGLAPI.onutDrawRangeElementsBaseVertex(mode, start, end, count, type, indices, basevertex); }
ONUT_FORCE_INLINE void _onutDrawRangeElementsBaseVertexEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex) { onutGLAPI.onutDrawRangeElementsBaseVertexEXT(mode, start, end, count, type, indices, basevertex); }
ONUT_FORCE_INLINE void _onutDrawRangeElementsBaseVertexOES(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex) { onutGLAPI.onutDrawRangeElementsBaseVertexOES(mode, start, end, count, type, indices, basevertex); }
ONUT_FORCE_INLINE void _onutDrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices) { onutGLAPI.onutDrawRangeElementsEXT(mode, start, end, count, type, indices); }
ONUT_FORCE_INLINE void _onutDrawTextureNV(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1) { onutGLAPI.onutDrawTextureNV(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1); }
ONUT_FORCE_INLINE void _onutDrawTransformFeedback(GLenum mode, GLuint id) { onutGLAPI.onutDrawTransformFeedback(mode, id); }
ONUT_FORCE_INLINE void _onutDrawTransformFeedbackEXT(GLenum mode, GLuint id) { onutGLAPI.onutDrawTransformFeedbackEXT(mode, id); }
ONUT_FORCE_INLINE void _onutDrawTransformFeedbackInstanced(GLenum mode, GLuint id, GLsizei instancecount) { onutGLAPI.onutDrawTransformFeedbackInstanced(mode, id, instancecount); }
ONUT_FORCE_INLINE void _onutDrawTransformFeedbackInstancedEXT(GLenum mode, GLuint id, GLsizei instancecount) { onutGLAPI.onutDrawTransformFeedbackInstancedEXT(mode, id, instancecount); }
ONUT_FORCE_INLINE void _onutDrawTransformFeedbackNV(GLenum mode, GLuint id) { onutGLAPI.onutDrawTransformFeedbackNV(mode, id); }
ONUT_FORCE_INLINE void _onutDrawTransformFeedbackStream(GLenum mode, GLuint id, GLuint stream) { onutGLAPI.onutDrawTransformFeedbackStream(mode, id, stream); }
ONUT_FORCE_INLINE void _onutDrawTransformFeedbackStreamInstanced(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount) { onutGLAPI.onutDrawTransformFeedbackStreamInstanced(mode, id, stream, instancecount); }
ONUT_FORCE_INLINE void _onutDrawVkImageNV(GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1) { onutGLAPI.onutDrawVkImageNV(vkImage, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1); }
ONUT_FORCE_INLINE void _onutEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image) { onutGLAPI.onutEGLImageTargetRenderbufferStorageOES(target, image); }
ONUT_FORCE_INLINE void _onutEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image) { onutGLAPI.onutEGLImageTargetTexture2DOES(target, image); }
ONUT_FORCE_INLINE void _onutEdgeFlagFormatNV(GLsizei stride) { onutGLAPI.onutEdgeFlagFormatNV(stride); }
ONUT_FORCE_INLINE void _onutEdgeFlagPointerEXT(GLsizei stride, GLsizei count, const GLboolean *pointer) { onutGLAPI.onutEdgeFlagPointerEXT(stride, count, pointer); }
ONUT_FORCE_INLINE void _onutEdgeFlagPointerListIBM(GLint stride, const GLboolean **pointer, GLint ptrstride) { onutGLAPI.onutEdgeFlagPointerListIBM(stride, pointer, ptrstride); }
ONUT_FORCE_INLINE void _onutElementPointerAPPLE(GLenum type, const void *pointer) { onutGLAPI.onutElementPointerAPPLE(type, pointer); }
ONUT_FORCE_INLINE void _onutElementPointerATI(GLenum type, const void *pointer) { onutGLAPI.onutElementPointerATI(type, pointer); }
ONUT_FORCE_INLINE void _onutEnable(GLenum cap) { onutGLAPI.onutEnable(cap); }
ONUT_FORCE_INLINE void _onutEnableClientStateIndexedEXT(GLenum array, GLuint index) { onutGLAPI.onutEnableClientStateIndexedEXT(array, index); }
ONUT_FORCE_INLINE void _onutEnableClientStateiEXT(GLenum array, GLuint index) { onutGLAPI.onutEnableClientStateiEXT(array, index); }
ONUT_FORCE_INLINE void _onutEnableDriverControlQCOM(GLuint driverControl) { onutGLAPI.onutEnableDriverControlQCOM(driverControl); }
ONUT_FORCE_INLINE void _onutEnableIndexedEXT(GLenum target, GLuint index) { onutGLAPI.onutEnableIndexedEXT(target, index); }
ONUT_FORCE_INLINE void _onutEnableVariantClientStateEXT(GLuint id) { onutGLAPI.onutEnableVariantClientStateEXT(id); }
ONUT_FORCE_INLINE void _onutEnableVertexArrayAttrib(GLuint vaobj, GLuint index) { onutGLAPI.onutEnableVertexArrayAttrib(vaobj, index); }
ONUT_FORCE_INLINE void _onutEnableVertexArrayAttribEXT(GLuint vaobj, GLuint index) { onutGLAPI.onutEnableVertexArrayAttribEXT(vaobj, index); }
ONUT_FORCE_INLINE void _onutEnableVertexArrayEXT(GLuint vaobj, GLenum array) { onutGLAPI.onutEnableVertexArrayEXT(vaobj, array); }
ONUT_FORCE_INLINE void _onutEnableVertexAttribAPPLE(GLuint index, GLenum pname) { onutGLAPI.onutEnableVertexAttribAPPLE(index, pname); }
ONUT_FORCE_INLINE void _onutEnableVertexAttribArray(GLuint index) { onutGLAPI.onutEnableVertexAttribArray(index); }
ONUT_FORCE_INLINE void _onutEnableVertexAttribArrayARB(GLuint index) { onutGLAPI.onutEnableVertexAttribArrayARB(index); }
ONUT_FORCE_INLINE void _onutEnablei(GLenum target, GLuint index) { onutGLAPI.onutEnablei(target, index); }
ONUT_FORCE_INLINE void _onutEnableiEXT(GLenum target, GLuint index) { onutGLAPI.onutEnableiEXT(target, index); }
ONUT_FORCE_INLINE void _onutEnableiNV(GLenum target, GLuint index) { onutGLAPI.onutEnableiNV(target, index); }
ONUT_FORCE_INLINE void _onutEnableiOES(GLenum target, GLuint index) { onutGLAPI.onutEnableiOES(target, index); }
ONUT_FORCE_INLINE void _onutEndConditionalRender(void) { onutGLAPI.onutEndConditionalRender(); }
ONUT_FORCE_INLINE void _onutEndConditionalRenderNV(void) { onutGLAPI.onutEndConditionalRenderNV(); }
ONUT_FORCE_INLINE void _onutEndConditionalRenderNVX(void) { onutGLAPI.onutEndConditionalRenderNVX(); }
ONUT_FORCE_INLINE void _onutEndFragmentShaderATI(void) { onutGLAPI.onutEndFragmentShaderATI(); }
ONUT_FORCE_INLINE void _onutEndOcclusionQueryNV(void) { onutGLAPI.onutEndOcclusionQueryNV(); }
ONUT_FORCE_INLINE void _onutEndPerfMonitorAMD(GLuint monitor) { onutGLAPI.onutEndPerfMonitorAMD(monitor); }
ONUT_FORCE_INLINE void _onutEndPerfQueryINTEL(GLuint queryHandle) { onutGLAPI.onutEndPerfQueryINTEL(queryHandle); }
ONUT_FORCE_INLINE void _onutEndQuery(GLenum target) { onutGLAPI.onutEndQuery(target); }
ONUT_FORCE_INLINE void _onutEndQueryARB(GLenum target) { onutGLAPI.onutEndQueryARB(target); }
ONUT_FORCE_INLINE void _onutEndQueryEXT(GLenum target) { onutGLAPI.onutEndQueryEXT(target); }
ONUT_FORCE_INLINE void _onutEndQueryIndexed(GLenum target, GLuint index) { onutGLAPI.onutEndQueryIndexed(target, index); }
ONUT_FORCE_INLINE void _onutEndTilingQCOM(GLbitfield preserveMask) { onutGLAPI.onutEndTilingQCOM(preserveMask); }
ONUT_FORCE_INLINE void _onutEndTransformFeedback(void) { onutGLAPI.onutEndTransformFeedback(); }
ONUT_FORCE_INLINE void _onutEndTransformFeedbackEXT(void) { onutGLAPI.onutEndTransformFeedbackEXT(); }
ONUT_FORCE_INLINE void _onutEndTransformFeedbackNV(void) { onutGLAPI.onutEndTransformFeedbackNV(); }
ONUT_FORCE_INLINE void _onutEndVertexShaderEXT(void) { onutGLAPI.onutEndVertexShaderEXT(); }
ONUT_FORCE_INLINE void _onutEndVideoCaptureNV(GLuint video_capture_slot) { onutGLAPI.onutEndVideoCaptureNV(video_capture_slot); }
ONUT_FORCE_INLINE void _onutEvalCoord1xOES(GLfixed u) { onutGLAPI.onutEvalCoord1xOES(u); }
ONUT_FORCE_INLINE void _onutEvalCoord1xvOES(const GLfixed *coords) { onutGLAPI.onutEvalCoord1xvOES(coords); }
ONUT_FORCE_INLINE void _onutEvalCoord2xOES(GLfixed u, GLfixed v) { onutGLAPI.onutEvalCoord2xOES(u, v); }
ONUT_FORCE_INLINE void _onutEvalCoord2xvOES(const GLfixed *coords) { onutGLAPI.onutEvalCoord2xvOES(coords); }
ONUT_FORCE_INLINE void _onutEvalMapsNV(GLenum target, GLenum mode) { onutGLAPI.onutEvalMapsNV(target, mode); }
ONUT_FORCE_INLINE void _onutEvaluateDepthValuesARB(void) { onutGLAPI.onutEvaluateDepthValuesARB(); }
ONUT_FORCE_INLINE void _onutExecuteProgramNV(GLenum target, GLuint id, const GLfloat *params) { onutGLAPI.onutExecuteProgramNV(target, id, params); }
ONUT_FORCE_INLINE void _onutExtGetBufferPointervQCOM(GLenum target, void **params) { onutGLAPI.onutExtGetBufferPointervQCOM(target, params); }
ONUT_FORCE_INLINE void _onutExtGetBuffersQCOM(GLuint *buffers, GLint maxBuffers, GLint *numBuffers) { onutGLAPI.onutExtGetBuffersQCOM(buffers, maxBuffers, numBuffers); }
ONUT_FORCE_INLINE void _onutExtGetFramebuffersQCOM(GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers) { onutGLAPI.onutExtGetFramebuffersQCOM(framebuffers, maxFramebuffers, numFramebuffers); }
ONUT_FORCE_INLINE void _onutExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar *source, GLint *length) { onutGLAPI.onutExtGetProgramBinarySourceQCOM(program, shadertype, source, length); }
ONUT_FORCE_INLINE void _onutExtGetProgramsQCOM(GLuint *programs, GLint maxPrograms, GLint *numPrograms) { onutGLAPI.onutExtGetProgramsQCOM(programs, maxPrograms, numPrograms); }
ONUT_FORCE_INLINE void _onutExtGetRenderbuffersQCOM(GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers) { onutGLAPI.onutExtGetRenderbuffersQCOM(renderbuffers, maxRenderbuffers, numRenderbuffers); }
ONUT_FORCE_INLINE void _onutExtGetShadersQCOM(GLuint *shaders, GLint maxShaders, GLint *numShaders) { onutGLAPI.onutExtGetShadersQCOM(shaders, maxShaders, numShaders); }
ONUT_FORCE_INLINE void _onutExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params) { onutGLAPI.onutExtGetTexLevelParameterivQCOM(texture, face, level, pname, params); }
ONUT_FORCE_INLINE void _onutExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void *texels) { onutGLAPI.onutExtGetTexSubImageQCOM(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels); }
ONUT_FORCE_INLINE void _onutExtGetTexturesQCOM(GLuint *textures, GLint maxTextures, GLint *numTextures) { onutGLAPI.onutExtGetTexturesQCOM(textures, maxTextures, numTextures); }
ONUT_FORCE_INLINE GLboolean _onutExtIsProgramBinaryQCOM(GLuint program) { return onutGLAPI.onutExtIsProgramBinaryQCOM(program); }
ONUT_FORCE_INLINE void _onutExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param) { onutGLAPI.onutExtTexObjectStateOverrideiQCOM(target, pname, param); }
ONUT_FORCE_INLINE void _onutExtractComponentEXT(GLuint res, GLuint src, GLuint num) { onutGLAPI.onutExtractComponentEXT(res, src, num); }
ONUT_FORCE_INLINE void _onutFeedbackBufferxOES(GLsizei n, GLenum type, const GLfixed *buffer) { onutGLAPI.onutFeedbackBufferxOES(n, type, buffer); }
ONUT_FORCE_INLINE GLsync _onutFenceSync(GLenum condition, GLbitfield flags) { return onutGLAPI.onutFenceSync(condition, flags); }
ONUT_FORCE_INLINE GLsync _onutFenceSyncAPPLE(GLenum condition, GLbitfield flags) { return onutGLAPI.onutFenceSyncAPPLE(condition, flags); }
ONUT_FORCE_INLINE void _onutFinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage) { onutGLAPI.onutFinalCombinerInputNV(variable, input, mapping, componentUsage); }
ONUT_FORCE_INLINE void _onutFinish(void) { onutGLAPI.onutFinish(); }
ONUT_FORCE_INLINE GLint _onutFinishAsyncSGIX(GLuint *markerp) { return onutGLAPI.onutFinishAsyncSGIX(markerp); }
ONUT_FORCE_INLINE void _onutFinishFenceAPPLE(GLuint fence) { onutGLAPI.onutFinishFenceAPPLE(fence); }
ONUT_FORCE_INLINE void _onutFinishFenceNV(GLuint fence) { onutGLAPI.onutFinishFenceNV(fence); }
ONUT_FORCE_INLINE void _onutFinishObjectAPPLE(GLenum object, GLint name) { onutGLAPI.onutFinishObjectAPPLE(object, name); }
ONUT_FORCE_INLINE void _onutFinishTextureSUNX(void) { onutGLAPI.onutFinishTextureSUNX(); }
ONUT_FORCE_INLINE void _onutFlush(void) { onutGLAPI.onutFlush(); }
ONUT_FORCE_INLINE void _onutFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length) { onutGLAPI.onutFlushMappedBufferRange(target, offset, length); }
ONUT_FORCE_INLINE void _onutFlushMappedBufferRangeAPPLE(GLenum target, GLintptr offset, GLsizeiptr size) { onutGLAPI.onutFlushMappedBufferRangeAPPLE(target, offset, size); }
ONUT_FORCE_INLINE void _onutFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length) { onutGLAPI.onutFlushMappedBufferRangeEXT(target, offset, length); }
ONUT_FORCE_INLINE void _onutFlushMappedNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length) { onutGLAPI.onutFlushMappedNamedBufferRange(buffer, offset, length); }
ONUT_FORCE_INLINE void _onutFlushMappedNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length) { onutGLAPI.onutFlushMappedNamedBufferRangeEXT(buffer, offset, length); }
ONUT_FORCE_INLINE void _onutFlushPixelDataRangeNV(GLenum target) { onutGLAPI.onutFlushPixelDataRangeNV(target); }
ONUT_FORCE_INLINE void _onutFlushRasterSGIX(void) { onutGLAPI.onutFlushRasterSGIX(); }
ONUT_FORCE_INLINE void _onutFlushStaticDataIBM(GLenum target) { onutGLAPI.onutFlushStaticDataIBM(target); }
ONUT_FORCE_INLINE void _onutFlushVertexArrayRangeAPPLE(GLsizei length, void *pointer) { onutGLAPI.onutFlushVertexArrayRangeAPPLE(length, pointer); }
ONUT_FORCE_INLINE void _onutFlushVertexArrayRangeNV(void) { onutGLAPI.onutFlushVertexArrayRangeNV(); }
ONUT_FORCE_INLINE void _onutFogCoordFormatNV(GLenum type, GLsizei stride) { onutGLAPI.onutFogCoordFormatNV(type, stride); }
ONUT_FORCE_INLINE void _onutFogCoordPointer(GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutFogCoordPointer(type, stride, pointer); }
ONUT_FORCE_INLINE void _onutFogCoordPointerEXT(GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutFogCoordPointerEXT(type, stride, pointer); }
ONUT_FORCE_INLINE void _onutFogCoordPointerListIBM(GLenum type, GLint stride, const void **pointer, GLint ptrstride) { onutGLAPI.onutFogCoordPointerListIBM(type, stride, pointer, ptrstride); }
ONUT_FORCE_INLINE void _onutFogCoordd(GLdouble coord) { onutGLAPI.onutFogCoordd(coord); }
ONUT_FORCE_INLINE void _onutFogCoorddEXT(GLdouble coord) { onutGLAPI.onutFogCoorddEXT(coord); }
ONUT_FORCE_INLINE void _onutFogCoorddv(const GLdouble *coord) { onutGLAPI.onutFogCoorddv(coord); }
ONUT_FORCE_INLINE void _onutFogCoorddvEXT(const GLdouble *coord) { onutGLAPI.onutFogCoorddvEXT(coord); }
ONUT_FORCE_INLINE void _onutFogCoordf(GLfloat coord) { onutGLAPI.onutFogCoordf(coord); }
ONUT_FORCE_INLINE void _onutFogCoordfEXT(GLfloat coord) { onutGLAPI.onutFogCoordfEXT(coord); }
ONUT_FORCE_INLINE void _onutFogCoordfv(const GLfloat *coord) { onutGLAPI.onutFogCoordfv(coord); }
ONUT_FORCE_INLINE void _onutFogCoordfvEXT(const GLfloat *coord) { onutGLAPI.onutFogCoordfvEXT(coord); }
ONUT_FORCE_INLINE void _onutFogCoordhNV(GLhalfNV fog) { onutGLAPI.onutFogCoordhNV(fog); }
ONUT_FORCE_INLINE void _onutFogCoordhvNV(const GLhalfNV *fog) { onutGLAPI.onutFogCoordhvNV(fog); }
ONUT_FORCE_INLINE void _onutFogFuncSGIS(GLsizei n, const GLfloat *points) { onutGLAPI.onutFogFuncSGIS(n, points); }
ONUT_FORCE_INLINE void _onutFogxOES(GLenum pname, GLfixed param) { onutGLAPI.onutFogxOES(pname, param); }
ONUT_FORCE_INLINE void _onutFogxvOES(GLenum pname, const GLfixed *param) { onutGLAPI.onutFogxvOES(pname, param); }
ONUT_FORCE_INLINE void _onutFragmentColorMaterialSGIX(GLenum face, GLenum mode) { onutGLAPI.onutFragmentColorMaterialSGIX(face, mode); }
ONUT_FORCE_INLINE void _onutFragmentCoverageColorNV(GLuint color) { onutGLAPI.onutFragmentCoverageColorNV(color); }
ONUT_FORCE_INLINE void _onutFragmentLightModelfSGIX(GLenum pname, GLfloat param) { onutGLAPI.onutFragmentLightModelfSGIX(pname, param); }
ONUT_FORCE_INLINE void _onutFragmentLightModelfvSGIX(GLenum pname, const GLfloat *params) { onutGLAPI.onutFragmentLightModelfvSGIX(pname, params); }
ONUT_FORCE_INLINE void _onutFragmentLightModeliSGIX(GLenum pname, GLint param) { onutGLAPI.onutFragmentLightModeliSGIX(pname, param); }
ONUT_FORCE_INLINE void _onutFragmentLightModelivSGIX(GLenum pname, const GLint *params) { onutGLAPI.onutFragmentLightModelivSGIX(pname, params); }
ONUT_FORCE_INLINE void _onutFragmentLightfSGIX(GLenum light, GLenum pname, GLfloat param) { onutGLAPI.onutFragmentLightfSGIX(light, pname, param); }
ONUT_FORCE_INLINE void _onutFragmentLightfvSGIX(GLenum light, GLenum pname, const GLfloat *params) { onutGLAPI.onutFragmentLightfvSGIX(light, pname, params); }
ONUT_FORCE_INLINE void _onutFragmentLightiSGIX(GLenum light, GLenum pname, GLint param) { onutGLAPI.onutFragmentLightiSGIX(light, pname, param); }
ONUT_FORCE_INLINE void _onutFragmentLightivSGIX(GLenum light, GLenum pname, const GLint *params) { onutGLAPI.onutFragmentLightivSGIX(light, pname, params); }
ONUT_FORCE_INLINE void _onutFragmentMaterialfSGIX(GLenum face, GLenum pname, GLfloat param) { onutGLAPI.onutFragmentMaterialfSGIX(face, pname, param); }
ONUT_FORCE_INLINE void _onutFragmentMaterialfvSGIX(GLenum face, GLenum pname, const GLfloat *params) { onutGLAPI.onutFragmentMaterialfvSGIX(face, pname, params); }
ONUT_FORCE_INLINE void _onutFragmentMaterialiSGIX(GLenum face, GLenum pname, GLint param) { onutGLAPI.onutFragmentMaterialiSGIX(face, pname, param); }
ONUT_FORCE_INLINE void _onutFragmentMaterialivSGIX(GLenum face, GLenum pname, const GLint *params) { onutGLAPI.onutFragmentMaterialivSGIX(face, pname, params); }
ONUT_FORCE_INLINE void _onutFrameTerminatorGREMEDY(void) { onutGLAPI.onutFrameTerminatorGREMEDY(); }
ONUT_FORCE_INLINE void _onutFrameZoomSGIX(GLint factor) { onutGLAPI.onutFrameZoomSGIX(factor); }
ONUT_FORCE_INLINE void _onutFramebufferDrawBufferEXT(GLuint framebuffer, GLenum mode) { onutGLAPI.onutFramebufferDrawBufferEXT(framebuffer, mode); }
ONUT_FORCE_INLINE void _onutFramebufferDrawBuffersEXT(GLuint framebuffer, GLsizei n, const GLenum *bufs) { onutGLAPI.onutFramebufferDrawBuffersEXT(framebuffer, n, bufs); }
ONUT_FORCE_INLINE void _onutFramebufferFetchBarrierQCOM(void) { onutGLAPI.onutFramebufferFetchBarrierQCOM(); }
ONUT_FORCE_INLINE void _onutFramebufferFoveationConfigQCOM(GLuint framebuffer, GLuint numLayers, GLuint focalPointsPerLayer, GLuint requestedFeatures, GLuint *providedFeatures) { onutGLAPI.onutFramebufferFoveationConfigQCOM(framebuffer, numLayers, focalPointsPerLayer, requestedFeatures, providedFeatures); }
ONUT_FORCE_INLINE void _onutFramebufferFoveationParametersQCOM(GLuint framebuffer, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea) { onutGLAPI.onutFramebufferFoveationParametersQCOM(framebuffer, layer, focalPoint, focalX, focalY, gainX, gainY, foveaArea); }
ONUT_FORCE_INLINE void _onutFramebufferParameteri(GLenum target, GLenum pname, GLint param) { onutGLAPI.onutFramebufferParameteri(target, pname, param); }
ONUT_FORCE_INLINE void _onutFramebufferPixelLocalStorageSizeEXT(GLuint target, GLsizei size) { onutGLAPI.onutFramebufferPixelLocalStorageSizeEXT(target, size); }
ONUT_FORCE_INLINE void _onutFramebufferReadBufferEXT(GLuint framebuffer, GLenum mode) { onutGLAPI.onutFramebufferReadBufferEXT(framebuffer, mode); }
ONUT_FORCE_INLINE void _onutFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) { onutGLAPI.onutFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer); }
ONUT_FORCE_INLINE void _onutFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) { onutGLAPI.onutFramebufferRenderbufferEXT(target, attachment, renderbuffertarget, renderbuffer); }
ONUT_FORCE_INLINE void _onutFramebufferSampleLocationsfvARB(GLenum target, GLuint start, GLsizei count, const GLfloat *v) { onutGLAPI.onutFramebufferSampleLocationsfvARB(target, start, count, v); }
ONUT_FORCE_INLINE void _onutFramebufferSampleLocationsfvNV(GLenum target, GLuint start, GLsizei count, const GLfloat *v) { onutGLAPI.onutFramebufferSampleLocationsfvNV(target, start, count, v); }
ONUT_FORCE_INLINE void _onutFramebufferSamplePositionsfvAMD(GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat *values) { onutGLAPI.onutFramebufferSamplePositionsfvAMD(target, numsamples, pixelindex, values); }
ONUT_FORCE_INLINE void _onutFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level) { onutGLAPI.onutFramebufferTexture(target, attachment, texture, level); }
ONUT_FORCE_INLINE void _onutFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) { onutGLAPI.onutFramebufferTexture1D(target, attachment, textarget, texture, level); }
ONUT_FORCE_INLINE void _onutFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) { onutGLAPI.onutFramebufferTexture1DEXT(target, attachment, textarget, texture, level); }
ONUT_FORCE_INLINE void _onutFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) { onutGLAPI.onutFramebufferTexture2D(target, attachment, textarget, texture, level); }
ONUT_FORCE_INLINE void _onutFramebufferTexture2DDownsampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint xscale, GLint yscale) { onutGLAPI.onutFramebufferTexture2DDownsampleIMG(target, attachment, textarget, texture, level, xscale, yscale); }
ONUT_FORCE_INLINE void _onutFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) { onutGLAPI.onutFramebufferTexture2DEXT(target, attachment, textarget, texture, level); }
ONUT_FORCE_INLINE void _onutFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples) { onutGLAPI.onutFramebufferTexture2DMultisampleEXT(target, attachment, textarget, texture, level, samples); }
ONUT_FORCE_INLINE void _onutFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples) { onutGLAPI.onutFramebufferTexture2DMultisampleIMG(target, attachment, textarget, texture, level, samples); }
ONUT_FORCE_INLINE void _onutFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) { onutGLAPI.onutFramebufferTexture3D(target, attachment, textarget, texture, level, zoffset); }
ONUT_FORCE_INLINE void _onutFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) { onutGLAPI.onutFramebufferTexture3DEXT(target, attachment, textarget, texture, level, zoffset); }
ONUT_FORCE_INLINE void _onutFramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) { onutGLAPI.onutFramebufferTexture3DOES(target, attachment, textarget, texture, level, zoffset); }
ONUT_FORCE_INLINE void _onutFramebufferTextureARB(GLenum target, GLenum attachment, GLuint texture, GLint level) { onutGLAPI.onutFramebufferTextureARB(target, attachment, texture, level); }
ONUT_FORCE_INLINE void _onutFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level) { onutGLAPI.onutFramebufferTextureEXT(target, attachment, texture, level); }
ONUT_FORCE_INLINE void _onutFramebufferTextureFaceARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face) { onutGLAPI.onutFramebufferTextureFaceARB(target, attachment, texture, level, face); }
ONUT_FORCE_INLINE void _onutFramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face) { onutGLAPI.onutFramebufferTextureFaceEXT(target, attachment, texture, level, face); }
ONUT_FORCE_INLINE void _onutFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) { onutGLAPI.onutFramebufferTextureLayer(target, attachment, texture, level, layer); }
ONUT_FORCE_INLINE void _onutFramebufferTextureLayerARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) { onutGLAPI.onutFramebufferTextureLayerARB(target, attachment, texture, level, layer); }
ONUT_FORCE_INLINE void _onutFramebufferTextureLayerDownsampleIMG(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLint xscale, GLint yscale) { onutGLAPI.onutFramebufferTextureLayerDownsampleIMG(target, attachment, texture, level, layer, xscale, yscale); }
ONUT_FORCE_INLINE void _onutFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) { onutGLAPI.onutFramebufferTextureLayerEXT(target, attachment, texture, level, layer); }
ONUT_FORCE_INLINE void _onutFramebufferTextureMultisampleMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews) { onutGLAPI.onutFramebufferTextureMultisampleMultiviewOVR(target, attachment, texture, level, samples, baseViewIndex, numViews); }
ONUT_FORCE_INLINE void _onutFramebufferTextureMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews) { onutGLAPI.onutFramebufferTextureMultiviewOVR(target, attachment, texture, level, baseViewIndex, numViews); }
ONUT_FORCE_INLINE void _onutFramebufferTextureOES(GLenum target, GLenum attachment, GLuint texture, GLint level) { onutGLAPI.onutFramebufferTextureOES(target, attachment, texture, level); }
ONUT_FORCE_INLINE void _onutFreeObjectBufferATI(GLuint buffer) { onutGLAPI.onutFreeObjectBufferATI(buffer); }
ONUT_FORCE_INLINE void _onutFrontFace(GLenum mode) { onutGLAPI.onutFrontFace(mode); }
ONUT_FORCE_INLINE void _onutFrustumfOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f) { onutGLAPI.onutFrustumfOES(l, r, b, t, n, f); }
ONUT_FORCE_INLINE void _onutFrustumxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f) { onutGLAPI.onutFrustumxOES(l, r, b, t, n, f); }
ONUT_FORCE_INLINE GLuint _onutGenAsyncMarkersSGIX(GLsizei range) { return onutGLAPI.onutGenAsyncMarkersSGIX(range); }
ONUT_FORCE_INLINE void _onutGenBuffers(GLsizei n, GLuint *buffers) { onutGLAPI.onutGenBuffers(n, buffers); }
ONUT_FORCE_INLINE void _onutGenBuffersARB(GLsizei n, GLuint *buffers) { onutGLAPI.onutGenBuffersARB(n, buffers); }
ONUT_FORCE_INLINE void _onutGenFencesAPPLE(GLsizei n, GLuint *fences) { onutGLAPI.onutGenFencesAPPLE(n, fences); }
ONUT_FORCE_INLINE void _onutGenFencesNV(GLsizei n, GLuint *fences) { onutGLAPI.onutGenFencesNV(n, fences); }
ONUT_FORCE_INLINE GLuint _onutGenFragmentShadersATI(GLuint range) { return onutGLAPI.onutGenFragmentShadersATI(range); }
ONUT_FORCE_INLINE void _onutGenFramebuffers(GLsizei n, GLuint *framebuffers) { onutGLAPI.onutGenFramebuffers(n, framebuffers); }
ONUT_FORCE_INLINE void _onutGenFramebuffersEXT(GLsizei n, GLuint *framebuffers) { onutGLAPI.onutGenFramebuffersEXT(n, framebuffers); }
ONUT_FORCE_INLINE void _onutGenNamesAMD(GLenum identifier, GLuint num, GLuint *names) { onutGLAPI.onutGenNamesAMD(identifier, num, names); }
ONUT_FORCE_INLINE void _onutGenOcclusionQueriesNV(GLsizei n, GLuint *ids) { onutGLAPI.onutGenOcclusionQueriesNV(n, ids); }
ONUT_FORCE_INLINE GLuint _onutGenPathsNV(GLsizei range) { return onutGLAPI.onutGenPathsNV(range); }
ONUT_FORCE_INLINE void _onutGenPerfMonitorsAMD(GLsizei n, GLuint *monitors) { onutGLAPI.onutGenPerfMonitorsAMD(n, monitors); }
ONUT_FORCE_INLINE void _onutGenProgramPipelines(GLsizei n, GLuint *pipelines) { onutGLAPI.onutGenProgramPipelines(n, pipelines); }
ONUT_FORCE_INLINE void _onutGenProgramPipelinesEXT(GLsizei n, GLuint *pipelines) { onutGLAPI.onutGenProgramPipelinesEXT(n, pipelines); }
ONUT_FORCE_INLINE void _onutGenProgramsARB(GLsizei n, GLuint *programs) { onutGLAPI.onutGenProgramsARB(n, programs); }
ONUT_FORCE_INLINE void _onutGenProgramsNV(GLsizei n, GLuint *programs) { onutGLAPI.onutGenProgramsNV(n, programs); }
ONUT_FORCE_INLINE void _onutGenQueries(GLsizei n, GLuint *ids) { onutGLAPI.onutGenQueries(n, ids); }
ONUT_FORCE_INLINE void _onutGenQueriesARB(GLsizei n, GLuint *ids) { onutGLAPI.onutGenQueriesARB(n, ids); }
ONUT_FORCE_INLINE void _onutGenQueriesEXT(GLsizei n, GLuint *ids) { onutGLAPI.onutGenQueriesEXT(n, ids); }
ONUT_FORCE_INLINE void _onutGenRenderbuffers(GLsizei n, GLuint *renderbuffers) { onutGLAPI.onutGenRenderbuffers(n, renderbuffers); }
ONUT_FORCE_INLINE void _onutGenRenderbuffersEXT(GLsizei n, GLuint *renderbuffers) { onutGLAPI.onutGenRenderbuffersEXT(n, renderbuffers); }
ONUT_FORCE_INLINE void _onutGenSamplers(GLsizei count, GLuint *samplers) { onutGLAPI.onutGenSamplers(count, samplers); }
ONUT_FORCE_INLINE void _onutGenSemaphoresEXT(GLsizei n, GLuint *semaphores) { onutGLAPI.onutGenSemaphoresEXT(n, semaphores); }
ONUT_FORCE_INLINE GLuint _onutGenSymbolsEXT(GLenum datatype, GLenum storagetype, GLenum range, GLuint components) { return onutGLAPI.onutGenSymbolsEXT(datatype, storagetype, range, components); }
ONUT_FORCE_INLINE void _onutGenTextures(GLsizei n, GLuint *textures) { onutGLAPI.onutGenTextures(n, textures); }
ONUT_FORCE_INLINE void _onutGenTexturesEXT(GLsizei n, GLuint *textures) { onutGLAPI.onutGenTexturesEXT(n, textures); }
ONUT_FORCE_INLINE void _onutGenTransformFeedbacks(GLsizei n, GLuint *ids) { onutGLAPI.onutGenTransformFeedbacks(n, ids); }
ONUT_FORCE_INLINE void _onutGenTransformFeedbacksNV(GLsizei n, GLuint *ids) { onutGLAPI.onutGenTransformFeedbacksNV(n, ids); }
ONUT_FORCE_INLINE void _onutGenVertexArrays(GLsizei n, GLuint *arrays) { onutGLAPI.onutGenVertexArrays(n, arrays); }
ONUT_FORCE_INLINE void _onutGenVertexArraysAPPLE(GLsizei n, GLuint *arrays) { onutGLAPI.onutGenVertexArraysAPPLE(n, arrays); }
ONUT_FORCE_INLINE void _onutGenVertexArraysOES(GLsizei n, GLuint *arrays) { onutGLAPI.onutGenVertexArraysOES(n, arrays); }
ONUT_FORCE_INLINE GLuint _onutGenVertexShadersEXT(GLuint range) { return onutGLAPI.onutGenVertexShadersEXT(range); }
ONUT_FORCE_INLINE void _onutGenerateMipmap(GLenum target) { onutGLAPI.onutGenerateMipmap(target); }
ONUT_FORCE_INLINE void _onutGenerateMipmapEXT(GLenum target) { onutGLAPI.onutGenerateMipmapEXT(target); }
ONUT_FORCE_INLINE void _onutGenerateMultiTexMipmapEXT(GLenum texunit, GLenum target) { onutGLAPI.onutGenerateMultiTexMipmapEXT(texunit, target); }
ONUT_FORCE_INLINE void _onutGenerateTextureMipmap(GLuint texture) { onutGLAPI.onutGenerateTextureMipmap(texture); }
ONUT_FORCE_INLINE void _onutGenerateTextureMipmapEXT(GLuint texture, GLenum target) { onutGLAPI.onutGenerateTextureMipmapEXT(texture, target); }
ONUT_FORCE_INLINE void _onutGetActiveAtomicCounterBufferiv(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params) { onutGLAPI.onutGetActiveAtomicCounterBufferiv(program, bufferIndex, pname, params); }
ONUT_FORCE_INLINE void _onutGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name) { onutGLAPI.onutGetActiveAttrib(program, index, bufSize, length, size, type, name); }
ONUT_FORCE_INLINE void _onutGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name) { onutGLAPI.onutGetActiveAttribARB(programObj, index, maxLength, length, size, type, name); }
ONUT_FORCE_INLINE void _onutGetActiveSubroutineName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name) { onutGLAPI.onutGetActiveSubroutineName(program, shadertype, index, bufsize, length, name); }
ONUT_FORCE_INLINE void _onutGetActiveSubroutineUniformName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name) { onutGLAPI.onutGetActiveSubroutineUniformName(program, shadertype, index, bufsize, length, name); }
ONUT_FORCE_INLINE void _onutGetActiveSubroutineUniformiv(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values) { onutGLAPI.onutGetActiveSubroutineUniformiv(program, shadertype, index, pname, values); }
ONUT_FORCE_INLINE void _onutGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name) { onutGLAPI.onutGetActiveUniform(program, index, bufSize, length, size, type, name); }
ONUT_FORCE_INLINE void _onutGetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name) { onutGLAPI.onutGetActiveUniformARB(programObj, index, maxLength, length, size, type, name); }
ONUT_FORCE_INLINE void _onutGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName) { onutGLAPI.onutGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName); }
ONUT_FORCE_INLINE void _onutGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params) { onutGLAPI.onutGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params); }
ONUT_FORCE_INLINE void _onutGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName) { onutGLAPI.onutGetActiveUniformName(program, uniformIndex, bufSize, length, uniformName); }
ONUT_FORCE_INLINE void _onutGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params) { onutGLAPI.onutGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params); }
ONUT_FORCE_INLINE void _onutGetActiveVaryingNV(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name) { onutGLAPI.onutGetActiveVaryingNV(program, index, bufSize, length, size, type, name); }
ONUT_FORCE_INLINE void _onutGetArrayObjectfvATI(GLenum array, GLenum pname, GLfloat *params) { onutGLAPI.onutGetArrayObjectfvATI(array, pname, params); }
ONUT_FORCE_INLINE void _onutGetArrayObjectivATI(GLenum array, GLenum pname, GLint *params) { onutGLAPI.onutGetArrayObjectivATI(array, pname, params); }
ONUT_FORCE_INLINE void _onutGetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj) { onutGLAPI.onutGetAttachedObjectsARB(containerObj, maxCount, count, obj); }
ONUT_FORCE_INLINE void _onutGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders) { onutGLAPI.onutGetAttachedShaders(program, maxCount, count, shaders); }
ONUT_FORCE_INLINE GLint _onutGetAttribLocation(GLuint program, const GLchar *name) { return onutGLAPI.onutGetAttribLocation(program, name); }
ONUT_FORCE_INLINE GLint _onutGetAttribLocationARB(GLhandleARB programObj, const GLcharARB *name) { return onutGLAPI.onutGetAttribLocationARB(programObj, name); }
ONUT_FORCE_INLINE void _onutGetBooleanIndexedvEXT(GLenum target, GLuint index, GLboolean *data) { onutGLAPI.onutGetBooleanIndexedvEXT(target, index, data); }
ONUT_FORCE_INLINE void _onutGetBooleani_v(GLenum target, GLuint index, GLboolean *data) { onutGLAPI.onutGetBooleani_v(target, index, data); }
ONUT_FORCE_INLINE void _onutGetBooleanv(GLenum pname, GLboolean *data) { onutGLAPI.onutGetBooleanv(pname, data); }
ONUT_FORCE_INLINE void _onutGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 *params) { onutGLAPI.onutGetBufferParameteri64v(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetBufferParameteriv(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetBufferParameteriv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetBufferParameterivARB(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetBufferParameterivARB(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetBufferParameterui64vNV(GLenum target, GLenum pname, GLuint64EXT *params) { onutGLAPI.onutGetBufferParameterui64vNV(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetBufferPointerv(GLenum target, GLenum pname, void **params) { onutGLAPI.onutGetBufferPointerv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetBufferPointervARB(GLenum target, GLenum pname, void **params) { onutGLAPI.onutGetBufferPointervARB(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetBufferPointervOES(GLenum target, GLenum pname, void **params) { onutGLAPI.onutGetBufferPointervOES(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, void *data) { onutGLAPI.onutGetBufferSubData(target, offset, size, data); }
ONUT_FORCE_INLINE void _onutGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data) { onutGLAPI.onutGetBufferSubDataARB(target, offset, size, data); }
ONUT_FORCE_INLINE void _onutGetClipPlanefOES(GLenum plane, GLfloat *equation) { onutGLAPI.onutGetClipPlanefOES(plane, equation); }
ONUT_FORCE_INLINE void _onutGetClipPlanexOES(GLenum plane, GLfixed *equation) { onutGLAPI.onutGetClipPlanexOES(plane, equation); }
ONUT_FORCE_INLINE void _onutGetColorTable(GLenum target, GLenum format, GLenum type, void *table) { onutGLAPI.onutGetColorTable(target, format, type, table); }
ONUT_FORCE_INLINE void _onutGetColorTableEXT(GLenum target, GLenum format, GLenum type, void *data) { onutGLAPI.onutGetColorTableEXT(target, format, type, data); }
ONUT_FORCE_INLINE void _onutGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetColorTableParameterfv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetColorTableParameterfvEXT(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetColorTableParameterfvEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetColorTableParameterfvSGI(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetColorTableParameterfvSGI(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetColorTableParameteriv(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetColorTableParameteriv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetColorTableParameterivEXT(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetColorTableParameterivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetColorTableParameterivSGI(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetColorTableParameterivSGI(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetColorTableSGI(GLenum target, GLenum format, GLenum type, void *table) { onutGLAPI.onutGetColorTableSGI(target, format, type, table); }
ONUT_FORCE_INLINE void _onutGetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params) { onutGLAPI.onutGetCombinerInputParameterfvNV(stage, portion, variable, pname, params); }
ONUT_FORCE_INLINE void _onutGetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params) { onutGLAPI.onutGetCombinerInputParameterivNV(stage, portion, variable, pname, params); }
ONUT_FORCE_INLINE void _onutGetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat *params) { onutGLAPI.onutGetCombinerOutputParameterfvNV(stage, portion, pname, params); }
ONUT_FORCE_INLINE void _onutGetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint *params) { onutGLAPI.onutGetCombinerOutputParameterivNV(stage, portion, pname, params); }
ONUT_FORCE_INLINE void _onutGetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat *params) { onutGLAPI.onutGetCombinerStageParameterfvNV(stage, pname, params); }
ONUT_FORCE_INLINE GLuint _onutGetCommandHeaderNV(GLenum tokenID, GLuint size) { return onutGLAPI.onutGetCommandHeaderNV(tokenID, size); }
ONUT_FORCE_INLINE void _onutGetCompressedMultiTexImageEXT(GLenum texunit, GLenum target, GLint lod, void *img) { onutGLAPI.onutGetCompressedMultiTexImageEXT(texunit, target, lod, img); }
ONUT_FORCE_INLINE void _onutGetCompressedTexImage(GLenum target, GLint level, void *img) { onutGLAPI.onutGetCompressedTexImage(target, level, img); }
ONUT_FORCE_INLINE void _onutGetCompressedTexImageARB(GLenum target, GLint level, void *img) { onutGLAPI.onutGetCompressedTexImageARB(target, level, img); }
ONUT_FORCE_INLINE void _onutGetCompressedTextureImage(GLuint texture, GLint level, GLsizei bufSize, void *pixels) { onutGLAPI.onutGetCompressedTextureImage(texture, level, bufSize, pixels); }
ONUT_FORCE_INLINE void _onutGetCompressedTextureImageEXT(GLuint texture, GLenum target, GLint lod, void *img) { onutGLAPI.onutGetCompressedTextureImageEXT(texture, target, lod, img); }
ONUT_FORCE_INLINE void _onutGetCompressedTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels) { onutGLAPI.onutGetCompressedTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels); }
ONUT_FORCE_INLINE void _onutGetConvolutionFilter(GLenum target, GLenum format, GLenum type, void *image) { onutGLAPI.onutGetConvolutionFilter(target, format, type, image); }
ONUT_FORCE_INLINE void _onutGetConvolutionFilterEXT(GLenum target, GLenum format, GLenum type, void *image) { onutGLAPI.onutGetConvolutionFilterEXT(target, format, type, image); }
ONUT_FORCE_INLINE void _onutGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetConvolutionParameterfv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetConvolutionParameterfvEXT(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetConvolutionParameterfvEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetConvolutionParameteriv(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetConvolutionParameteriv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetConvolutionParameterivEXT(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetConvolutionParameterivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetConvolutionParameterxvOES(GLenum target, GLenum pname, GLfixed *params) { onutGLAPI.onutGetConvolutionParameterxvOES(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetCoverageModulationTableNV(GLsizei bufsize, GLfloat *v) { onutGLAPI.onutGetCoverageModulationTableNV(bufsize, v); }
ONUT_FORCE_INLINE GLuint _onutGetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog) { return onutGLAPI.onutGetDebugMessageLog(count, bufSize, sources, types, ids, severities, lengths, messageLog); }
ONUT_FORCE_INLINE GLuint _onutGetDebugMessageLogAMD(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message) { return onutGLAPI.onutGetDebugMessageLogAMD(count, bufsize, categories, severities, ids, lengths, message); }
ONUT_FORCE_INLINE GLuint _onutGetDebugMessageLogARB(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog) { return onutGLAPI.onutGetDebugMessageLogARB(count, bufSize, sources, types, ids, severities, lengths, messageLog); }
ONUT_FORCE_INLINE GLuint _onutGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog) { return onutGLAPI.onutGetDebugMessageLogKHR(count, bufSize, sources, types, ids, severities, lengths, messageLog); }
ONUT_FORCE_INLINE void _onutGetDetailTexFuncSGIS(GLenum target, GLfloat *points) { onutGLAPI.onutGetDetailTexFuncSGIS(target, points); }
ONUT_FORCE_INLINE void _onutGetDoubleIndexedvEXT(GLenum target, GLuint index, GLdouble *data) { onutGLAPI.onutGetDoubleIndexedvEXT(target, index, data); }
ONUT_FORCE_INLINE void _onutGetDoublei_v(GLenum target, GLuint index, GLdouble *data) { onutGLAPI.onutGetDoublei_v(target, index, data); }
ONUT_FORCE_INLINE void _onutGetDoublei_vEXT(GLenum pname, GLuint index, GLdouble *params) { onutGLAPI.onutGetDoublei_vEXT(pname, index, params); }
ONUT_FORCE_INLINE void _onutGetDoublev(GLenum pname, GLdouble *data) { onutGLAPI.onutGetDoublev(pname, data); }
ONUT_FORCE_INLINE void _onutGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString) { onutGLAPI.onutGetDriverControlStringQCOM(driverControl, bufSize, length, driverControlString); }
ONUT_FORCE_INLINE void _onutGetDriverControlsQCOM(GLint *num, GLsizei size, GLuint *driverControls) { onutGLAPI.onutGetDriverControlsQCOM(num, size, driverControls); }
ONUT_FORCE_INLINE GLenum _onutGetError(void) { return onutGLAPI.onutGetError(); }
ONUT_FORCE_INLINE void _onutGetFenceivNV(GLuint fence, GLenum pname, GLint *params) { onutGLAPI.onutGetFenceivNV(fence, pname, params); }
ONUT_FORCE_INLINE void _onutGetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat *params) { onutGLAPI.onutGetFinalCombinerInputParameterfvNV(variable, pname, params); }
ONUT_FORCE_INLINE void _onutGetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint *params) { onutGLAPI.onutGetFinalCombinerInputParameterivNV(variable, pname, params); }
ONUT_FORCE_INLINE void _onutGetFirstPerfQueryIdINTEL(GLuint *queryId) { onutGLAPI.onutGetFirstPerfQueryIdINTEL(queryId); }
ONUT_FORCE_INLINE void _onutGetFixedvOES(GLenum pname, GLfixed *params) { onutGLAPI.onutGetFixedvOES(pname, params); }
ONUT_FORCE_INLINE void _onutGetFloatIndexedvEXT(GLenum target, GLuint index, GLfloat *data) { onutGLAPI.onutGetFloatIndexedvEXT(target, index, data); }
ONUT_FORCE_INLINE void _onutGetFloati_v(GLenum target, GLuint index, GLfloat *data) { onutGLAPI.onutGetFloati_v(target, index, data); }
ONUT_FORCE_INLINE void _onutGetFloati_vEXT(GLenum pname, GLuint index, GLfloat *params) { onutGLAPI.onutGetFloati_vEXT(pname, index, params); }
ONUT_FORCE_INLINE void _onutGetFloati_vNV(GLenum target, GLuint index, GLfloat *data) { onutGLAPI.onutGetFloati_vNV(target, index, data); }
ONUT_FORCE_INLINE void _onutGetFloati_vOES(GLenum target, GLuint index, GLfloat *data) { onutGLAPI.onutGetFloati_vOES(target, index, data); }
ONUT_FORCE_INLINE void _onutGetFloatv(GLenum pname, GLfloat *data) { onutGLAPI.onutGetFloatv(pname, data); }
ONUT_FORCE_INLINE void _onutGetFogFuncSGIS(GLfloat *points) { onutGLAPI.onutGetFogFuncSGIS(points); }
ONUT_FORCE_INLINE GLint _onutGetFragDataIndex(GLuint program, const GLchar *name) { return onutGLAPI.onutGetFragDataIndex(program, name); }
ONUT_FORCE_INLINE GLint _onutGetFragDataIndexEXT(GLuint program, const GLchar *name) { return onutGLAPI.onutGetFragDataIndexEXT(program, name); }
ONUT_FORCE_INLINE GLint _onutGetFragDataLocation(GLuint program, const GLchar *name) { return onutGLAPI.onutGetFragDataLocation(program, name); }
ONUT_FORCE_INLINE GLint _onutGetFragDataLocationEXT(GLuint program, const GLchar *name) { return onutGLAPI.onutGetFragDataLocationEXT(program, name); }
ONUT_FORCE_INLINE void _onutGetFragmentLightfvSGIX(GLenum light, GLenum pname, GLfloat *params) { onutGLAPI.onutGetFragmentLightfvSGIX(light, pname, params); }
ONUT_FORCE_INLINE void _onutGetFragmentLightivSGIX(GLenum light, GLenum pname, GLint *params) { onutGLAPI.onutGetFragmentLightivSGIX(light, pname, params); }
ONUT_FORCE_INLINE void _onutGetFragmentMaterialfvSGIX(GLenum face, GLenum pname, GLfloat *params) { onutGLAPI.onutGetFragmentMaterialfvSGIX(face, pname, params); }
ONUT_FORCE_INLINE void _onutGetFragmentMaterialivSGIX(GLenum face, GLenum pname, GLint *params) { onutGLAPI.onutGetFragmentMaterialivSGIX(face, pname, params); }
ONUT_FORCE_INLINE void _onutGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint *params) { onutGLAPI.onutGetFramebufferAttachmentParameteriv(target, attachment, pname, params); }
ONUT_FORCE_INLINE void _onutGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint *params) { onutGLAPI.onutGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params); }
ONUT_FORCE_INLINE void _onutGetFramebufferParameterfvAMD(GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values) { onutGLAPI.onutGetFramebufferParameterfvAMD(target, pname, numsamples, pixelindex, size, values); }
ONUT_FORCE_INLINE void _onutGetFramebufferParameteriv(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetFramebufferParameteriv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint *params) { onutGLAPI.onutGetFramebufferParameterivEXT(framebuffer, pname, params); }
ONUT_FORCE_INLINE GLsizei _onutGetFramebufferPixelLocalStorageSizeEXT(GLuint target) { return onutGLAPI.onutGetFramebufferPixelLocalStorageSizeEXT(target); }
ONUT_FORCE_INLINE GLenum _onutGetGraphicsResetStatus(void) { return onutGLAPI.onutGetGraphicsResetStatus(); }
ONUT_FORCE_INLINE GLenum _onutGetGraphicsResetStatusARB(void) { return onutGLAPI.onutGetGraphicsResetStatusARB(); }
ONUT_FORCE_INLINE GLenum _onutGetGraphicsResetStatusEXT(void) { return onutGLAPI.onutGetGraphicsResetStatusEXT(); }
ONUT_FORCE_INLINE GLenum _onutGetGraphicsResetStatusKHR(void) { return onutGLAPI.onutGetGraphicsResetStatusKHR(); }
ONUT_FORCE_INLINE GLhandleARB _onutGetHandleARB(GLenum pname) { return onutGLAPI.onutGetHandleARB(pname); }
ONUT_FORCE_INLINE void _onutGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values) { onutGLAPI.onutGetHistogram(target, reset, format, type, values); }
ONUT_FORCE_INLINE void _onutGetHistogramEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values) { onutGLAPI.onutGetHistogramEXT(target, reset, format, type, values); }
ONUT_FORCE_INLINE void _onutGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetHistogramParameterfv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetHistogramParameterfvEXT(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetHistogramParameterfvEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetHistogramParameteriv(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetHistogramParameteriv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetHistogramParameterivEXT(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetHistogramParameterivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetHistogramParameterxvOES(GLenum target, GLenum pname, GLfixed *params) { onutGLAPI.onutGetHistogramParameterxvOES(target, pname, params); }
ONUT_FORCE_INLINE GLuint64 _onutGetImageHandleARB(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format) { return onutGLAPI.onutGetImageHandleARB(texture, level, layered, layer, format); }
ONUT_FORCE_INLINE GLuint64 _onutGetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format) { return onutGLAPI.onutGetImageHandleNV(texture, level, layered, layer, format); }
ONUT_FORCE_INLINE void _onutGetImageTransformParameterfvHP(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetImageTransformParameterfvHP(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetImageTransformParameterivHP(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetImageTransformParameterivHP(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog) { onutGLAPI.onutGetInfoLogARB(obj, maxLength, length, infoLog); }
ONUT_FORCE_INLINE GLint _onutGetInstrumentsSGIX(void) { return onutGLAPI.onutGetInstrumentsSGIX(); }
ONUT_FORCE_INLINE void _onutGetInteger64i_v(GLenum target, GLuint index, GLint64 *data) { onutGLAPI.onutGetInteger64i_v(target, index, data); }
ONUT_FORCE_INLINE void _onutGetInteger64v(GLenum pname, GLint64 *data) { onutGLAPI.onutGetInteger64v(pname, data); }
ONUT_FORCE_INLINE void _onutGetInteger64vAPPLE(GLenum pname, GLint64 *params) { onutGLAPI.onutGetInteger64vAPPLE(pname, params); }
ONUT_FORCE_INLINE void _onutGetIntegerIndexedvEXT(GLenum target, GLuint index, GLint *data) { onutGLAPI.onutGetIntegerIndexedvEXT(target, index, data); }
ONUT_FORCE_INLINE void _onutGetIntegeri_v(GLenum target, GLuint index, GLint *data) { onutGLAPI.onutGetIntegeri_v(target, index, data); }
ONUT_FORCE_INLINE void _onutGetIntegeri_vEXT(GLenum target, GLuint index, GLint *data) { onutGLAPI.onutGetIntegeri_vEXT(target, index, data); }
ONUT_FORCE_INLINE void _onutGetIntegerui64i_vNV(GLenum value, GLuint index, GLuint64EXT *result) { onutGLAPI.onutGetIntegerui64i_vNV(value, index, result); }
ONUT_FORCE_INLINE void _onutGetIntegerui64vNV(GLenum value, GLuint64EXT *result) { onutGLAPI.onutGetIntegerui64vNV(value, result); }
ONUT_FORCE_INLINE void _onutGetIntegerv(GLenum pname, GLint *data) { onutGLAPI.onutGetIntegerv(pname, data); }
ONUT_FORCE_INLINE void _onutGetInternalformatSampleivNV(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params) { onutGLAPI.onutGetInternalformatSampleivNV(target, internalformat, samples, pname, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetInternalformati64v(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params) { onutGLAPI.onutGetInternalformati64v(target, internalformat, pname, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params) { onutGLAPI.onutGetInternalformativ(target, internalformat, pname, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetInvariantBooleanvEXT(GLuint id, GLenum value, GLboolean *data) { onutGLAPI.onutGetInvariantBooleanvEXT(id, value, data); }
ONUT_FORCE_INLINE void _onutGetInvariantFloatvEXT(GLuint id, GLenum value, GLfloat *data) { onutGLAPI.onutGetInvariantFloatvEXT(id, value, data); }
ONUT_FORCE_INLINE void _onutGetInvariantIntegervEXT(GLuint id, GLenum value, GLint *data) { onutGLAPI.onutGetInvariantIntegervEXT(id, value, data); }
ONUT_FORCE_INLINE void _onutGetLightxOES(GLenum light, GLenum pname, GLfixed *params) { onutGLAPI.onutGetLightxOES(light, pname, params); }
ONUT_FORCE_INLINE void _onutGetListParameterfvSGIX(GLuint list, GLenum pname, GLfloat *params) { onutGLAPI.onutGetListParameterfvSGIX(list, pname, params); }
ONUT_FORCE_INLINE void _onutGetListParameterivSGIX(GLuint list, GLenum pname, GLint *params) { onutGLAPI.onutGetListParameterivSGIX(list, pname, params); }
ONUT_FORCE_INLINE void _onutGetLocalConstantBooleanvEXT(GLuint id, GLenum value, GLboolean *data) { onutGLAPI.onutGetLocalConstantBooleanvEXT(id, value, data); }
ONUT_FORCE_INLINE void _onutGetLocalConstantFloatvEXT(GLuint id, GLenum value, GLfloat *data) { onutGLAPI.onutGetLocalConstantFloatvEXT(id, value, data); }
ONUT_FORCE_INLINE void _onutGetLocalConstantIntegervEXT(GLuint id, GLenum value, GLint *data) { onutGLAPI.onutGetLocalConstantIntegervEXT(id, value, data); }
ONUT_FORCE_INLINE void _onutGetMapAttribParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat *params) { onutGLAPI.onutGetMapAttribParameterfvNV(target, index, pname, params); }
ONUT_FORCE_INLINE void _onutGetMapAttribParameterivNV(GLenum target, GLuint index, GLenum pname, GLint *params) { onutGLAPI.onutGetMapAttribParameterivNV(target, index, pname, params); }
ONUT_FORCE_INLINE void _onutGetMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points) { onutGLAPI.onutGetMapControlPointsNV(target, index, type, ustride, vstride, packed, points); }
ONUT_FORCE_INLINE void _onutGetMapParameterfvNV(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetMapParameterfvNV(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetMapParameterivNV(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetMapParameterivNV(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetMapxvOES(GLenum target, GLenum query, GLfixed *v) { onutGLAPI.onutGetMapxvOES(target, query, v); }
ONUT_FORCE_INLINE void _onutGetMaterialxOES(GLenum face, GLenum pname, GLfixed param) { onutGLAPI.onutGetMaterialxOES(face, pname, param); }
ONUT_FORCE_INLINE void _onutGetMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, GLint *params) { onutGLAPI.onutGetMemoryObjectParameterivEXT(memoryObject, pname, params); }
ONUT_FORCE_INLINE void _onutGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values) { onutGLAPI.onutGetMinmax(target, reset, format, type, values); }
ONUT_FORCE_INLINE void _onutGetMinmaxEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values) { onutGLAPI.onutGetMinmaxEXT(target, reset, format, type, values); }
ONUT_FORCE_INLINE void _onutGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetMinmaxParameterfv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetMinmaxParameterfvEXT(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetMinmaxParameterfvEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetMinmaxParameteriv(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetMinmaxParameteriv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetMinmaxParameterivEXT(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetMinmaxParameterivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetMultiTexEnvfvEXT(texunit, target, pname, params); }
ONUT_FORCE_INLINE void _onutGetMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetMultiTexEnvivEXT(texunit, target, pname, params); }
ONUT_FORCE_INLINE void _onutGetMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params) { onutGLAPI.onutGetMultiTexGendvEXT(texunit, coord, pname, params); }
ONUT_FORCE_INLINE void _onutGetMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params) { onutGLAPI.onutGetMultiTexGenfvEXT(texunit, coord, pname, params); }
ONUT_FORCE_INLINE void _onutGetMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, GLint *params) { onutGLAPI.onutGetMultiTexGenivEXT(texunit, coord, pname, params); }
ONUT_FORCE_INLINE void _onutGetMultiTexImageEXT(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels) { onutGLAPI.onutGetMultiTexImageEXT(texunit, target, level, format, type, pixels); }
ONUT_FORCE_INLINE void _onutGetMultiTexLevelParameterfvEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params) { onutGLAPI.onutGetMultiTexLevelParameterfvEXT(texunit, target, level, pname, params); }
ONUT_FORCE_INLINE void _onutGetMultiTexLevelParameterivEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params) { onutGLAPI.onutGetMultiTexLevelParameterivEXT(texunit, target, level, pname, params); }
ONUT_FORCE_INLINE void _onutGetMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetMultiTexParameterIivEXT(texunit, target, pname, params); }
ONUT_FORCE_INLINE void _onutGetMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, GLuint *params) { onutGLAPI.onutGetMultiTexParameterIuivEXT(texunit, target, pname, params); }
ONUT_FORCE_INLINE void _onutGetMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetMultiTexParameterfvEXT(texunit, target, pname, params); }
ONUT_FORCE_INLINE void _onutGetMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetMultiTexParameterivEXT(texunit, target, pname, params); }
ONUT_FORCE_INLINE void _onutGetMultisamplefv(GLenum pname, GLuint index, GLfloat *val) { onutGLAPI.onutGetMultisamplefv(pname, index, val); }
ONUT_FORCE_INLINE void _onutGetMultisamplefvNV(GLenum pname, GLuint index, GLfloat *val) { onutGLAPI.onutGetMultisamplefvNV(pname, index, val); }
ONUT_FORCE_INLINE void _onutGetNamedBufferParameteri64v(GLuint buffer, GLenum pname, GLint64 *params) { onutGLAPI.onutGetNamedBufferParameteri64v(buffer, pname, params); }
ONUT_FORCE_INLINE void _onutGetNamedBufferParameteriv(GLuint buffer, GLenum pname, GLint *params) { onutGLAPI.onutGetNamedBufferParameteriv(buffer, pname, params); }
ONUT_FORCE_INLINE void _onutGetNamedBufferParameterivEXT(GLuint buffer, GLenum pname, GLint *params) { onutGLAPI.onutGetNamedBufferParameterivEXT(buffer, pname, params); }
ONUT_FORCE_INLINE void _onutGetNamedBufferParameterui64vNV(GLuint buffer, GLenum pname, GLuint64EXT *params) { onutGLAPI.onutGetNamedBufferParameterui64vNV(buffer, pname, params); }
ONUT_FORCE_INLINE void _onutGetNamedBufferPointerv(GLuint buffer, GLenum pname, void **params) { onutGLAPI.onutGetNamedBufferPointerv(buffer, pname, params); }
ONUT_FORCE_INLINE void _onutGetNamedBufferPointervEXT(GLuint buffer, GLenum pname, void **params) { onutGLAPI.onutGetNamedBufferPointervEXT(buffer, pname, params); }
ONUT_FORCE_INLINE void _onutGetNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data) { onutGLAPI.onutGetNamedBufferSubData(buffer, offset, size, data); }
ONUT_FORCE_INLINE void _onutGetNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data) { onutGLAPI.onutGetNamedBufferSubDataEXT(buffer, offset, size, data); }
ONUT_FORCE_INLINE void _onutGetNamedFramebufferAttachmentParameteriv(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params) { onutGLAPI.onutGetNamedFramebufferAttachmentParameteriv(framebuffer, attachment, pname, params); }
ONUT_FORCE_INLINE void _onutGetNamedFramebufferAttachmentParameterivEXT(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params) { onutGLAPI.onutGetNamedFramebufferAttachmentParameterivEXT(framebuffer, attachment, pname, params); }
ONUT_FORCE_INLINE void _onutGetNamedFramebufferParameterfvAMD(GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values) { onutGLAPI.onutGetNamedFramebufferParameterfvAMD(framebuffer, pname, numsamples, pixelindex, size, values); }
ONUT_FORCE_INLINE void _onutGetNamedFramebufferParameteriv(GLuint framebuffer, GLenum pname, GLint *param) { onutGLAPI.onutGetNamedFramebufferParameteriv(framebuffer, pname, param); }
ONUT_FORCE_INLINE void _onutGetNamedFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint *params) { onutGLAPI.onutGetNamedFramebufferParameterivEXT(framebuffer, pname, params); }
ONUT_FORCE_INLINE void _onutGetNamedProgramLocalParameterIivEXT(GLuint program, GLenum target, GLuint index, GLint *params) { onutGLAPI.onutGetNamedProgramLocalParameterIivEXT(program, target, index, params); }
ONUT_FORCE_INLINE void _onutGetNamedProgramLocalParameterIuivEXT(GLuint program, GLenum target, GLuint index, GLuint *params) { onutGLAPI.onutGetNamedProgramLocalParameterIuivEXT(program, target, index, params); }
ONUT_FORCE_INLINE void _onutGetNamedProgramLocalParameterdvEXT(GLuint program, GLenum target, GLuint index, GLdouble *params) { onutGLAPI.onutGetNamedProgramLocalParameterdvEXT(program, target, index, params); }
ONUT_FORCE_INLINE void _onutGetNamedProgramLocalParameterfvEXT(GLuint program, GLenum target, GLuint index, GLfloat *params) { onutGLAPI.onutGetNamedProgramLocalParameterfvEXT(program, target, index, params); }
ONUT_FORCE_INLINE void _onutGetNamedProgramStringEXT(GLuint program, GLenum target, GLenum pname, void *string) { onutGLAPI.onutGetNamedProgramStringEXT(program, target, pname, string); }
ONUT_FORCE_INLINE void _onutGetNamedProgramivEXT(GLuint program, GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetNamedProgramivEXT(program, target, pname, params); }
ONUT_FORCE_INLINE void _onutGetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname, GLint *params) { onutGLAPI.onutGetNamedRenderbufferParameteriv(renderbuffer, pname, params); }
ONUT_FORCE_INLINE void _onutGetNamedRenderbufferParameterivEXT(GLuint renderbuffer, GLenum pname, GLint *params) { onutGLAPI.onutGetNamedRenderbufferParameterivEXT(renderbuffer, pname, params); }
ONUT_FORCE_INLINE void _onutGetNamedStringARB(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string) { onutGLAPI.onutGetNamedStringARB(namelen, name, bufSize, stringlen, string); }
ONUT_FORCE_INLINE void _onutGetNamedStringivARB(GLint namelen, const GLchar *name, GLenum pname, GLint *params) { onutGLAPI.onutGetNamedStringivARB(namelen, name, pname, params); }
ONUT_FORCE_INLINE void _onutGetNextPerfQueryIdINTEL(GLuint queryId, GLuint *nextQueryId) { onutGLAPI.onutGetNextPerfQueryIdINTEL(queryId, nextQueryId); }
ONUT_FORCE_INLINE void _onutGetObjectBufferfvATI(GLuint buffer, GLenum pname, GLfloat *params) { onutGLAPI.onutGetObjectBufferfvATI(buffer, pname, params); }
ONUT_FORCE_INLINE void _onutGetObjectBufferivATI(GLuint buffer, GLenum pname, GLint *params) { onutGLAPI.onutGetObjectBufferivATI(buffer, pname, params); }
ONUT_FORCE_INLINE void _onutGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label) { onutGLAPI.onutGetObjectLabel(identifier, name, bufSize, length, label); }
ONUT_FORCE_INLINE void _onutGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label) { onutGLAPI.onutGetObjectLabelEXT(type, object, bufSize, length, label); }
ONUT_FORCE_INLINE void _onutGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label) { onutGLAPI.onutGetObjectLabelKHR(identifier, name, bufSize, length, label); }
ONUT_FORCE_INLINE void _onutGetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat *params) { onutGLAPI.onutGetObjectParameterfvARB(obj, pname, params); }
ONUT_FORCE_INLINE void _onutGetObjectParameterivAPPLE(GLenum objectType, GLuint name, GLenum pname, GLint *params) { onutGLAPI.onutGetObjectParameterivAPPLE(objectType, name, pname, params); }
ONUT_FORCE_INLINE void _onutGetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint *params) { onutGLAPI.onutGetObjectParameterivARB(obj, pname, params); }
ONUT_FORCE_INLINE void _onutGetObjectPtrLabel(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label) { onutGLAPI.onutGetObjectPtrLabel(ptr, bufSize, length, label); }
ONUT_FORCE_INLINE void _onutGetObjectPtrLabelKHR(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label) { onutGLAPI.onutGetObjectPtrLabelKHR(ptr, bufSize, length, label); }
ONUT_FORCE_INLINE void _onutGetOcclusionQueryivNV(GLuint id, GLenum pname, GLint *params) { onutGLAPI.onutGetOcclusionQueryivNV(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetOcclusionQueryuivNV(GLuint id, GLenum pname, GLuint *params) { onutGLAPI.onutGetOcclusionQueryuivNV(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetPathColorGenfvNV(GLenum color, GLenum pname, GLfloat *value) { onutGLAPI.onutGetPathColorGenfvNV(color, pname, value); }
ONUT_FORCE_INLINE void _onutGetPathColorGenivNV(GLenum color, GLenum pname, GLint *value) { onutGLAPI.onutGetPathColorGenivNV(color, pname, value); }
ONUT_FORCE_INLINE void _onutGetPathCommandsNV(GLuint path, GLubyte *commands) { onutGLAPI.onutGetPathCommandsNV(path, commands); }
ONUT_FORCE_INLINE void _onutGetPathCoordsNV(GLuint path, GLfloat *coords) { onutGLAPI.onutGetPathCoordsNV(path, coords); }
ONUT_FORCE_INLINE void _onutGetPathDashArrayNV(GLuint path, GLfloat *dashArray) { onutGLAPI.onutGetPathDashArrayNV(path, dashArray); }
ONUT_FORCE_INLINE GLfloat _onutGetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments) { return onutGLAPI.onutGetPathLengthNV(path, startSegment, numSegments); }
ONUT_FORCE_INLINE void _onutGetPathMetricRangeNV(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics) { onutGLAPI.onutGetPathMetricRangeNV(metricQueryMask, firstPathName, numPaths, stride, metrics); }
ONUT_FORCE_INLINE void _onutGetPathMetricsNV(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics) { onutGLAPI.onutGetPathMetricsNV(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics); }
ONUT_FORCE_INLINE void _onutGetPathParameterfvNV(GLuint path, GLenum pname, GLfloat *value) { onutGLAPI.onutGetPathParameterfvNV(path, pname, value); }
ONUT_FORCE_INLINE void _onutGetPathParameterivNV(GLuint path, GLenum pname, GLint *value) { onutGLAPI.onutGetPathParameterivNV(path, pname, value); }
ONUT_FORCE_INLINE void _onutGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing) { onutGLAPI.onutGetPathSpacingNV(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing); }
ONUT_FORCE_INLINE void _onutGetPathTexGenfvNV(GLenum texCoordSet, GLenum pname, GLfloat *value) { onutGLAPI.onutGetPathTexGenfvNV(texCoordSet, pname, value); }
ONUT_FORCE_INLINE void _onutGetPathTexGenivNV(GLenum texCoordSet, GLenum pname, GLint *value) { onutGLAPI.onutGetPathTexGenivNV(texCoordSet, pname, value); }
ONUT_FORCE_INLINE void _onutGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue) { onutGLAPI.onutGetPerfCounterInfoINTEL(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue); }
ONUT_FORCE_INLINE void _onutGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten) { onutGLAPI.onutGetPerfMonitorCounterDataAMD(monitor, pname, dataSize, data, bytesWritten); }
ONUT_FORCE_INLINE void _onutGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void *data) { onutGLAPI.onutGetPerfMonitorCounterInfoAMD(group, counter, pname, data); }
ONUT_FORCE_INLINE void _onutGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString) { onutGLAPI.onutGetPerfMonitorCounterStringAMD(group, counter, bufSize, length, counterString); }
ONUT_FORCE_INLINE void _onutGetPerfMonitorCountersAMD(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters) { onutGLAPI.onutGetPerfMonitorCountersAMD(group, numCounters, maxActiveCounters, counterSize, counters); }
ONUT_FORCE_INLINE void _onutGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString) { onutGLAPI.onutGetPerfMonitorGroupStringAMD(group, bufSize, length, groupString); }
ONUT_FORCE_INLINE void _onutGetPerfMonitorGroupsAMD(GLint *numGroups, GLsizei groupsSize, GLuint *groups) { onutGLAPI.onutGetPerfMonitorGroupsAMD(numGroups, groupsSize, groups); }
ONUT_FORCE_INLINE void _onutGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten) { onutGLAPI.onutGetPerfQueryDataINTEL(queryHandle, flags, dataSize, data, bytesWritten); }
ONUT_FORCE_INLINE void _onutGetPerfQueryIdByNameINTEL(GLchar *queryName, GLuint *queryId) { onutGLAPI.onutGetPerfQueryIdByNameINTEL(queryName, queryId); }
ONUT_FORCE_INLINE void _onutGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask) { onutGLAPI.onutGetPerfQueryInfoINTEL(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask); }
ONUT_FORCE_INLINE void _onutGetPixelMapxv(GLenum map, GLint size, GLfixed *values) { onutGLAPI.onutGetPixelMapxv(map, size, values); }
ONUT_FORCE_INLINE void _onutGetPixelTexGenParameterfvSGIS(GLenum pname, GLfloat *params) { onutGLAPI.onutGetPixelTexGenParameterfvSGIS(pname, params); }
ONUT_FORCE_INLINE void _onutGetPixelTexGenParameterivSGIS(GLenum pname, GLint *params) { onutGLAPI.onutGetPixelTexGenParameterivSGIS(pname, params); }
ONUT_FORCE_INLINE void _onutGetPixelTransformParameterfvEXT(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetPixelTransformParameterfvEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetPixelTransformParameterivEXT(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetPixelTransformParameterivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetPointerIndexedvEXT(GLenum target, GLuint index, void **data) { onutGLAPI.onutGetPointerIndexedvEXT(target, index, data); }
ONUT_FORCE_INLINE void _onutGetPointeri_vEXT(GLenum pname, GLuint index, void **params) { onutGLAPI.onutGetPointeri_vEXT(pname, index, params); }
ONUT_FORCE_INLINE void _onutGetPointerv(GLenum pname, void **params) { onutGLAPI.onutGetPointerv(pname, params); }
ONUT_FORCE_INLINE void _onutGetPointervEXT(GLenum pname, void **params) { onutGLAPI.onutGetPointervEXT(pname, params); }
ONUT_FORCE_INLINE void _onutGetPointervKHR(GLenum pname, void **params) { onutGLAPI.onutGetPointervKHR(pname, params); }
ONUT_FORCE_INLINE void _onutGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary) { onutGLAPI.onutGetProgramBinary(program, bufSize, length, binaryFormat, binary); }
ONUT_FORCE_INLINE void _onutGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary) { onutGLAPI.onutGetProgramBinaryOES(program, bufSize, length, binaryFormat, binary); }
ONUT_FORCE_INLINE void _onutGetProgramEnvParameterIivNV(GLenum target, GLuint index, GLint *params) { onutGLAPI.onutGetProgramEnvParameterIivNV(target, index, params); }
ONUT_FORCE_INLINE void _onutGetProgramEnvParameterIuivNV(GLenum target, GLuint index, GLuint *params) { onutGLAPI.onutGetProgramEnvParameterIuivNV(target, index, params); }
ONUT_FORCE_INLINE void _onutGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble *params) { onutGLAPI.onutGetProgramEnvParameterdvARB(target, index, params); }
ONUT_FORCE_INLINE void _onutGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat *params) { onutGLAPI.onutGetProgramEnvParameterfvARB(target, index, params); }
ONUT_FORCE_INLINE void _onutGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog) { onutGLAPI.onutGetProgramInfoLog(program, bufSize, length, infoLog); }
ONUT_FORCE_INLINE void _onutGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint *params) { onutGLAPI.onutGetProgramInterfaceiv(program, programInterface, pname, params); }
ONUT_FORCE_INLINE void _onutGetProgramLocalParameterIivNV(GLenum target, GLuint index, GLint *params) { onutGLAPI.onutGetProgramLocalParameterIivNV(target, index, params); }
ONUT_FORCE_INLINE void _onutGetProgramLocalParameterIuivNV(GLenum target, GLuint index, GLuint *params) { onutGLAPI.onutGetProgramLocalParameterIuivNV(target, index, params); }
ONUT_FORCE_INLINE void _onutGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble *params) { onutGLAPI.onutGetProgramLocalParameterdvARB(target, index, params); }
ONUT_FORCE_INLINE void _onutGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat *params) { onutGLAPI.onutGetProgramLocalParameterfvARB(target, index, params); }
ONUT_FORCE_INLINE void _onutGetProgramNamedParameterdvNV(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params) { onutGLAPI.onutGetProgramNamedParameterdvNV(id, len, name, params); }
ONUT_FORCE_INLINE void _onutGetProgramNamedParameterfvNV(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params) { onutGLAPI.onutGetProgramNamedParameterfvNV(id, len, name, params); }
ONUT_FORCE_INLINE void _onutGetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble *params) { onutGLAPI.onutGetProgramParameterdvNV(target, index, pname, params); }
ONUT_FORCE_INLINE void _onutGetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat *params) { onutGLAPI.onutGetProgramParameterfvNV(target, index, pname, params); }
ONUT_FORCE_INLINE void _onutGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog) { onutGLAPI.onutGetProgramPipelineInfoLog(pipeline, bufSize, length, infoLog); }
ONUT_FORCE_INLINE void _onutGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog) { onutGLAPI.onutGetProgramPipelineInfoLogEXT(pipeline, bufSize, length, infoLog); }
ONUT_FORCE_INLINE void _onutGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint *params) { onutGLAPI.onutGetProgramPipelineiv(pipeline, pname, params); }
ONUT_FORCE_INLINE void _onutGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint *params) { if (onutGLSupport(GL_ES_VERSION_2_0) && (pname == GL_CURRENT_PROGRAM)) { pname = GL_ACTIVE_PROGRAM; } else if (onutGLSupport(GL_VERSION_1_0) && (pname == GL_ACTIVE_PROGRAM)) { pname = GL_CURRENT_PROGRAM; } onutGLAPI.onutGetProgramPipelineivEXT(pipeline, pname, params); }
ONUT_FORCE_INLINE GLuint _onutGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar *name) { return onutGLAPI.onutGetProgramResourceIndex(program, programInterface, name); }
ONUT_FORCE_INLINE GLint _onutGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar *name) { return onutGLAPI.onutGetProgramResourceLocation(program, programInterface, name); }
ONUT_FORCE_INLINE GLint _onutGetProgramResourceLocationIndex(GLuint program, GLenum programInterface, const GLchar *name) { return onutGLAPI.onutGetProgramResourceLocationIndex(program, programInterface, name); }
ONUT_FORCE_INLINE GLint _onutGetProgramResourceLocationIndexEXT(GLuint program, GLenum programInterface, const GLchar *name) { return onutGLAPI.onutGetProgramResourceLocationIndexEXT(program, programInterface, name); }
ONUT_FORCE_INLINE void _onutGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name) { onutGLAPI.onutGetProgramResourceName(program, programInterface, index, bufSize, length, name); }
ONUT_FORCE_INLINE void _onutGetProgramResourcefvNV(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params) { onutGLAPI.onutGetProgramResourcefvNV(program, programInterface, index, propCount, props, bufSize, length, params); }
ONUT_FORCE_INLINE void _onutGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params) { onutGLAPI.onutGetProgramResourceiv(program, programInterface, index, propCount, props, bufSize, length, params); }
ONUT_FORCE_INLINE void _onutGetProgramStageiv(GLuint program, GLenum shadertype, GLenum pname, GLint *values) { onutGLAPI.onutGetProgramStageiv(program, shadertype, pname, values); }
ONUT_FORCE_INLINE void _onutGetProgramStringARB(GLenum target, GLenum pname, void *string) { onutGLAPI.onutGetProgramStringARB(target, pname, string); }
ONUT_FORCE_INLINE void _onutGetProgramStringNV(GLuint id, GLenum pname, GLubyte *program) { onutGLAPI.onutGetProgramStringNV(id, pname, program); }
ONUT_FORCE_INLINE void _onutGetProgramSubroutineParameteruivNV(GLenum target, GLuint index, GLuint *param) { onutGLAPI.onutGetProgramSubroutineParameteruivNV(target, index, param); }
ONUT_FORCE_INLINE void _onutGetProgramiv(GLuint program, GLenum pname, GLint *params) { onutGLAPI.onutGetProgramiv(program, pname, params); }
ONUT_FORCE_INLINE void _onutGetProgramivARB(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetProgramivARB(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetProgramivNV(GLuint id, GLenum pname, GLint *params) { onutGLAPI.onutGetProgramivNV(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryBufferObjecti64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset) { onutGLAPI.onutGetQueryBufferObjecti64v(id, buffer, pname, offset); }
ONUT_FORCE_INLINE void _onutGetQueryBufferObjectiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset) { onutGLAPI.onutGetQueryBufferObjectiv(id, buffer, pname, offset); }
ONUT_FORCE_INLINE void _onutGetQueryBufferObjectui64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset) { onutGLAPI.onutGetQueryBufferObjectui64v(id, buffer, pname, offset); }
ONUT_FORCE_INLINE void _onutGetQueryBufferObjectuiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset) { onutGLAPI.onutGetQueryBufferObjectuiv(id, buffer, pname, offset); }
ONUT_FORCE_INLINE void _onutGetQueryIndexediv(GLenum target, GLuint index, GLenum pname, GLint *params) { onutGLAPI.onutGetQueryIndexediv(target, index, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryObjecti64v(GLuint id, GLenum pname, GLint64 *params) { onutGLAPI.onutGetQueryObjecti64v(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 *params) { onutGLAPI.onutGetQueryObjecti64vEXT(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryObjectiv(GLuint id, GLenum pname, GLint *params) { onutGLAPI.onutGetQueryObjectiv(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryObjectivARB(GLuint id, GLenum pname, GLint *params) { onutGLAPI.onutGetQueryObjectivARB(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryObjectivEXT(GLuint id, GLenum pname, GLint *params) { onutGLAPI.onutGetQueryObjectivEXT(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryObjectui64v(GLuint id, GLenum pname, GLuint64 *params) { onutGLAPI.onutGetQueryObjectui64v(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 *params) { onutGLAPI.onutGetQueryObjectui64vEXT(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryObjectuiv(GLuint id, GLenum pname, GLuint *params) { onutGLAPI.onutGetQueryObjectuiv(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint *params) { onutGLAPI.onutGetQueryObjectuivARB(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint *params) { onutGLAPI.onutGetQueryObjectuivEXT(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryiv(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetQueryiv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryivARB(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetQueryivARB(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetQueryivEXT(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetQueryivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetRenderbufferParameteriv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetRenderbufferParameterivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint *params) { onutGLAPI.onutGetSamplerParameterIiv(sampler, pname, params); }
ONUT_FORCE_INLINE void _onutGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint *params) { onutGLAPI.onutGetSamplerParameterIivEXT(sampler, pname, params); }
ONUT_FORCE_INLINE void _onutGetSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint *params) { onutGLAPI.onutGetSamplerParameterIivOES(sampler, pname, params); }
ONUT_FORCE_INLINE void _onutGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint *params) { onutGLAPI.onutGetSamplerParameterIuiv(sampler, pname, params); }
ONUT_FORCE_INLINE void _onutGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint *params) { onutGLAPI.onutGetSamplerParameterIuivEXT(sampler, pname, params); }
ONUT_FORCE_INLINE void _onutGetSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint *params) { onutGLAPI.onutGetSamplerParameterIuivOES(sampler, pname, params); }
ONUT_FORCE_INLINE void _onutGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat *params) { onutGLAPI.onutGetSamplerParameterfv(sampler, pname, params); }
ONUT_FORCE_INLINE void _onutGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint *params) { onutGLAPI.onutGetSamplerParameteriv(sampler, pname, params); }
ONUT_FORCE_INLINE void _onutGetSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, GLuint64 *params) { onutGLAPI.onutGetSemaphoreParameterui64vEXT(semaphore, pname, params); }
ONUT_FORCE_INLINE void _onutGetSeparableFilter(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span) { onutGLAPI.onutGetSeparableFilter(target, format, type, row, column, span); }
ONUT_FORCE_INLINE void _onutGetSeparableFilterEXT(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span) { onutGLAPI.onutGetSeparableFilterEXT(target, format, type, row, column, span); }
ONUT_FORCE_INLINE void _onutGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog) { onutGLAPI.onutGetShaderInfoLog(shader, bufSize, length, infoLog); }
ONUT_FORCE_INLINE void _onutGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision) { onutGLAPI.onutGetShaderPrecisionFormat(shadertype, precisiontype, range, precision); }
ONUT_FORCE_INLINE void _onutGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source) { onutGLAPI.onutGetShaderSource(shader, bufSize, length, source); }
ONUT_FORCE_INLINE void _onutGetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source) { onutGLAPI.onutGetShaderSourceARB(obj, maxLength, length, source); }
ONUT_FORCE_INLINE void _onutGetShaderiv(GLuint shader, GLenum pname, GLint *params) { onutGLAPI.onutGetShaderiv(shader, pname, params); }
ONUT_FORCE_INLINE void _onutGetSharpenTexFuncSGIS(GLenum target, GLfloat *points) { onutGLAPI.onutGetSharpenTexFuncSGIS(target, points); }
ONUT_FORCE_INLINE GLushort _onutGetStageIndexNV(GLenum shadertype) { return onutGLAPI.onutGetStageIndexNV(shadertype); }
ONUT_FORCE_INLINE const GLubyte *_onutGetString(GLenum name) { return onutGLAPI.onutGetString(name); }
ONUT_FORCE_INLINE const GLubyte *_onutGetStringi(GLenum name, GLuint index) { return onutGLAPI.onutGetStringi(name, index); }
ONUT_FORCE_INLINE GLuint _onutGetSubroutineIndex(GLuint program, GLenum shadertype, const GLchar *name) { return onutGLAPI.onutGetSubroutineIndex(program, shadertype, name); }
ONUT_FORCE_INLINE GLint _onutGetSubroutineUniformLocation(GLuint program, GLenum shadertype, const GLchar *name) { return onutGLAPI.onutGetSubroutineUniformLocation(program, shadertype, name); }
ONUT_FORCE_INLINE void _onutGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values) { onutGLAPI.onutGetSynciv(sync, pname, bufSize, length, values); }
ONUT_FORCE_INLINE void _onutGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values) { onutGLAPI.onutGetSyncivAPPLE(sync, pname, bufSize, length, values); }
ONUT_FORCE_INLINE void _onutGetTexBumpParameterfvATI(GLenum pname, GLfloat *param) { onutGLAPI.onutGetTexBumpParameterfvATI(pname, param); }
ONUT_FORCE_INLINE void _onutGetTexBumpParameterivATI(GLenum pname, GLint *param) { onutGLAPI.onutGetTexBumpParameterivATI(pname, param); }
ONUT_FORCE_INLINE void _onutGetTexEnvxvOES(GLenum target, GLenum pname, GLfixed *params) { onutGLAPI.onutGetTexEnvxvOES(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexFilterFuncSGIS(GLenum target, GLenum filter, GLfloat *weights) { onutGLAPI.onutGetTexFilterFuncSGIS(target, filter, weights); }
ONUT_FORCE_INLINE void _onutGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed *params) { onutGLAPI.onutGetTexGenxvOES(coord, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, void *pixels) { onutGLAPI.onutGetTexImage(target, level, format, type, pixels); }
ONUT_FORCE_INLINE void _onutGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat *params) { onutGLAPI.onutGetTexLevelParameterfv(target, level, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint *params) { onutGLAPI.onutGetTexLevelParameteriv(target, level, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexLevelParameterxvOES(GLenum target, GLint level, GLenum pname, GLfixed *params) { onutGLAPI.onutGetTexLevelParameterxvOES(target, level, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexParameterIiv(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetTexParameterIiv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexParameterIivEXT(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetTexParameterIivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexParameterIivOES(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetTexParameterIivOES(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexParameterIuiv(GLenum target, GLenum pname, GLuint *params) { onutGLAPI.onutGetTexParameterIuiv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint *params) { onutGLAPI.onutGetTexParameterIuivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexParameterIuivOES(GLenum target, GLenum pname, GLuint *params) { onutGLAPI.onutGetTexParameterIuivOES(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexParameterPointervAPPLE(GLenum target, GLenum pname, void **params) { onutGLAPI.onutGetTexParameterPointervAPPLE(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetTexParameterfv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexParameteriv(GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetTexParameteriv(target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTexParameterxvOES(GLenum target, GLenum pname, GLfixed *params) { onutGLAPI.onutGetTexParameterxvOES(target, pname, params); }
ONUT_FORCE_INLINE GLuint64 _onutGetTextureHandleARB(GLuint texture) { return onutGLAPI.onutGetTextureHandleARB(texture); }
ONUT_FORCE_INLINE GLuint64 _onutGetTextureHandleIMG(GLuint texture) { return onutGLAPI.onutGetTextureHandleIMG(texture); }
ONUT_FORCE_INLINE GLuint64 _onutGetTextureHandleNV(GLuint texture) { return onutGLAPI.onutGetTextureHandleNV(texture); }
ONUT_FORCE_INLINE void _onutGetTextureImage(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels) { onutGLAPI.onutGetTextureImage(texture, level, format, type, bufSize, pixels); }
ONUT_FORCE_INLINE void _onutGetTextureImageEXT(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels) { onutGLAPI.onutGetTextureImageEXT(texture, target, level, format, type, pixels); }
ONUT_FORCE_INLINE void _onutGetTextureLevelParameterfv(GLuint texture, GLint level, GLenum pname, GLfloat *params) { onutGLAPI.onutGetTextureLevelParameterfv(texture, level, pname, params); }
ONUT_FORCE_INLINE void _onutGetTextureLevelParameterfvEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params) { onutGLAPI.onutGetTextureLevelParameterfvEXT(texture, target, level, pname, params); }
ONUT_FORCE_INLINE void _onutGetTextureLevelParameteriv(GLuint texture, GLint level, GLenum pname, GLint *params) { onutGLAPI.onutGetTextureLevelParameteriv(texture, level, pname, params); }
ONUT_FORCE_INLINE void _onutGetTextureLevelParameterivEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params) { onutGLAPI.onutGetTextureLevelParameterivEXT(texture, target, level, pname, params); }
ONUT_FORCE_INLINE void _onutGetTextureParameterIiv(GLuint texture, GLenum pname, GLint *params) { onutGLAPI.onutGetTextureParameterIiv(texture, pname, params); }
ONUT_FORCE_INLINE void _onutGetTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetTextureParameterIivEXT(texture, target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTextureParameterIuiv(GLuint texture, GLenum pname, GLuint *params) { onutGLAPI.onutGetTextureParameterIuiv(texture, pname, params); }
ONUT_FORCE_INLINE void _onutGetTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, GLuint *params) { onutGLAPI.onutGetTextureParameterIuivEXT(texture, target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTextureParameterfv(GLuint texture, GLenum pname, GLfloat *params) { onutGLAPI.onutGetTextureParameterfv(texture, pname, params); }
ONUT_FORCE_INLINE void _onutGetTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, GLfloat *params) { onutGLAPI.onutGetTextureParameterfvEXT(texture, target, pname, params); }
ONUT_FORCE_INLINE void _onutGetTextureParameteriv(GLuint texture, GLenum pname, GLint *params) { onutGLAPI.onutGetTextureParameteriv(texture, pname, params); }
ONUT_FORCE_INLINE void _onutGetTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, GLint *params) { onutGLAPI.onutGetTextureParameterivEXT(texture, target, pname, params); }
ONUT_FORCE_INLINE GLuint64 _onutGetTextureSamplerHandleARB(GLuint texture, GLuint sampler) { return onutGLAPI.onutGetTextureSamplerHandleARB(texture, sampler); }
ONUT_FORCE_INLINE GLuint64 _onutGetTextureSamplerHandleIMG(GLuint texture, GLuint sampler) { return onutGLAPI.onutGetTextureSamplerHandleIMG(texture, sampler); }
ONUT_FORCE_INLINE GLuint64 _onutGetTextureSamplerHandleNV(GLuint texture, GLuint sampler) { return onutGLAPI.onutGetTextureSamplerHandleNV(texture, sampler); }
ONUT_FORCE_INLINE void _onutGetTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels) { onutGLAPI.onutGetTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels); }
ONUT_FORCE_INLINE void _onutGetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint *params) { onutGLAPI.onutGetTrackMatrixivNV(target, address, pname, params); }
ONUT_FORCE_INLINE void _onutGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name) { onutGLAPI.onutGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name); }
ONUT_FORCE_INLINE void _onutGetTransformFeedbackVaryingEXT(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name) { onutGLAPI.onutGetTransformFeedbackVaryingEXT(program, index, bufSize, length, size, type, name); }
ONUT_FORCE_INLINE void _onutGetTransformFeedbackVaryingNV(GLuint program, GLuint index, GLint *location) { onutGLAPI.onutGetTransformFeedbackVaryingNV(program, index, location); }
ONUT_FORCE_INLINE void _onutGetTransformFeedbacki64_v(GLuint xfb, GLenum pname, GLuint index, GLint64 *param) { onutGLAPI.onutGetTransformFeedbacki64_v(xfb, pname, index, param); }
ONUT_FORCE_INLINE void _onutGetTransformFeedbacki_v(GLuint xfb, GLenum pname, GLuint index, GLint *param) { onutGLAPI.onutGetTransformFeedbacki_v(xfb, pname, index, param); }
ONUT_FORCE_INLINE void _onutGetTransformFeedbackiv(GLuint xfb, GLenum pname, GLint *param) { onutGLAPI.onutGetTransformFeedbackiv(xfb, pname, param); }
ONUT_FORCE_INLINE void _onutGetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source) { onutGLAPI.onutGetTranslatedShaderSourceANGLE(shader, bufsize, length, source); }
ONUT_FORCE_INLINE GLuint _onutGetUniformBlockIndex(GLuint program, const GLchar *uniformBlockName) { return onutGLAPI.onutGetUniformBlockIndex(program, uniformBlockName); }
ONUT_FORCE_INLINE GLint _onutGetUniformBufferSizeEXT(GLuint program, GLint location) { return onutGLAPI.onutGetUniformBufferSizeEXT(program, location); }
ONUT_FORCE_INLINE void _onutGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const *uniformNames, GLuint *uniformIndices) { onutGLAPI.onutGetUniformIndices(program, uniformCount, uniformNames, uniformIndices); }
ONUT_FORCE_INLINE GLint _onutGetUniformLocation(GLuint program, const GLchar *name) { return onutGLAPI.onutGetUniformLocation(program, name); }
ONUT_FORCE_INLINE GLint _onutGetUniformLocationARB(GLhandleARB programObj, const GLcharARB *name) { return onutGLAPI.onutGetUniformLocationARB(programObj, name); }
ONUT_FORCE_INLINE GLintptr _onutGetUniformOffsetEXT(GLuint program, GLint location) { return onutGLAPI.onutGetUniformOffsetEXT(program, location); }
ONUT_FORCE_INLINE void _onutGetUniformSubroutineuiv(GLenum shadertype, GLint location, GLuint *params) { onutGLAPI.onutGetUniformSubroutineuiv(shadertype, location, params); }
ONUT_FORCE_INLINE void _onutGetUniformdv(GLuint program, GLint location, GLdouble *params) { onutGLAPI.onutGetUniformdv(program, location, params); }
ONUT_FORCE_INLINE void _onutGetUniformfv(GLuint program, GLint location, GLfloat *params) { onutGLAPI.onutGetUniformfv(program, location, params); }
ONUT_FORCE_INLINE void _onutGetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat *params) { onutGLAPI.onutGetUniformfvARB(programObj, location, params); }
ONUT_FORCE_INLINE void _onutGetUniformi64vARB(GLuint program, GLint location, GLint64 *params) { onutGLAPI.onutGetUniformi64vARB(program, location, params); }
ONUT_FORCE_INLINE void _onutGetUniformi64vNV(GLuint program, GLint location, GLint64EXT *params) { onutGLAPI.onutGetUniformi64vNV(program, location, params); }
ONUT_FORCE_INLINE void _onutGetUniformiv(GLuint program, GLint location, GLint *params) { onutGLAPI.onutGetUniformiv(program, location, params); }
ONUT_FORCE_INLINE void _onutGetUniformivARB(GLhandleARB programObj, GLint location, GLint *params) { onutGLAPI.onutGetUniformivARB(programObj, location, params); }
ONUT_FORCE_INLINE void _onutGetUniformui64vARB(GLuint program, GLint location, GLuint64 *params) { onutGLAPI.onutGetUniformui64vARB(program, location, params); }
ONUT_FORCE_INLINE void _onutGetUniformui64vNV(GLuint program, GLint location, GLuint64EXT *params) { onutGLAPI.onutGetUniformui64vNV(program, location, params); }
ONUT_FORCE_INLINE void _onutGetUniformuiv(GLuint program, GLint location, GLuint *params) { onutGLAPI.onutGetUniformuiv(program, location, params); }
ONUT_FORCE_INLINE void _onutGetUniformuivEXT(GLuint program, GLint location, GLuint *params) { onutGLAPI.onutGetUniformuivEXT(program, location, params); }
ONUT_FORCE_INLINE void _onutGetUnsignedBytei_vEXT(GLenum target, GLuint index, GLubyte *data) { onutGLAPI.onutGetUnsignedBytei_vEXT(target, index, data); }
ONUT_FORCE_INLINE void _onutGetUnsignedBytevEXT(GLenum pname, GLubyte *data) { onutGLAPI.onutGetUnsignedBytevEXT(pname, data); }
ONUT_FORCE_INLINE void _onutGetVariantArrayObjectfvATI(GLuint id, GLenum pname, GLfloat *params) { onutGLAPI.onutGetVariantArrayObjectfvATI(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetVariantArrayObjectivATI(GLuint id, GLenum pname, GLint *params) { onutGLAPI.onutGetVariantArrayObjectivATI(id, pname, params); }
ONUT_FORCE_INLINE void _onutGetVariantBooleanvEXT(GLuint id, GLenum value, GLboolean *data) { onutGLAPI.onutGetVariantBooleanvEXT(id, value, data); }
ONUT_FORCE_INLINE void _onutGetVariantFloatvEXT(GLuint id, GLenum value, GLfloat *data) { onutGLAPI.onutGetVariantFloatvEXT(id, value, data); }
ONUT_FORCE_INLINE void _onutGetVariantIntegervEXT(GLuint id, GLenum value, GLint *data) { onutGLAPI.onutGetVariantIntegervEXT(id, value, data); }
ONUT_FORCE_INLINE void _onutGetVariantPointervEXT(GLuint id, GLenum value, void **data) { onutGLAPI.onutGetVariantPointervEXT(id, value, data); }
ONUT_FORCE_INLINE GLint _onutGetVaryingLocationNV(GLuint program, const GLchar *name) { return onutGLAPI.onutGetVaryingLocationNV(program, name); }
ONUT_FORCE_INLINE void _onutGetVertexArrayIndexed64iv(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param) { onutGLAPI.onutGetVertexArrayIndexed64iv(vaobj, index, pname, param); }
ONUT_FORCE_INLINE void _onutGetVertexArrayIndexediv(GLuint vaobj, GLuint index, GLenum pname, GLint *param) { onutGLAPI.onutGetVertexArrayIndexediv(vaobj, index, pname, param); }
ONUT_FORCE_INLINE void _onutGetVertexArrayIntegeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, GLint *param) { onutGLAPI.onutGetVertexArrayIntegeri_vEXT(vaobj, index, pname, param); }
ONUT_FORCE_INLINE void _onutGetVertexArrayIntegervEXT(GLuint vaobj, GLenum pname, GLint *param) { onutGLAPI.onutGetVertexArrayIntegervEXT(vaobj, pname, param); }
ONUT_FORCE_INLINE void _onutGetVertexArrayPointeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, void **param) { onutGLAPI.onutGetVertexArrayPointeri_vEXT(vaobj, index, pname, param); }
ONUT_FORCE_INLINE void _onutGetVertexArrayPointervEXT(GLuint vaobj, GLenum pname, void **param) { onutGLAPI.onutGetVertexArrayPointervEXT(vaobj, pname, param); }
ONUT_FORCE_INLINE void _onutGetVertexArrayiv(GLuint vaobj, GLenum pname, GLint *param) { onutGLAPI.onutGetVertexArrayiv(vaobj, pname, param); }
ONUT_FORCE_INLINE void _onutGetVertexAttribArrayObjectfvATI(GLuint index, GLenum pname, GLfloat *params) { onutGLAPI.onutGetVertexAttribArrayObjectfvATI(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribArrayObjectivATI(GLuint index, GLenum pname, GLint *params) { onutGLAPI.onutGetVertexAttribArrayObjectivATI(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribIiv(GLuint index, GLenum pname, GLint *params) { onutGLAPI.onutGetVertexAttribIiv(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint *params) { onutGLAPI.onutGetVertexAttribIivEXT(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint *params) { onutGLAPI.onutGetVertexAttribIuiv(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint *params) { onutGLAPI.onutGetVertexAttribIuivEXT(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribLdv(GLuint index, GLenum pname, GLdouble *params) { onutGLAPI.onutGetVertexAttribLdv(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribLdvEXT(GLuint index, GLenum pname, GLdouble *params) { onutGLAPI.onutGetVertexAttribLdvEXT(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribLi64vNV(GLuint index, GLenum pname, GLint64EXT *params) { onutGLAPI.onutGetVertexAttribLi64vNV(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribLui64vARB(GLuint index, GLenum pname, GLuint64EXT *params) { onutGLAPI.onutGetVertexAttribLui64vARB(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribLui64vNV(GLuint index, GLenum pname, GLuint64EXT *params) { onutGLAPI.onutGetVertexAttribLui64vNV(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribPointerv(GLuint index, GLenum pname, void **pointer) { onutGLAPI.onutGetVertexAttribPointerv(index, pname, pointer); }
ONUT_FORCE_INLINE void _onutGetVertexAttribPointervARB(GLuint index, GLenum pname, void **pointer) { onutGLAPI.onutGetVertexAttribPointervARB(index, pname, pointer); }
ONUT_FORCE_INLINE void _onutGetVertexAttribPointervNV(GLuint index, GLenum pname, void **pointer) { onutGLAPI.onutGetVertexAttribPointervNV(index, pname, pointer); }
ONUT_FORCE_INLINE void _onutGetVertexAttribdv(GLuint index, GLenum pname, GLdouble *params) { onutGLAPI.onutGetVertexAttribdv(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble *params) { onutGLAPI.onutGetVertexAttribdvARB(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble *params) { onutGLAPI.onutGetVertexAttribdvNV(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribfv(GLuint index, GLenum pname, GLfloat *params) { onutGLAPI.onutGetVertexAttribfv(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat *params) { onutGLAPI.onutGetVertexAttribfvARB(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat *params) { onutGLAPI.onutGetVertexAttribfvNV(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribiv(GLuint index, GLenum pname, GLint *params) { onutGLAPI.onutGetVertexAttribiv(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribivARB(GLuint index, GLenum pname, GLint *params) { onutGLAPI.onutGetVertexAttribivARB(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVertexAttribivNV(GLuint index, GLenum pname, GLint *params) { onutGLAPI.onutGetVertexAttribivNV(index, pname, params); }
ONUT_FORCE_INLINE void _onutGetVideoCaptureStreamdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params) { onutGLAPI.onutGetVideoCaptureStreamdvNV(video_capture_slot, stream, pname, params); }
ONUT_FORCE_INLINE void _onutGetVideoCaptureStreamfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params) { onutGLAPI.onutGetVideoCaptureStreamfvNV(video_capture_slot, stream, pname, params); }
ONUT_FORCE_INLINE void _onutGetVideoCaptureStreamivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params) { onutGLAPI.onutGetVideoCaptureStreamivNV(video_capture_slot, stream, pname, params); }
ONUT_FORCE_INLINE void _onutGetVideoCaptureivNV(GLuint video_capture_slot, GLenum pname, GLint *params) { onutGLAPI.onutGetVideoCaptureivNV(video_capture_slot, pname, params); }
ONUT_FORCE_INLINE void _onutGetVideoi64vNV(GLuint video_slot, GLenum pname, GLint64EXT *params) { onutGLAPI.onutGetVideoi64vNV(video_slot, pname, params); }
ONUT_FORCE_INLINE void _onutGetVideoivNV(GLuint video_slot, GLenum pname, GLint *params) { onutGLAPI.onutGetVideoivNV(video_slot, pname, params); }
ONUT_FORCE_INLINE void _onutGetVideoui64vNV(GLuint video_slot, GLenum pname, GLuint64EXT *params) { onutGLAPI.onutGetVideoui64vNV(video_slot, pname, params); }
ONUT_FORCE_INLINE void _onutGetVideouivNV(GLuint video_slot, GLenum pname, GLuint *params) { onutGLAPI.onutGetVideouivNV(video_slot, pname, params); }
ONUT_FORCE_INLINE GLVULKANPROCNV _onutGetVkProcAddrNV(const GLchar *name) { return onutGLAPI.onutGetVkProcAddrNV(name); }
ONUT_FORCE_INLINE void _onutGetnColorTable(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table) { onutGLAPI.onutGetnColorTable(target, format, type, bufSize, table); }
ONUT_FORCE_INLINE void _onutGetnColorTableARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table) { onutGLAPI.onutGetnColorTableARB(target, format, type, bufSize, table); }
ONUT_FORCE_INLINE void _onutGetnCompressedTexImage(GLenum target, GLint lod, GLsizei bufSize, void *pixels) { onutGLAPI.onutGetnCompressedTexImage(target, lod, bufSize, pixels); }
ONUT_FORCE_INLINE void _onutGetnCompressedTexImageARB(GLenum target, GLint lod, GLsizei bufSize, void *img) { onutGLAPI.onutGetnCompressedTexImageARB(target, lod, bufSize, img); }
ONUT_FORCE_INLINE void _onutGetnConvolutionFilter(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image) { onutGLAPI.onutGetnConvolutionFilter(target, format, type, bufSize, image); }
ONUT_FORCE_INLINE void _onutGetnConvolutionFilterARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image) { onutGLAPI.onutGetnConvolutionFilterARB(target, format, type, bufSize, image); }
ONUT_FORCE_INLINE void _onutGetnHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values) { onutGLAPI.onutGetnHistogram(target, reset, format, type, bufSize, values); }
ONUT_FORCE_INLINE void _onutGetnHistogramARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values) { onutGLAPI.onutGetnHistogramARB(target, reset, format, type, bufSize, values); }
ONUT_FORCE_INLINE void _onutGetnMapdv(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v) { onutGLAPI.onutGetnMapdv(target, query, bufSize, v); }
ONUT_FORCE_INLINE void _onutGetnMapdvARB(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v) { onutGLAPI.onutGetnMapdvARB(target, query, bufSize, v); }
ONUT_FORCE_INLINE void _onutGetnMapfv(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v) { onutGLAPI.onutGetnMapfv(target, query, bufSize, v); }
ONUT_FORCE_INLINE void _onutGetnMapfvARB(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v) { onutGLAPI.onutGetnMapfvARB(target, query, bufSize, v); }
ONUT_FORCE_INLINE void _onutGetnMapiv(GLenum target, GLenum query, GLsizei bufSize, GLint *v) { onutGLAPI.onutGetnMapiv(target, query, bufSize, v); }
ONUT_FORCE_INLINE void _onutGetnMapivARB(GLenum target, GLenum query, GLsizei bufSize, GLint *v) { onutGLAPI.onutGetnMapivARB(target, query, bufSize, v); }
ONUT_FORCE_INLINE void _onutGetnMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values) { onutGLAPI.onutGetnMinmax(target, reset, format, type, bufSize, values); }
ONUT_FORCE_INLINE void _onutGetnMinmaxARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values) { onutGLAPI.onutGetnMinmaxARB(target, reset, format, type, bufSize, values); }
ONUT_FORCE_INLINE void _onutGetnPixelMapfv(GLenum map, GLsizei bufSize, GLfloat *values) { onutGLAPI.onutGetnPixelMapfv(map, bufSize, values); }
ONUT_FORCE_INLINE void _onutGetnPixelMapfvARB(GLenum map, GLsizei bufSize, GLfloat *values) { onutGLAPI.onutGetnPixelMapfvARB(map, bufSize, values); }
ONUT_FORCE_INLINE void _onutGetnPixelMapuiv(GLenum map, GLsizei bufSize, GLuint *values) { onutGLAPI.onutGetnPixelMapuiv(map, bufSize, values); }
ONUT_FORCE_INLINE void _onutGetnPixelMapuivARB(GLenum map, GLsizei bufSize, GLuint *values) { onutGLAPI.onutGetnPixelMapuivARB(map, bufSize, values); }
ONUT_FORCE_INLINE void _onutGetnPixelMapusv(GLenum map, GLsizei bufSize, GLushort *values) { onutGLAPI.onutGetnPixelMapusv(map, bufSize, values); }
ONUT_FORCE_INLINE void _onutGetnPixelMapusvARB(GLenum map, GLsizei bufSize, GLushort *values) { onutGLAPI.onutGetnPixelMapusvARB(map, bufSize, values); }
ONUT_FORCE_INLINE void _onutGetnPolygonStipple(GLsizei bufSize, GLubyte *pattern) { onutGLAPI.onutGetnPolygonStipple(bufSize, pattern); }
ONUT_FORCE_INLINE void _onutGetnPolygonStippleARB(GLsizei bufSize, GLubyte *pattern) { onutGLAPI.onutGetnPolygonStippleARB(bufSize, pattern); }
ONUT_FORCE_INLINE void _onutGetnSeparableFilter(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span) { onutGLAPI.onutGetnSeparableFilter(target, format, type, rowBufSize, row, columnBufSize, column, span); }
ONUT_FORCE_INLINE void _onutGetnSeparableFilterARB(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span) { onutGLAPI.onutGetnSeparableFilterARB(target, format, type, rowBufSize, row, columnBufSize, column, span); }
ONUT_FORCE_INLINE void _onutGetnTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels) { onutGLAPI.onutGetnTexImage(target, level, format, type, bufSize, pixels); }
ONUT_FORCE_INLINE void _onutGetnTexImageARB(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img) { onutGLAPI.onutGetnTexImageARB(target, level, format, type, bufSize, img); }
ONUT_FORCE_INLINE void _onutGetnUniformdv(GLuint program, GLint location, GLsizei bufSize, GLdouble *params) { onutGLAPI.onutGetnUniformdv(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformdvARB(GLuint program, GLint location, GLsizei bufSize, GLdouble *params) { onutGLAPI.onutGetnUniformdvARB(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat *params) { onutGLAPI.onutGetnUniformfv(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformfvARB(GLuint program, GLint location, GLsizei bufSize, GLfloat *params) { onutGLAPI.onutGetnUniformfvARB(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat *params) { onutGLAPI.onutGetnUniformfvEXT(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat *params) { onutGLAPI.onutGetnUniformfvKHR(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformi64vARB(GLuint program, GLint location, GLsizei bufSize, GLint64 *params) { onutGLAPI.onutGetnUniformi64vARB(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint *params) { onutGLAPI.onutGetnUniformiv(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformivARB(GLuint program, GLint location, GLsizei bufSize, GLint *params) { onutGLAPI.onutGetnUniformivARB(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint *params) { onutGLAPI.onutGetnUniformivEXT(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint *params) { onutGLAPI.onutGetnUniformivKHR(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformui64vARB(GLuint program, GLint location, GLsizei bufSize, GLuint64 *params) { onutGLAPI.onutGetnUniformui64vARB(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint *params) { onutGLAPI.onutGetnUniformuiv(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformuivARB(GLuint program, GLint location, GLsizei bufSize, GLuint *params) { onutGLAPI.onutGetnUniformuivARB(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint *params) { onutGLAPI.onutGetnUniformuivKHR(program, location, bufSize, params); }
ONUT_FORCE_INLINE void _onutGlobalAlphaFactorbSUN(GLbyte factor) { onutGLAPI.onutGlobalAlphaFactorbSUN(factor); }
ONUT_FORCE_INLINE void _onutGlobalAlphaFactordSUN(GLdouble factor) { onutGLAPI.onutGlobalAlphaFactordSUN(factor); }
ONUT_FORCE_INLINE void _onutGlobalAlphaFactorfSUN(GLfloat factor) { onutGLAPI.onutGlobalAlphaFactorfSUN(factor); }
ONUT_FORCE_INLINE void _onutGlobalAlphaFactoriSUN(GLint factor) { onutGLAPI.onutGlobalAlphaFactoriSUN(factor); }
ONUT_FORCE_INLINE void _onutGlobalAlphaFactorsSUN(GLshort factor) { onutGLAPI.onutGlobalAlphaFactorsSUN(factor); }
ONUT_FORCE_INLINE void _onutGlobalAlphaFactorubSUN(GLubyte factor) { onutGLAPI.onutGlobalAlphaFactorubSUN(factor); }
ONUT_FORCE_INLINE void _onutGlobalAlphaFactoruiSUN(GLuint factor) { onutGLAPI.onutGlobalAlphaFactoruiSUN(factor); }
ONUT_FORCE_INLINE void _onutGlobalAlphaFactorusSUN(GLushort factor) { onutGLAPI.onutGlobalAlphaFactorusSUN(factor); }
ONUT_FORCE_INLINE void _onutHint(GLenum target, GLenum mode) { onutGLAPI.onutHint(target, mode); }
ONUT_FORCE_INLINE void _onutHintPGI(GLenum target, GLint mode) { onutGLAPI.onutHintPGI(target, mode); }
ONUT_FORCE_INLINE void _onutHistogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink) { onutGLAPI.onutHistogram(target, width, internalformat, sink); }
ONUT_FORCE_INLINE void _onutHistogramEXT(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink) { onutGLAPI.onutHistogramEXT(target, width, internalformat, sink); }
ONUT_FORCE_INLINE void _onutIglooInterfaceSGIX(GLenum pname, const void *params) { onutGLAPI.onutIglooInterfaceSGIX(pname, params); }
ONUT_FORCE_INLINE void _onutImageTransformParameterfHP(GLenum target, GLenum pname, GLfloat param) { onutGLAPI.onutImageTransformParameterfHP(target, pname, param); }
ONUT_FORCE_INLINE void _onutImageTransformParameterfvHP(GLenum target, GLenum pname, const GLfloat *params) { onutGLAPI.onutImageTransformParameterfvHP(target, pname, params); }
ONUT_FORCE_INLINE void _onutImageTransformParameteriHP(GLenum target, GLenum pname, GLint param) { onutGLAPI.onutImageTransformParameteriHP(target, pname, param); }
ONUT_FORCE_INLINE void _onutImageTransformParameterivHP(GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutImageTransformParameterivHP(target, pname, params); }
ONUT_FORCE_INLINE void _onutImportMemoryFdEXT(GLuint memory, GLuint64 size, GLenum handleType, GLint fd) { onutGLAPI.onutImportMemoryFdEXT(memory, size, handleType, fd); }
ONUT_FORCE_INLINE void _onutImportMemoryWin32HandleEXT(GLuint memory, GLuint64 size, GLenum handleType, void *handle) { onutGLAPI.onutImportMemoryWin32HandleEXT(memory, size, handleType, handle); }
ONUT_FORCE_INLINE void _onutImportMemoryWin32NameEXT(GLuint memory, GLuint64 size, GLenum handleType, const void *name) { onutGLAPI.onutImportMemoryWin32NameEXT(memory, size, handleType, name); }
ONUT_FORCE_INLINE void _onutImportSemaphoreFdEXT(GLuint semaphore, GLenum handleType, GLint fd) { onutGLAPI.onutImportSemaphoreFdEXT(semaphore, handleType, fd); }
ONUT_FORCE_INLINE void _onutImportSemaphoreWin32HandleEXT(GLuint semaphore, GLenum handleType, void *handle) { onutGLAPI.onutImportSemaphoreWin32HandleEXT(semaphore, handleType, handle); }
ONUT_FORCE_INLINE void _onutImportSemaphoreWin32NameEXT(GLuint semaphore, GLenum handleType, const void *name) { onutGLAPI.onutImportSemaphoreWin32NameEXT(semaphore, handleType, name); }
ONUT_FORCE_INLINE GLsync _onutImportSyncEXT(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags) { return onutGLAPI.onutImportSyncEXT(external_sync_type, external_sync, flags); }
ONUT_FORCE_INLINE void _onutIndexFormatNV(GLenum type, GLsizei stride) { onutGLAPI.onutIndexFormatNV(type, stride); }
ONUT_FORCE_INLINE void _onutIndexFuncEXT(GLenum func, GLclampf ref) { onutGLAPI.onutIndexFuncEXT(func, ref); }
ONUT_FORCE_INLINE void _onutIndexMaterialEXT(GLenum face, GLenum mode) { onutGLAPI.onutIndexMaterialEXT(face, mode); }
ONUT_FORCE_INLINE void _onutIndexPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void *pointer) { onutGLAPI.onutIndexPointerEXT(type, stride, count, pointer); }
ONUT_FORCE_INLINE void _onutIndexPointerListIBM(GLenum type, GLint stride, const void **pointer, GLint ptrstride) { onutGLAPI.onutIndexPointerListIBM(type, stride, pointer, ptrstride); }
ONUT_FORCE_INLINE void _onutIndexxOES(GLfixed component) { onutGLAPI.onutIndexxOES(component); }
ONUT_FORCE_INLINE void _onutIndexxvOES(const GLfixed *component) { onutGLAPI.onutIndexxvOES(component); }
ONUT_FORCE_INLINE void _onutInsertComponentEXT(GLuint res, GLuint src, GLuint num) { onutGLAPI.onutInsertComponentEXT(res, src, num); }
ONUT_FORCE_INLINE void _onutInsertEventMarkerEXT(GLsizei length, const GLchar *marker) { onutGLAPI.onutInsertEventMarkerEXT(length, marker); }
ONUT_FORCE_INLINE void _onutInstrumentsBufferSGIX(GLsizei size, GLint *buffer) { onutGLAPI.onutInstrumentsBufferSGIX(size, buffer); }
ONUT_FORCE_INLINE void _onutInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight) { onutGLAPI.onutInterpolatePathsNV(resultPath, pathA, pathB, weight); }
ONUT_FORCE_INLINE void _onutInvalidateBufferData(GLuint buffer) { onutGLAPI.onutInvalidateBufferData(buffer); }
ONUT_FORCE_INLINE void _onutInvalidateBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr length) { onutGLAPI.onutInvalidateBufferSubData(buffer, offset, length); }
ONUT_FORCE_INLINE void _onutInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum *attachments) { onutGLAPI.onutInvalidateFramebuffer(target, numAttachments, attachments); }
ONUT_FORCE_INLINE void _onutInvalidateNamedFramebufferData(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments) { onutGLAPI.onutInvalidateNamedFramebufferData(framebuffer, numAttachments, attachments); }
ONUT_FORCE_INLINE void _onutInvalidateNamedFramebufferSubData(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutInvalidateNamedFramebufferSubData(framebuffer, numAttachments, attachments, x, y, width, height); }
ONUT_FORCE_INLINE void _onutInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height); }
ONUT_FORCE_INLINE void _onutInvalidateTexImage(GLuint texture, GLint level) { onutGLAPI.onutInvalidateTexImage(texture, level); }
ONUT_FORCE_INLINE void _onutInvalidateTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth) { onutGLAPI.onutInvalidateTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth); }
ONUT_FORCE_INLINE GLboolean _onutIsAsyncMarkerSGIX(GLuint marker) { return onutGLAPI.onutIsAsyncMarkerSGIX(marker); }
ONUT_FORCE_INLINE GLboolean _onutIsBuffer(GLuint buffer) { return onutGLAPI.onutIsBuffer(buffer); }
ONUT_FORCE_INLINE GLboolean _onutIsBufferARB(GLuint buffer) { return onutGLAPI.onutIsBufferARB(buffer); }
ONUT_FORCE_INLINE GLboolean _onutIsBufferResidentNV(GLenum target) { return onutGLAPI.onutIsBufferResidentNV(target); }
ONUT_FORCE_INLINE GLboolean _onutIsCommandListNV(GLuint list) { return onutGLAPI.onutIsCommandListNV(list); }
ONUT_FORCE_INLINE GLboolean _onutIsEnabled(GLenum cap) { return onutGLAPI.onutIsEnabled(cap); }
ONUT_FORCE_INLINE GLboolean _onutIsEnabledIndexedEXT(GLenum target, GLuint index) { return onutGLAPI.onutIsEnabledIndexedEXT(target, index); }
ONUT_FORCE_INLINE GLboolean _onutIsEnabledi(GLenum target, GLuint index) { return onutGLAPI.onutIsEnabledi(target, index); }
ONUT_FORCE_INLINE GLboolean _onutIsEnablediEXT(GLenum target, GLuint index) { return onutGLAPI.onutIsEnablediEXT(target, index); }
ONUT_FORCE_INLINE GLboolean _onutIsEnablediNV(GLenum target, GLuint index) { return onutGLAPI.onutIsEnablediNV(target, index); }
ONUT_FORCE_INLINE GLboolean _onutIsEnablediOES(GLenum target, GLuint index) { return onutGLAPI.onutIsEnablediOES(target, index); }
ONUT_FORCE_INLINE GLboolean _onutIsFenceAPPLE(GLuint fence) { return onutGLAPI.onutIsFenceAPPLE(fence); }
ONUT_FORCE_INLINE GLboolean _onutIsFenceNV(GLuint fence) { return onutGLAPI.onutIsFenceNV(fence); }
ONUT_FORCE_INLINE GLboolean _onutIsFramebuffer(GLuint framebuffer) { return onutGLAPI.onutIsFramebuffer(framebuffer); }
ONUT_FORCE_INLINE GLboolean _onutIsFramebufferEXT(GLuint framebuffer) { return onutGLAPI.onutIsFramebufferEXT(framebuffer); }
ONUT_FORCE_INLINE GLboolean _onutIsImageHandleResidentARB(GLuint64 handle) { return onutGLAPI.onutIsImageHandleResidentARB(handle); }
ONUT_FORCE_INLINE GLboolean _onutIsImageHandleResidentNV(GLuint64 handle) { return onutGLAPI.onutIsImageHandleResidentNV(handle); }
ONUT_FORCE_INLINE GLboolean _onutIsMemoryObjectEXT(GLuint memoryObject) { return onutGLAPI.onutIsMemoryObjectEXT(memoryObject); }
ONUT_FORCE_INLINE GLboolean _onutIsNameAMD(GLenum identifier, GLuint name) { return onutGLAPI.onutIsNameAMD(identifier, name); }
ONUT_FORCE_INLINE GLboolean _onutIsNamedBufferResidentNV(GLuint buffer) { return onutGLAPI.onutIsNamedBufferResidentNV(buffer); }
ONUT_FORCE_INLINE GLboolean _onutIsNamedStringARB(GLint namelen, const GLchar *name) { return onutGLAPI.onutIsNamedStringARB(namelen, name); }
ONUT_FORCE_INLINE GLboolean _onutIsObjectBufferATI(GLuint buffer) { return onutGLAPI.onutIsObjectBufferATI(buffer); }
ONUT_FORCE_INLINE GLboolean _onutIsOcclusionQueryNV(GLuint id) { return onutGLAPI.onutIsOcclusionQueryNV(id); }
ONUT_FORCE_INLINE GLboolean _onutIsPathNV(GLuint path) { return onutGLAPI.onutIsPathNV(path); }
ONUT_FORCE_INLINE GLboolean _onutIsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y) { return onutGLAPI.onutIsPointInFillPathNV(path, mask, x, y); }
ONUT_FORCE_INLINE GLboolean _onutIsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y) { return onutGLAPI.onutIsPointInStrokePathNV(path, x, y); }
ONUT_FORCE_INLINE GLboolean _onutIsProgram(GLuint program) { return onutGLAPI.onutIsProgram(program); }
ONUT_FORCE_INLINE GLboolean _onutIsProgramARB(GLuint program) { return onutGLAPI.onutIsProgramARB(program); }
ONUT_FORCE_INLINE GLboolean _onutIsProgramNV(GLuint id) { return onutGLAPI.onutIsProgramNV(id); }
ONUT_FORCE_INLINE GLboolean _onutIsProgramPipeline(GLuint pipeline) { return onutGLAPI.onutIsProgramPipeline(pipeline); }
ONUT_FORCE_INLINE GLboolean _onutIsProgramPipelineEXT(GLuint pipeline) { return onutGLAPI.onutIsProgramPipelineEXT(pipeline); }
ONUT_FORCE_INLINE GLboolean _onutIsQuery(GLuint id) { return onutGLAPI.onutIsQuery(id); }
ONUT_FORCE_INLINE GLboolean _onutIsQueryARB(GLuint id) { return onutGLAPI.onutIsQueryARB(id); }
ONUT_FORCE_INLINE GLboolean _onutIsQueryEXT(GLuint id) { return onutGLAPI.onutIsQueryEXT(id); }
ONUT_FORCE_INLINE GLboolean _onutIsRenderbuffer(GLuint renderbuffer) { return onutGLAPI.onutIsRenderbuffer(renderbuffer); }
ONUT_FORCE_INLINE GLboolean _onutIsRenderbufferEXT(GLuint renderbuffer) { return onutGLAPI.onutIsRenderbufferEXT(renderbuffer); }
ONUT_FORCE_INLINE GLboolean _onutIsSampler(GLuint sampler) { return onutGLAPI.onutIsSampler(sampler); }
ONUT_FORCE_INLINE GLboolean _onutIsSemaphoreEXT(GLuint semaphore) { return onutGLAPI.onutIsSemaphoreEXT(semaphore); }
ONUT_FORCE_INLINE GLboolean _onutIsShader(GLuint shader) { return onutGLAPI.onutIsShader(shader); }
ONUT_FORCE_INLINE GLboolean _onutIsStateNV(GLuint state) { return onutGLAPI.onutIsStateNV(state); }
ONUT_FORCE_INLINE GLboolean _onutIsSync(GLsync sync) { return onutGLAPI.onutIsSync(sync); }
ONUT_FORCE_INLINE GLboolean _onutIsSyncAPPLE(GLsync sync) { return onutGLAPI.onutIsSyncAPPLE(sync); }
ONUT_FORCE_INLINE GLboolean _onutIsTexture(GLuint texture) { return onutGLAPI.onutIsTexture(texture); }
ONUT_FORCE_INLINE GLboolean _onutIsTextureEXT(GLuint texture) { return onutGLAPI.onutIsTextureEXT(texture); }
ONUT_FORCE_INLINE GLboolean _onutIsTextureHandleResidentARB(GLuint64 handle) { return onutGLAPI.onutIsTextureHandleResidentARB(handle); }
ONUT_FORCE_INLINE GLboolean _onutIsTextureHandleResidentNV(GLuint64 handle) { return onutGLAPI.onutIsTextureHandleResidentNV(handle); }
ONUT_FORCE_INLINE GLboolean _onutIsTransformFeedback(GLuint id) { return onutGLAPI.onutIsTransformFeedback(id); }
ONUT_FORCE_INLINE GLboolean _onutIsTransformFeedbackNV(GLuint id) { return onutGLAPI.onutIsTransformFeedbackNV(id); }
ONUT_FORCE_INLINE GLboolean _onutIsVariantEnabledEXT(GLuint id, GLenum cap) { return onutGLAPI.onutIsVariantEnabledEXT(id, cap); }
ONUT_FORCE_INLINE GLboolean _onutIsVertexArray(GLuint array) { return onutGLAPI.onutIsVertexArray(array); }
ONUT_FORCE_INLINE GLboolean _onutIsVertexArrayAPPLE(GLuint array) { return onutGLAPI.onutIsVertexArrayAPPLE(array); }
ONUT_FORCE_INLINE GLboolean _onutIsVertexArrayOES(GLuint array) { return onutGLAPI.onutIsVertexArrayOES(array); }
ONUT_FORCE_INLINE GLboolean _onutIsVertexAttribEnabledAPPLE(GLuint index, GLenum pname) { return onutGLAPI.onutIsVertexAttribEnabledAPPLE(index, pname); }
ONUT_FORCE_INLINE void _onutLGPUCopyImageSubDataNVX(GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth) { onutGLAPI.onutLGPUCopyImageSubDataNVX(sourceGpu, destinationGpuMask, srcName, srcTarget, srcLevel, srcX, srxY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth); }
ONUT_FORCE_INLINE void _onutLGPUInterlockNVX(void) { onutGLAPI.onutLGPUInterlockNVX(); }
ONUT_FORCE_INLINE void _onutLGPUNamedBufferSubDataNVX(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data) { onutGLAPI.onutLGPUNamedBufferSubDataNVX(gpuMask, buffer, offset, size, data); }
ONUT_FORCE_INLINE void _onutLabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar *label) { onutGLAPI.onutLabelObjectEXT(type, object, length, label); }
ONUT_FORCE_INLINE void _onutLightEnviSGIX(GLenum pname, GLint param) { onutGLAPI.onutLightEnviSGIX(pname, param); }
ONUT_FORCE_INLINE void _onutLightModelxOES(GLenum pname, GLfixed param) { onutGLAPI.onutLightModelxOES(pname, param); }
ONUT_FORCE_INLINE void _onutLightModelxvOES(GLenum pname, const GLfixed *param) { onutGLAPI.onutLightModelxvOES(pname, param); }
ONUT_FORCE_INLINE void _onutLightxOES(GLenum light, GLenum pname, GLfixed param) { onutGLAPI.onutLightxOES(light, pname, param); }
ONUT_FORCE_INLINE void _onutLightxvOES(GLenum light, GLenum pname, const GLfixed *params) { onutGLAPI.onutLightxvOES(light, pname, params); }
ONUT_FORCE_INLINE void _onutLineWidth(GLfloat width) { onutGLAPI.onutLineWidth(width); }
ONUT_FORCE_INLINE void _onutLineWidthxOES(GLfixed width) { onutGLAPI.onutLineWidthxOES(width); }
ONUT_FORCE_INLINE void _onutLinkProgram(GLuint program) { onutGLAPI.onutLinkProgram(program); }
ONUT_FORCE_INLINE void _onutLinkProgramARB(GLhandleARB programObj) { onutGLAPI.onutLinkProgramARB(programObj); }
ONUT_FORCE_INLINE void _onutListDrawCommandsStatesClientNV(GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count) { onutGLAPI.onutListDrawCommandsStatesClientNV(list, segment, indirects, sizes, states, fbos, count); }
ONUT_FORCE_INLINE void _onutListParameterfSGIX(GLuint list, GLenum pname, GLfloat param) { onutGLAPI.onutListParameterfSGIX(list, pname, param); }
ONUT_FORCE_INLINE void _onutListParameterfvSGIX(GLuint list, GLenum pname, const GLfloat *params) { onutGLAPI.onutListParameterfvSGIX(list, pname, params); }
ONUT_FORCE_INLINE void _onutListParameteriSGIX(GLuint list, GLenum pname, GLint param) { onutGLAPI.onutListParameteriSGIX(list, pname, param); }
ONUT_FORCE_INLINE void _onutListParameterivSGIX(GLuint list, GLenum pname, const GLint *params) { onutGLAPI.onutListParameterivSGIX(list, pname, params); }
ONUT_FORCE_INLINE void _onutLoadIdentityDeformationMapSGIX(GLbitfield mask) { onutGLAPI.onutLoadIdentityDeformationMapSGIX(mask); }
ONUT_FORCE_INLINE void _onutLoadMatrixxOES(const GLfixed *m) { onutGLAPI.onutLoadMatrixxOES(m); }
ONUT_FORCE_INLINE void _onutLoadProgramNV(GLenum target, GLuint id, GLsizei len, const GLubyte *program) { onutGLAPI.onutLoadProgramNV(target, id, len, program); }
ONUT_FORCE_INLINE void _onutLoadTransposeMatrixd(const GLdouble *m) { onutGLAPI.onutLoadTransposeMatrixd(m); }
ONUT_FORCE_INLINE void _onutLoadTransposeMatrixdARB(const GLdouble *m) { onutGLAPI.onutLoadTransposeMatrixdARB(m); }
ONUT_FORCE_INLINE void _onutLoadTransposeMatrixf(const GLfloat *m) { onutGLAPI.onutLoadTransposeMatrixf(m); }
ONUT_FORCE_INLINE void _onutLoadTransposeMatrixfARB(const GLfloat *m) { onutGLAPI.onutLoadTransposeMatrixfARB(m); }
ONUT_FORCE_INLINE void _onutLoadTransposeMatrixxOES(const GLfixed *m) { onutGLAPI.onutLoadTransposeMatrixxOES(m); }
ONUT_FORCE_INLINE void _onutLockArraysEXT(GLint first, GLsizei count) { onutGLAPI.onutLockArraysEXT(first, count); }
ONUT_FORCE_INLINE void _onutLogicOp(GLenum opcode) { onutGLAPI.onutLogicOp(opcode); }
ONUT_FORCE_INLINE void _onutMakeBufferNonResidentNV(GLenum target) { onutGLAPI.onutMakeBufferNonResidentNV(target); }
ONUT_FORCE_INLINE void _onutMakeBufferResidentNV(GLenum target, GLenum access) { onutGLAPI.onutMakeBufferResidentNV(target, access); }
ONUT_FORCE_INLINE void _onutMakeImageHandleNonResidentARB(GLuint64 handle) { onutGLAPI.onutMakeImageHandleNonResidentARB(handle); }
ONUT_FORCE_INLINE void _onutMakeImageHandleNonResidentNV(GLuint64 handle) { onutGLAPI.onutMakeImageHandleNonResidentNV(handle); }
ONUT_FORCE_INLINE void _onutMakeImageHandleResidentARB(GLuint64 handle, GLenum access) { onutGLAPI.onutMakeImageHandleResidentARB(handle, access); }
ONUT_FORCE_INLINE void _onutMakeImageHandleResidentNV(GLuint64 handle, GLenum access) { onutGLAPI.onutMakeImageHandleResidentNV(handle, access); }
ONUT_FORCE_INLINE void _onutMakeNamedBufferNonResidentNV(GLuint buffer) { onutGLAPI.onutMakeNamedBufferNonResidentNV(buffer); }
ONUT_FORCE_INLINE void _onutMakeNamedBufferResidentNV(GLuint buffer, GLenum access) { onutGLAPI.onutMakeNamedBufferResidentNV(buffer, access); }
ONUT_FORCE_INLINE void _onutMakeTextureHandleNonResidentARB(GLuint64 handle) { onutGLAPI.onutMakeTextureHandleNonResidentARB(handle); }
ONUT_FORCE_INLINE void _onutMakeTextureHandleNonResidentNV(GLuint64 handle) { onutGLAPI.onutMakeTextureHandleNonResidentNV(handle); }
ONUT_FORCE_INLINE void _onutMakeTextureHandleResidentARB(GLuint64 handle) { onutGLAPI.onutMakeTextureHandleResidentARB(handle); }
ONUT_FORCE_INLINE void _onutMakeTextureHandleResidentNV(GLuint64 handle) { onutGLAPI.onutMakeTextureHandleResidentNV(handle); }
ONUT_FORCE_INLINE void _onutMap1xOES(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points) { onutGLAPI.onutMap1xOES(target, u1, u2, stride, order, points); }
ONUT_FORCE_INLINE void _onutMap2xOES(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points) { onutGLAPI.onutMap2xOES(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points); }
ONUT_FORCE_INLINE void *_onutMapBuffer(GLenum target, GLenum access) { return onutGLAPI.onutMapBuffer(target, access); }
ONUT_FORCE_INLINE void *_onutMapBufferARB(GLenum target, GLenum access) { return onutGLAPI.onutMapBufferARB(target, access); }
ONUT_FORCE_INLINE void *_onutMapBufferOES(GLenum target, GLenum access) { return onutGLAPI.onutMapBufferOES(target, access); }
ONUT_FORCE_INLINE void *_onutMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) { return onutGLAPI.onutMapBufferRange(target, offset, length, access); }
ONUT_FORCE_INLINE void *_onutMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) { return onutGLAPI.onutMapBufferRangeEXT(target, offset, length, access); }
ONUT_FORCE_INLINE void _onutMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points) { onutGLAPI.onutMapControlPointsNV(target, index, type, ustride, vstride, uorder, vorder, packed, points); }
ONUT_FORCE_INLINE void _onutMapGrid1xOES(GLint n, GLfixed u1, GLfixed u2) { onutGLAPI.onutMapGrid1xOES(n, u1, u2); }
ONUT_FORCE_INLINE void _onutMapGrid2xOES(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2) { onutGLAPI.onutMapGrid2xOES(n, u1, u2, v1, v2); }
ONUT_FORCE_INLINE void *_onutMapNamedBuffer(GLuint buffer, GLenum access) { return onutGLAPI.onutMapNamedBuffer(buffer, access); }
ONUT_FORCE_INLINE void *_onutMapNamedBufferEXT(GLuint buffer, GLenum access) { return onutGLAPI.onutMapNamedBufferEXT(buffer, access); }
ONUT_FORCE_INLINE void *_onutMapNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access) { return onutGLAPI.onutMapNamedBufferRange(buffer, offset, length, access); }
ONUT_FORCE_INLINE void *_onutMapNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access) { return onutGLAPI.onutMapNamedBufferRangeEXT(buffer, offset, length, access); }
ONUT_FORCE_INLINE void *_onutMapObjectBufferATI(GLuint buffer) { return onutGLAPI.onutMapObjectBufferATI(buffer); }
ONUT_FORCE_INLINE void _onutMapParameterfvNV(GLenum target, GLenum pname, const GLfloat *params) { onutGLAPI.onutMapParameterfvNV(target, pname, params); }
ONUT_FORCE_INLINE void _onutMapParameterivNV(GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutMapParameterivNV(target, pname, params); }
ONUT_FORCE_INLINE void *_onutMapTexture2DINTEL(GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout) { return onutGLAPI.onutMapTexture2DINTEL(texture, level, access, stride, layout); }
ONUT_FORCE_INLINE void _onutMapVertexAttrib1dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points) { onutGLAPI.onutMapVertexAttrib1dAPPLE(index, size, u1, u2, stride, order, points); }
ONUT_FORCE_INLINE void _onutMapVertexAttrib1fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points) { onutGLAPI.onutMapVertexAttrib1fAPPLE(index, size, u1, u2, stride, order, points); }
ONUT_FORCE_INLINE void _onutMapVertexAttrib2dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points) { onutGLAPI.onutMapVertexAttrib2dAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points); }
ONUT_FORCE_INLINE void _onutMapVertexAttrib2fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points) { onutGLAPI.onutMapVertexAttrib2fAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points); }
ONUT_FORCE_INLINE void _onutMaterialxOES(GLenum face, GLenum pname, GLfixed param) { onutGLAPI.onutMaterialxOES(face, pname, param); }
ONUT_FORCE_INLINE void _onutMaterialxvOES(GLenum face, GLenum pname, const GLfixed *param) { onutGLAPI.onutMaterialxvOES(face, pname, param); }
ONUT_FORCE_INLINE void _onutMatrixFrustumEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar) { onutGLAPI.onutMatrixFrustumEXT(mode, left, right, bottom, top, zNear, zFar); }
ONUT_FORCE_INLINE void _onutMatrixIndexPointerARB(GLint size, GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutMatrixIndexPointerARB(size, type, stride, pointer); }
ONUT_FORCE_INLINE void _onutMatrixIndexubvARB(GLint size, const GLubyte *indices) { onutGLAPI.onutMatrixIndexubvARB(size, indices); }
ONUT_FORCE_INLINE void _onutMatrixIndexuivARB(GLint size, const GLuint *indices) { onutGLAPI.onutMatrixIndexuivARB(size, indices); }
ONUT_FORCE_INLINE void _onutMatrixIndexusvARB(GLint size, const GLushort *indices) { onutGLAPI.onutMatrixIndexusvARB(size, indices); }
ONUT_FORCE_INLINE void _onutMatrixLoad3x2fNV(GLenum matrixMode, const GLfloat *m) { onutGLAPI.onutMatrixLoad3x2fNV(matrixMode, m); }
ONUT_FORCE_INLINE void _onutMatrixLoad3x3fNV(GLenum matrixMode, const GLfloat *m) { onutGLAPI.onutMatrixLoad3x3fNV(matrixMode, m); }
ONUT_FORCE_INLINE void _onutMatrixLoadIdentityEXT(GLenum mode) { onutGLAPI.onutMatrixLoadIdentityEXT(mode); }
ONUT_FORCE_INLINE void _onutMatrixLoadTranspose3x3fNV(GLenum matrixMode, const GLfloat *m) { onutGLAPI.onutMatrixLoadTranspose3x3fNV(matrixMode, m); }
ONUT_FORCE_INLINE void _onutMatrixLoadTransposedEXT(GLenum mode, const GLdouble *m) { onutGLAPI.onutMatrixLoadTransposedEXT(mode, m); }
ONUT_FORCE_INLINE void _onutMatrixLoadTransposefEXT(GLenum mode, const GLfloat *m) { onutGLAPI.onutMatrixLoadTransposefEXT(mode, m); }
ONUT_FORCE_INLINE void _onutMatrixLoaddEXT(GLenum mode, const GLdouble *m) { onutGLAPI.onutMatrixLoaddEXT(mode, m); }
ONUT_FORCE_INLINE void _onutMatrixLoadfEXT(GLenum mode, const GLfloat *m) { onutGLAPI.onutMatrixLoadfEXT(mode, m); }
ONUT_FORCE_INLINE void _onutMatrixMult3x2fNV(GLenum matrixMode, const GLfloat *m) { onutGLAPI.onutMatrixMult3x2fNV(matrixMode, m); }
ONUT_FORCE_INLINE void _onutMatrixMult3x3fNV(GLenum matrixMode, const GLfloat *m) { onutGLAPI.onutMatrixMult3x3fNV(matrixMode, m); }
ONUT_FORCE_INLINE void _onutMatrixMultTranspose3x3fNV(GLenum matrixMode, const GLfloat *m) { onutGLAPI.onutMatrixMultTranspose3x3fNV(matrixMode, m); }
ONUT_FORCE_INLINE void _onutMatrixMultTransposedEXT(GLenum mode, const GLdouble *m) { onutGLAPI.onutMatrixMultTransposedEXT(mode, m); }
ONUT_FORCE_INLINE void _onutMatrixMultTransposefEXT(GLenum mode, const GLfloat *m) { onutGLAPI.onutMatrixMultTransposefEXT(mode, m); }
ONUT_FORCE_INLINE void _onutMatrixMultdEXT(GLenum mode, const GLdouble *m) { onutGLAPI.onutMatrixMultdEXT(mode, m); }
ONUT_FORCE_INLINE void _onutMatrixMultfEXT(GLenum mode, const GLfloat *m) { onutGLAPI.onutMatrixMultfEXT(mode, m); }
ONUT_FORCE_INLINE void _onutMatrixOrthoEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar) { onutGLAPI.onutMatrixOrthoEXT(mode, left, right, bottom, top, zNear, zFar); }
ONUT_FORCE_INLINE void _onutMatrixPopEXT(GLenum mode) { onutGLAPI.onutMatrixPopEXT(mode); }
ONUT_FORCE_INLINE void _onutMatrixPushEXT(GLenum mode) { onutGLAPI.onutMatrixPushEXT(mode); }
ONUT_FORCE_INLINE void _onutMatrixRotatedEXT(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutMatrixRotatedEXT(mode, angle, x, y, z); }
ONUT_FORCE_INLINE void _onutMatrixRotatefEXT(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutMatrixRotatefEXT(mode, angle, x, y, z); }
ONUT_FORCE_INLINE void _onutMatrixScaledEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutMatrixScaledEXT(mode, x, y, z); }
ONUT_FORCE_INLINE void _onutMatrixScalefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutMatrixScalefEXT(mode, x, y, z); }
ONUT_FORCE_INLINE void _onutMatrixTranslatedEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutMatrixTranslatedEXT(mode, x, y, z); }
ONUT_FORCE_INLINE void _onutMatrixTranslatefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutMatrixTranslatefEXT(mode, x, y, z); }
ONUT_FORCE_INLINE void _onutMaxShaderCompilerThreadsARB(GLuint count) { onutGLAPI.onutMaxShaderCompilerThreadsARB(count); }
ONUT_FORCE_INLINE void _onutMemoryBarrier(GLbitfield barriers) { onutGLAPI.onutMemoryBarrier(barriers); }
ONUT_FORCE_INLINE void _onutMemoryBarrierByRegion(GLbitfield barriers) { onutGLAPI.onutMemoryBarrierByRegion(barriers); }
ONUT_FORCE_INLINE void _onutMemoryBarrierEXT(GLbitfield barriers) { onutGLAPI.onutMemoryBarrierEXT(barriers); }
ONUT_FORCE_INLINE void _onutMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, const GLint *params) { onutGLAPI.onutMemoryObjectParameterivEXT(memoryObject, pname, params); }
ONUT_FORCE_INLINE void _onutMinSampleShading(GLfloat value) { onutGLAPI.onutMinSampleShading(value); }
ONUT_FORCE_INLINE void _onutMinSampleShadingARB(GLfloat value) { onutGLAPI.onutMinSampleShadingARB(value); }
ONUT_FORCE_INLINE void _onutMinSampleShadingOES(GLfloat value) { onutGLAPI.onutMinSampleShadingOES(value); }
ONUT_FORCE_INLINE void _onutMinmax(GLenum target, GLenum internalformat, GLboolean sink) { onutGLAPI.onutMinmax(target, internalformat, sink); }
ONUT_FORCE_INLINE void _onutMinmaxEXT(GLenum target, GLenum internalformat, GLboolean sink) { onutGLAPI.onutMinmaxEXT(target, internalformat, sink); }
ONUT_FORCE_INLINE void _onutMultMatrixxOES(const GLfixed *m) { onutGLAPI.onutMultMatrixxOES(m); }
ONUT_FORCE_INLINE void _onutMultTransposeMatrixd(const GLdouble *m) { onutGLAPI.onutMultTransposeMatrixd(m); }
ONUT_FORCE_INLINE void _onutMultTransposeMatrixdARB(const GLdouble *m) { onutGLAPI.onutMultTransposeMatrixdARB(m); }
ONUT_FORCE_INLINE void _onutMultTransposeMatrixf(const GLfloat *m) { onutGLAPI.onutMultTransposeMatrixf(m); }
ONUT_FORCE_INLINE void _onutMultTransposeMatrixfARB(const GLfloat *m) { onutGLAPI.onutMultTransposeMatrixfARB(m); }
ONUT_FORCE_INLINE void _onutMultTransposeMatrixxOES(const GLfixed *m) { onutGLAPI.onutMultTransposeMatrixxOES(m); }
ONUT_FORCE_INLINE void _onutMultiDrawArrays(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount) { onutGLAPI.onutMultiDrawArrays(mode, first, count, drawcount); }
ONUT_FORCE_INLINE void _onutMultiDrawArraysEXT(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount) { onutGLAPI.onutMultiDrawArraysEXT(mode, first, count, primcount); }
ONUT_FORCE_INLINE void _onutMultiDrawArraysIndirect(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride) { onutGLAPI.onutMultiDrawArraysIndirect(mode, indirect, drawcount, stride); }
ONUT_FORCE_INLINE void _onutMultiDrawArraysIndirectAMD(GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride) { onutGLAPI.onutMultiDrawArraysIndirectAMD(mode, indirect, primcount, stride); }
ONUT_FORCE_INLINE void _onutMultiDrawArraysIndirectBindlessCountNV(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount) { onutGLAPI.onutMultiDrawArraysIndirectBindlessCountNV(mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount); }
ONUT_FORCE_INLINE void _onutMultiDrawArraysIndirectBindlessNV(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount) { onutGLAPI.onutMultiDrawArraysIndirectBindlessNV(mode, indirect, drawCount, stride, vertexBufferCount); }
ONUT_FORCE_INLINE void _onutMultiDrawArraysIndirectCountARB(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride) { onutGLAPI.onutMultiDrawArraysIndirectCountARB(mode, indirect, drawcount, maxdrawcount, stride); }
ONUT_FORCE_INLINE void _onutMultiDrawArraysIndirectEXT(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride) { onutGLAPI.onutMultiDrawArraysIndirectEXT(mode, indirect, drawcount, stride); }
ONUT_FORCE_INLINE void _onutMultiDrawElementArrayAPPLE(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount) { onutGLAPI.onutMultiDrawElementArrayAPPLE(mode, first, count, primcount); }
ONUT_FORCE_INLINE void _onutMultiDrawElements(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei drawcount) { onutGLAPI.onutMultiDrawElements(mode, count, type, indices, drawcount); }
ONUT_FORCE_INLINE void _onutMultiDrawElementsBaseVertex(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei drawcount, const GLint *basevertex) { onutGLAPI.onutMultiDrawElementsBaseVertex(mode, count, type, indices, drawcount, basevertex); }
ONUT_FORCE_INLINE void _onutMultiDrawElementsBaseVertexEXT(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei primcount, const GLint *basevertex) { onutGLAPI.onutMultiDrawElementsBaseVertexEXT(mode, count, type, indices, primcount, basevertex); }
ONUT_FORCE_INLINE void _onutMultiDrawElementsBaseVertexOES(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei primcount, const GLint *basevertex) { onutGLAPI.onutMultiDrawElementsBaseVertexOES(mode, count, type, indices, primcount, basevertex); }
ONUT_FORCE_INLINE void _onutMultiDrawElementsEXT(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei primcount) { onutGLAPI.onutMultiDrawElementsEXT(mode, count, type, indices, primcount); }
ONUT_FORCE_INLINE void _onutMultiDrawElementsIndirect(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride) { onutGLAPI.onutMultiDrawElementsIndirect(mode, type, indirect, drawcount, stride); }
ONUT_FORCE_INLINE void _onutMultiDrawElementsIndirectAMD(GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride) { onutGLAPI.onutMultiDrawElementsIndirectAMD(mode, type, indirect, primcount, stride); }
ONUT_FORCE_INLINE void _onutMultiDrawElementsIndirectBindlessCountNV(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount) { onutGLAPI.onutMultiDrawElementsIndirectBindlessCountNV(mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount); }
ONUT_FORCE_INLINE void _onutMultiDrawElementsIndirectBindlessNV(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount) { onutGLAPI.onutMultiDrawElementsIndirectBindlessNV(mode, type, indirect, drawCount, stride, vertexBufferCount); }
ONUT_FORCE_INLINE void _onutMultiDrawElementsIndirectCountARB(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride) { onutGLAPI.onutMultiDrawElementsIndirectCountARB(mode, type, indirect, drawcount, maxdrawcount, stride); }
ONUT_FORCE_INLINE void _onutMultiDrawElementsIndirectEXT(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride) { onutGLAPI.onutMultiDrawElementsIndirectEXT(mode, type, indirect, drawcount, stride); }
ONUT_FORCE_INLINE void _onutMultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount) { onutGLAPI.onutMultiDrawRangeElementArrayAPPLE(mode, start, end, first, count, primcount); }
ONUT_FORCE_INLINE void _onutMultiModeDrawArraysIBM(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride) { onutGLAPI.onutMultiModeDrawArraysIBM(mode, first, count, primcount, modestride); }
ONUT_FORCE_INLINE void _onutMultiModeDrawElementsIBM(const GLenum *mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei primcount, GLint modestride) { onutGLAPI.onutMultiModeDrawElementsIBM(mode, count, type, indices, primcount, modestride); }
ONUT_FORCE_INLINE void _onutMultiTexBufferEXT(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer) { onutGLAPI.onutMultiTexBufferEXT(texunit, target, internalformat, buffer); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1bOES(GLenum texture, GLbyte s) { onutGLAPI.onutMultiTexCoord1bOES(texture, s); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1bvOES(GLenum texture, const GLbyte *coords) { onutGLAPI.onutMultiTexCoord1bvOES(texture, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1d(GLenum target, GLdouble s) { onutGLAPI.onutMultiTexCoord1d(target, s); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1dARB(GLenum target, GLdouble s) { onutGLAPI.onutMultiTexCoord1dARB(target, s); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1dv(GLenum target, const GLdouble *v) { onutGLAPI.onutMultiTexCoord1dv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1dvARB(GLenum target, const GLdouble *v) { onutGLAPI.onutMultiTexCoord1dvARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1f(GLenum target, GLfloat s) { onutGLAPI.onutMultiTexCoord1f(target, s); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1fARB(GLenum target, GLfloat s) { onutGLAPI.onutMultiTexCoord1fARB(target, s); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1fv(GLenum target, const GLfloat *v) { onutGLAPI.onutMultiTexCoord1fv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1fvARB(GLenum target, const GLfloat *v) { onutGLAPI.onutMultiTexCoord1fvARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1hNV(GLenum target, GLhalfNV s) { onutGLAPI.onutMultiTexCoord1hNV(target, s); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1hvNV(GLenum target, const GLhalfNV *v) { onutGLAPI.onutMultiTexCoord1hvNV(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1i(GLenum target, GLint s) { onutGLAPI.onutMultiTexCoord1i(target, s); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1iARB(GLenum target, GLint s) { onutGLAPI.onutMultiTexCoord1iARB(target, s); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1iv(GLenum target, const GLint *v) { onutGLAPI.onutMultiTexCoord1iv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1ivARB(GLenum target, const GLint *v) { onutGLAPI.onutMultiTexCoord1ivARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1s(GLenum target, GLshort s) { onutGLAPI.onutMultiTexCoord1s(target, s); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1sARB(GLenum target, GLshort s) { onutGLAPI.onutMultiTexCoord1sARB(target, s); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1sv(GLenum target, const GLshort *v) { onutGLAPI.onutMultiTexCoord1sv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1svARB(GLenum target, const GLshort *v) { onutGLAPI.onutMultiTexCoord1svARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1xOES(GLenum texture, GLfixed s) { onutGLAPI.onutMultiTexCoord1xOES(texture, s); }
ONUT_FORCE_INLINE void _onutMultiTexCoord1xvOES(GLenum texture, const GLfixed *coords) { onutGLAPI.onutMultiTexCoord1xvOES(texture, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2bOES(GLenum texture, GLbyte s, GLbyte t) { onutGLAPI.onutMultiTexCoord2bOES(texture, s, t); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2bvOES(GLenum texture, const GLbyte *coords) { onutGLAPI.onutMultiTexCoord2bvOES(texture, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2d(GLenum target, GLdouble s, GLdouble t) { onutGLAPI.onutMultiTexCoord2d(target, s, t); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t) { onutGLAPI.onutMultiTexCoord2dARB(target, s, t); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2dv(GLenum target, const GLdouble *v) { onutGLAPI.onutMultiTexCoord2dv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2dvARB(GLenum target, const GLdouble *v) { onutGLAPI.onutMultiTexCoord2dvARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2f(GLenum target, GLfloat s, GLfloat t) { onutGLAPI.onutMultiTexCoord2f(target, s, t); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t) { onutGLAPI.onutMultiTexCoord2fARB(target, s, t); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2fv(GLenum target, const GLfloat *v) { onutGLAPI.onutMultiTexCoord2fv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2fvARB(GLenum target, const GLfloat *v) { onutGLAPI.onutMultiTexCoord2fvARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2hNV(GLenum target, GLhalfNV s, GLhalfNV t) { onutGLAPI.onutMultiTexCoord2hNV(target, s, t); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2hvNV(GLenum target, const GLhalfNV *v) { onutGLAPI.onutMultiTexCoord2hvNV(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2i(GLenum target, GLint s, GLint t) { onutGLAPI.onutMultiTexCoord2i(target, s, t); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2iARB(GLenum target, GLint s, GLint t) { onutGLAPI.onutMultiTexCoord2iARB(target, s, t); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2iv(GLenum target, const GLint *v) { onutGLAPI.onutMultiTexCoord2iv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2ivARB(GLenum target, const GLint *v) { onutGLAPI.onutMultiTexCoord2ivARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2s(GLenum target, GLshort s, GLshort t) { onutGLAPI.onutMultiTexCoord2s(target, s, t); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t) { onutGLAPI.onutMultiTexCoord2sARB(target, s, t); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2sv(GLenum target, const GLshort *v) { onutGLAPI.onutMultiTexCoord2sv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2svARB(GLenum target, const GLshort *v) { onutGLAPI.onutMultiTexCoord2svARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2xOES(GLenum texture, GLfixed s, GLfixed t) { onutGLAPI.onutMultiTexCoord2xOES(texture, s, t); }
ONUT_FORCE_INLINE void _onutMultiTexCoord2xvOES(GLenum texture, const GLfixed *coords) { onutGLAPI.onutMultiTexCoord2xvOES(texture, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r) { onutGLAPI.onutMultiTexCoord3bOES(texture, s, t, r); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3bvOES(GLenum texture, const GLbyte *coords) { onutGLAPI.onutMultiTexCoord3bvOES(texture, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r) { onutGLAPI.onutMultiTexCoord3d(target, s, t, r); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r) { onutGLAPI.onutMultiTexCoord3dARB(target, s, t, r); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3dv(GLenum target, const GLdouble *v) { onutGLAPI.onutMultiTexCoord3dv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3dvARB(GLenum target, const GLdouble *v) { onutGLAPI.onutMultiTexCoord3dvARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r) { onutGLAPI.onutMultiTexCoord3f(target, s, t, r); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r) { onutGLAPI.onutMultiTexCoord3fARB(target, s, t, r); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3fv(GLenum target, const GLfloat *v) { onutGLAPI.onutMultiTexCoord3fv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3fvARB(GLenum target, const GLfloat *v) { onutGLAPI.onutMultiTexCoord3fvARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r) { onutGLAPI.onutMultiTexCoord3hNV(target, s, t, r); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3hvNV(GLenum target, const GLhalfNV *v) { onutGLAPI.onutMultiTexCoord3hvNV(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r) { onutGLAPI.onutMultiTexCoord3i(target, s, t, r); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r) { onutGLAPI.onutMultiTexCoord3iARB(target, s, t, r); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3iv(GLenum target, const GLint *v) { onutGLAPI.onutMultiTexCoord3iv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3ivARB(GLenum target, const GLint *v) { onutGLAPI.onutMultiTexCoord3ivARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r) { onutGLAPI.onutMultiTexCoord3s(target, s, t, r); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r) { onutGLAPI.onutMultiTexCoord3sARB(target, s, t, r); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3sv(GLenum target, const GLshort *v) { onutGLAPI.onutMultiTexCoord3sv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3svARB(GLenum target, const GLshort *v) { onutGLAPI.onutMultiTexCoord3svARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r) { onutGLAPI.onutMultiTexCoord3xOES(texture, s, t, r); }
ONUT_FORCE_INLINE void _onutMultiTexCoord3xvOES(GLenum texture, const GLfixed *coords) { onutGLAPI.onutMultiTexCoord3xvOES(texture, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q) { onutGLAPI.onutMultiTexCoord4bOES(texture, s, t, r, q); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4bvOES(GLenum texture, const GLbyte *coords) { onutGLAPI.onutMultiTexCoord4bvOES(texture, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q) { onutGLAPI.onutMultiTexCoord4d(target, s, t, r, q); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q) { onutGLAPI.onutMultiTexCoord4dARB(target, s, t, r, q); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4dv(GLenum target, const GLdouble *v) { onutGLAPI.onutMultiTexCoord4dv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4dvARB(GLenum target, const GLdouble *v) { onutGLAPI.onutMultiTexCoord4dvARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q) { onutGLAPI.onutMultiTexCoord4f(target, s, t, r, q); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q) { onutGLAPI.onutMultiTexCoord4fARB(target, s, t, r, q); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4fv(GLenum target, const GLfloat *v) { onutGLAPI.onutMultiTexCoord4fv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4fvARB(GLenum target, const GLfloat *v) { onutGLAPI.onutMultiTexCoord4fvARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q) { onutGLAPI.onutMultiTexCoord4hNV(target, s, t, r, q); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4hvNV(GLenum target, const GLhalfNV *v) { onutGLAPI.onutMultiTexCoord4hvNV(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q) { onutGLAPI.onutMultiTexCoord4i(target, s, t, r, q); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q) { onutGLAPI.onutMultiTexCoord4iARB(target, s, t, r, q); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4iv(GLenum target, const GLint *v) { onutGLAPI.onutMultiTexCoord4iv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4ivARB(GLenum target, const GLint *v) { onutGLAPI.onutMultiTexCoord4ivARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q) { onutGLAPI.onutMultiTexCoord4s(target, s, t, r, q); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q) { onutGLAPI.onutMultiTexCoord4sARB(target, s, t, r, q); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4sv(GLenum target, const GLshort *v) { onutGLAPI.onutMultiTexCoord4sv(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4svARB(GLenum target, const GLshort *v) { onutGLAPI.onutMultiTexCoord4svARB(target, v); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q) { onutGLAPI.onutMultiTexCoord4xOES(texture, s, t, r, q); }
ONUT_FORCE_INLINE void _onutMultiTexCoord4xvOES(GLenum texture, const GLfixed *coords) { onutGLAPI.onutMultiTexCoord4xvOES(texture, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoordP1ui(GLenum texture, GLenum type, GLuint coords) { onutGLAPI.onutMultiTexCoordP1ui(texture, type, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoordP1uiv(GLenum texture, GLenum type, const GLuint *coords) { onutGLAPI.onutMultiTexCoordP1uiv(texture, type, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoordP2ui(GLenum texture, GLenum type, GLuint coords) { onutGLAPI.onutMultiTexCoordP2ui(texture, type, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoordP2uiv(GLenum texture, GLenum type, const GLuint *coords) { onutGLAPI.onutMultiTexCoordP2uiv(texture, type, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoordP3ui(GLenum texture, GLenum type, GLuint coords) { onutGLAPI.onutMultiTexCoordP3ui(texture, type, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoordP3uiv(GLenum texture, GLenum type, const GLuint *coords) { onutGLAPI.onutMultiTexCoordP3uiv(texture, type, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoordP4ui(GLenum texture, GLenum type, GLuint coords) { onutGLAPI.onutMultiTexCoordP4ui(texture, type, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoordP4uiv(GLenum texture, GLenum type, const GLuint *coords) { onutGLAPI.onutMultiTexCoordP4uiv(texture, type, coords); }
ONUT_FORCE_INLINE void _onutMultiTexCoordPointerEXT(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutMultiTexCoordPointerEXT(texunit, size, type, stride, pointer); }
ONUT_FORCE_INLINE void _onutMultiTexEnvfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param) { onutGLAPI.onutMultiTexEnvfEXT(texunit, target, pname, param); }
ONUT_FORCE_INLINE void _onutMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params) { onutGLAPI.onutMultiTexEnvfvEXT(texunit, target, pname, params); }
ONUT_FORCE_INLINE void _onutMultiTexEnviEXT(GLenum texunit, GLenum target, GLenum pname, GLint param) { onutGLAPI.onutMultiTexEnviEXT(texunit, target, pname, param); }
ONUT_FORCE_INLINE void _onutMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutMultiTexEnvivEXT(texunit, target, pname, params); }
ONUT_FORCE_INLINE void _onutMultiTexGendEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble param) { onutGLAPI.onutMultiTexGendEXT(texunit, coord, pname, param); }
ONUT_FORCE_INLINE void _onutMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params) { onutGLAPI.onutMultiTexGendvEXT(texunit, coord, pname, params); }
ONUT_FORCE_INLINE void _onutMultiTexGenfEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat param) { onutGLAPI.onutMultiTexGenfEXT(texunit, coord, pname, param); }
ONUT_FORCE_INLINE void _onutMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params) { onutGLAPI.onutMultiTexGenfvEXT(texunit, coord, pname, params); }
ONUT_FORCE_INLINE void _onutMultiTexGeniEXT(GLenum texunit, GLenum coord, GLenum pname, GLint param) { onutGLAPI.onutMultiTexGeniEXT(texunit, coord, pname, param); }
ONUT_FORCE_INLINE void _onutMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, const GLint *params) { onutGLAPI.onutMultiTexGenivEXT(texunit, coord, pname, params); }
ONUT_FORCE_INLINE void _onutMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, format, type, pixels); }
ONUT_FORCE_INLINE void _onutMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, format, type, pixels); }
ONUT_FORCE_INLINE void _onutMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, format, type, pixels); }
ONUT_FORCE_INLINE void _onutMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutMultiTexParameterIivEXT(texunit, target, pname, params); }
ONUT_FORCE_INLINE void _onutMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, const GLuint *params) { onutGLAPI.onutMultiTexParameterIuivEXT(texunit, target, pname, params); }
ONUT_FORCE_INLINE void _onutMultiTexParameterfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param) { onutGLAPI.onutMultiTexParameterfEXT(texunit, target, pname, param); }
ONUT_FORCE_INLINE void _onutMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params) { onutGLAPI.onutMultiTexParameterfvEXT(texunit, target, pname, params); }
ONUT_FORCE_INLINE void _onutMultiTexParameteriEXT(GLenum texunit, GLenum target, GLenum pname, GLint param) { onutGLAPI.onutMultiTexParameteriEXT(texunit, target, pname, param); }
ONUT_FORCE_INLINE void _onutMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutMultiTexParameterivEXT(texunit, target, pname, params); }
ONUT_FORCE_INLINE void _onutMultiTexRenderbufferEXT(GLenum texunit, GLenum target, GLuint renderbuffer) { onutGLAPI.onutMultiTexRenderbufferEXT(texunit, target, renderbuffer); }
ONUT_FORCE_INLINE void _onutMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, type, pixels); }
ONUT_FORCE_INLINE void _onutMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, type, pixels); }
ONUT_FORCE_INLINE void _onutMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels); }
ONUT_FORCE_INLINE void _onutMulticastBarrierNV(void) { onutGLAPI.onutMulticastBarrierNV(); }
ONUT_FORCE_INLINE void _onutMulticastBlitFramebufferNV(GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) { onutGLAPI.onutMulticastBlitFramebufferNV(srcGpu, dstGpu, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter); }
ONUT_FORCE_INLINE void _onutMulticastBufferSubDataNV(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data) { onutGLAPI.onutMulticastBufferSubDataNV(gpuMask, buffer, offset, size, data); }
ONUT_FORCE_INLINE void _onutMulticastCopyBufferSubDataNV(GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) { onutGLAPI.onutMulticastCopyBufferSubDataNV(readGpu, writeGpuMask, readBuffer, writeBuffer, readOffset, writeOffset, size); }
ONUT_FORCE_INLINE void _onutMulticastCopyImageSubDataNV(GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth) { onutGLAPI.onutMulticastCopyImageSubDataNV(srcGpu, dstGpuMask, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth); }
ONUT_FORCE_INLINE void _onutMulticastFramebufferSampleLocationsfvNV(GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v) { onutGLAPI.onutMulticastFramebufferSampleLocationsfvNV(gpu, framebuffer, start, count, v); }
ONUT_FORCE_INLINE void _onutMulticastGetQueryObjecti64vNV(GLuint gpu, GLuint id, GLenum pname, GLint64 *params) { onutGLAPI.onutMulticastGetQueryObjecti64vNV(gpu, id, pname, params); }
ONUT_FORCE_INLINE void _onutMulticastGetQueryObjectivNV(GLuint gpu, GLuint id, GLenum pname, GLint *params) { onutGLAPI.onutMulticastGetQueryObjectivNV(gpu, id, pname, params); }
ONUT_FORCE_INLINE void _onutMulticastGetQueryObjectui64vNV(GLuint gpu, GLuint id, GLenum pname, GLuint64 *params) { onutGLAPI.onutMulticastGetQueryObjectui64vNV(gpu, id, pname, params); }
ONUT_FORCE_INLINE void _onutMulticastGetQueryObjectuivNV(GLuint gpu, GLuint id, GLenum pname, GLuint *params) { onutGLAPI.onutMulticastGetQueryObjectuivNV(gpu, id, pname, params); }
ONUT_FORCE_INLINE void _onutMulticastWaitSyncNV(GLuint signalGpu, GLbitfield waitGpuMask) { onutGLAPI.onutMulticastWaitSyncNV(signalGpu, waitGpuMask); }
ONUT_FORCE_INLINE void _onutNamedBufferData(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage) { onutGLAPI.onutNamedBufferData(buffer, size, data, usage); }
ONUT_FORCE_INLINE void _onutNamedBufferDataEXT(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage) { onutGLAPI.onutNamedBufferDataEXT(buffer, size, data, usage); }
ONUT_FORCE_INLINE void _onutNamedBufferPageCommitmentARB(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit) { onutGLAPI.onutNamedBufferPageCommitmentARB(buffer, offset, size, commit); }
ONUT_FORCE_INLINE void _onutNamedBufferPageCommitmentEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit) { onutGLAPI.onutNamedBufferPageCommitmentEXT(buffer, offset, size, commit); }
ONUT_FORCE_INLINE void _onutNamedBufferStorage(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags) { onutGLAPI.onutNamedBufferStorage(buffer, size, data, flags); }
ONUT_FORCE_INLINE void _onutNamedBufferStorageEXT(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags) { onutGLAPI.onutNamedBufferStorageEXT(buffer, size, data, flags); }
ONUT_FORCE_INLINE void _onutNamedBufferStorageExternalEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags) { onutGLAPI.onutNamedBufferStorageExternalEXT(buffer, offset, size, clientBuffer, flags); }
ONUT_FORCE_INLINE void _onutNamedBufferStorageMemEXT(GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset) { onutGLAPI.onutNamedBufferStorageMemEXT(buffer, size, memory, offset); }
ONUT_FORCE_INLINE void _onutNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data) { onutGLAPI.onutNamedBufferSubData(buffer, offset, size, data); }
ONUT_FORCE_INLINE void _onutNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data) { onutGLAPI.onutNamedBufferSubDataEXT(buffer, offset, size, data); }
ONUT_FORCE_INLINE void _onutNamedCopyBufferSubDataEXT(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) { onutGLAPI.onutNamedCopyBufferSubDataEXT(readBuffer, writeBuffer, readOffset, writeOffset, size); }
ONUT_FORCE_INLINE void _onutNamedFramebufferDrawBuffer(GLuint framebuffer, GLenum buf) { onutGLAPI.onutNamedFramebufferDrawBuffer(framebuffer, buf); }
ONUT_FORCE_INLINE void _onutNamedFramebufferDrawBuffers(GLuint framebuffer, GLsizei n, const GLenum *bufs) { onutGLAPI.onutNamedFramebufferDrawBuffers(framebuffer, n, bufs); }
ONUT_FORCE_INLINE void _onutNamedFramebufferParameteri(GLuint framebuffer, GLenum pname, GLint param) { onutGLAPI.onutNamedFramebufferParameteri(framebuffer, pname, param); }
ONUT_FORCE_INLINE void _onutNamedFramebufferParameteriEXT(GLuint framebuffer, GLenum pname, GLint param) { onutGLAPI.onutNamedFramebufferParameteriEXT(framebuffer, pname, param); }
ONUT_FORCE_INLINE void _onutNamedFramebufferReadBuffer(GLuint framebuffer, GLenum src) { onutGLAPI.onutNamedFramebufferReadBuffer(framebuffer, src); }
ONUT_FORCE_INLINE void _onutNamedFramebufferRenderbuffer(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) { onutGLAPI.onutNamedFramebufferRenderbuffer(framebuffer, attachment, renderbuffertarget, renderbuffer); }
ONUT_FORCE_INLINE void _onutNamedFramebufferRenderbufferEXT(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) { onutGLAPI.onutNamedFramebufferRenderbufferEXT(framebuffer, attachment, renderbuffertarget, renderbuffer); }
ONUT_FORCE_INLINE void _onutNamedFramebufferSampleLocationsfvARB(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v) { onutGLAPI.onutNamedFramebufferSampleLocationsfvARB(framebuffer, start, count, v); }
ONUT_FORCE_INLINE void _onutNamedFramebufferSampleLocationsfvNV(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v) { onutGLAPI.onutNamedFramebufferSampleLocationsfvNV(framebuffer, start, count, v); }
ONUT_FORCE_INLINE void _onutNamedFramebufferSamplePositionsfvAMD(GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat *values) { onutGLAPI.onutNamedFramebufferSamplePositionsfvAMD(framebuffer, numsamples, pixelindex, values); }
ONUT_FORCE_INLINE void _onutNamedFramebufferTexture(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level) { onutGLAPI.onutNamedFramebufferTexture(framebuffer, attachment, texture, level); }
ONUT_FORCE_INLINE void _onutNamedFramebufferTexture1DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level) { onutGLAPI.onutNamedFramebufferTexture1DEXT(framebuffer, attachment, textarget, texture, level); }
ONUT_FORCE_INLINE void _onutNamedFramebufferTexture2DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level) { onutGLAPI.onutNamedFramebufferTexture2DEXT(framebuffer, attachment, textarget, texture, level); }
ONUT_FORCE_INLINE void _onutNamedFramebufferTexture3DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) { onutGLAPI.onutNamedFramebufferTexture3DEXT(framebuffer, attachment, textarget, texture, level, zoffset); }
ONUT_FORCE_INLINE void _onutNamedFramebufferTextureEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level) { onutGLAPI.onutNamedFramebufferTextureEXT(framebuffer, attachment, texture, level); }
ONUT_FORCE_INLINE void _onutNamedFramebufferTextureFaceEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face) { onutGLAPI.onutNamedFramebufferTextureFaceEXT(framebuffer, attachment, texture, level, face); }
ONUT_FORCE_INLINE void _onutNamedFramebufferTextureLayer(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer) { onutGLAPI.onutNamedFramebufferTextureLayer(framebuffer, attachment, texture, level, layer); }
ONUT_FORCE_INLINE void _onutNamedFramebufferTextureLayerEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer) { onutGLAPI.onutNamedFramebufferTextureLayerEXT(framebuffer, attachment, texture, level, layer); }
ONUT_FORCE_INLINE void _onutNamedProgramLocalParameter4dEXT(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutNamedProgramLocalParameter4dEXT(program, target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutNamedProgramLocalParameter4dvEXT(GLuint program, GLenum target, GLuint index, const GLdouble *params) { onutGLAPI.onutNamedProgramLocalParameter4dvEXT(program, target, index, params); }
ONUT_FORCE_INLINE void _onutNamedProgramLocalParameter4fEXT(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) { onutGLAPI.onutNamedProgramLocalParameter4fEXT(program, target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutNamedProgramLocalParameter4fvEXT(GLuint program, GLenum target, GLuint index, const GLfloat *params) { onutGLAPI.onutNamedProgramLocalParameter4fvEXT(program, target, index, params); }
ONUT_FORCE_INLINE void _onutNamedProgramLocalParameterI4iEXT(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w) { onutGLAPI.onutNamedProgramLocalParameterI4iEXT(program, target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutNamedProgramLocalParameterI4ivEXT(GLuint program, GLenum target, GLuint index, const GLint *params) { onutGLAPI.onutNamedProgramLocalParameterI4ivEXT(program, target, index, params); }
ONUT_FORCE_INLINE void _onutNamedProgramLocalParameterI4uiEXT(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) { onutGLAPI.onutNamedProgramLocalParameterI4uiEXT(program, target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutNamedProgramLocalParameterI4uivEXT(GLuint program, GLenum target, GLuint index, const GLuint *params) { onutGLAPI.onutNamedProgramLocalParameterI4uivEXT(program, target, index, params); }
ONUT_FORCE_INLINE void _onutNamedProgramLocalParameters4fvEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params) { onutGLAPI.onutNamedProgramLocalParameters4fvEXT(program, target, index, count, params); }
ONUT_FORCE_INLINE void _onutNamedProgramLocalParametersI4ivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params) { onutGLAPI.onutNamedProgramLocalParametersI4ivEXT(program, target, index, count, params); }
ONUT_FORCE_INLINE void _onutNamedProgramLocalParametersI4uivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params) { onutGLAPI.onutNamedProgramLocalParametersI4uivEXT(program, target, index, count, params); }
ONUT_FORCE_INLINE void _onutNamedProgramStringEXT(GLuint program, GLenum target, GLenum format, GLsizei len, const void *string) { onutGLAPI.onutNamedProgramStringEXT(program, target, format, len, string); }
ONUT_FORCE_INLINE void _onutNamedRenderbufferStorage(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutNamedRenderbufferStorage(renderbuffer, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutNamedRenderbufferStorageEXT(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutNamedRenderbufferStorageEXT(renderbuffer, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutNamedRenderbufferStorageMultisample(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutNamedRenderbufferStorageMultisample(renderbuffer, samples, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutNamedRenderbufferStorageMultisampleCoverageEXT(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer, coverageSamples, colorSamples, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutNamedRenderbufferStorageMultisampleEXT(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutNamedRenderbufferStorageMultisampleEXT(renderbuffer, samples, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutNamedStringARB(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string) { onutGLAPI.onutNamedStringARB(type, namelen, name, stringlen, string); }
ONUT_FORCE_INLINE GLuint _onutNewBufferRegion(GLenum region) { return onutGLAPI.onutNewBufferRegion(region); }
ONUT_FORCE_INLINE GLuint _onutNewObjectBufferATI(GLsizei size, const void *pointer, GLenum usage) { return onutGLAPI.onutNewObjectBufferATI(size, pointer, usage); }
ONUT_FORCE_INLINE void _onutNormal3fVertex3fSUN(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutNormal3fVertex3fSUN(nx, ny, nz, x, y, z); }
ONUT_FORCE_INLINE void _onutNormal3fVertex3fvSUN(const GLfloat *n, const GLfloat *v) { onutGLAPI.onutNormal3fVertex3fvSUN(n, v); }
ONUT_FORCE_INLINE void _onutNormal3hNV(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz) { onutGLAPI.onutNormal3hNV(nx, ny, nz); }
ONUT_FORCE_INLINE void _onutNormal3hvNV(const GLhalfNV *v) { onutGLAPI.onutNormal3hvNV(v); }
ONUT_FORCE_INLINE void _onutNormal3xOES(GLfixed nx, GLfixed ny, GLfixed nz) { onutGLAPI.onutNormal3xOES(nx, ny, nz); }
ONUT_FORCE_INLINE void _onutNormal3xvOES(const GLfixed *coords) { onutGLAPI.onutNormal3xvOES(coords); }
ONUT_FORCE_INLINE void _onutNormalFormatNV(GLenum type, GLsizei stride) { onutGLAPI.onutNormalFormatNV(type, stride); }
ONUT_FORCE_INLINE void _onutNormalP3ui(GLenum type, GLuint coords) { onutGLAPI.onutNormalP3ui(type, coords); }
ONUT_FORCE_INLINE void _onutNormalP3uiv(GLenum type, const GLuint *coords) { onutGLAPI.onutNormalP3uiv(type, coords); }
ONUT_FORCE_INLINE void _onutNormalPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void *pointer) { onutGLAPI.onutNormalPointerEXT(type, stride, count, pointer); }
ONUT_FORCE_INLINE void _onutNormalPointerListIBM(GLenum type, GLint stride, const void **pointer, GLint ptrstride) { onutGLAPI.onutNormalPointerListIBM(type, stride, pointer, ptrstride); }
ONUT_FORCE_INLINE void _onutNormalPointervINTEL(GLenum type, const void **pointer) { onutGLAPI.onutNormalPointervINTEL(type, pointer); }
ONUT_FORCE_INLINE void _onutNormalStream3bATI(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz) { onutGLAPI.onutNormalStream3bATI(stream, nx, ny, nz); }
ONUT_FORCE_INLINE void _onutNormalStream3bvATI(GLenum stream, const GLbyte *coords) { onutGLAPI.onutNormalStream3bvATI(stream, coords); }
ONUT_FORCE_INLINE void _onutNormalStream3dATI(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz) { onutGLAPI.onutNormalStream3dATI(stream, nx, ny, nz); }
ONUT_FORCE_INLINE void _onutNormalStream3dvATI(GLenum stream, const GLdouble *coords) { onutGLAPI.onutNormalStream3dvATI(stream, coords); }
ONUT_FORCE_INLINE void _onutNormalStream3fATI(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz) { onutGLAPI.onutNormalStream3fATI(stream, nx, ny, nz); }
ONUT_FORCE_INLINE void _onutNormalStream3fvATI(GLenum stream, const GLfloat *coords) { onutGLAPI.onutNormalStream3fvATI(stream, coords); }
ONUT_FORCE_INLINE void _onutNormalStream3iATI(GLenum stream, GLint nx, GLint ny, GLint nz) { onutGLAPI.onutNormalStream3iATI(stream, nx, ny, nz); }
ONUT_FORCE_INLINE void _onutNormalStream3ivATI(GLenum stream, const GLint *coords) { onutGLAPI.onutNormalStream3ivATI(stream, coords); }
ONUT_FORCE_INLINE void _onutNormalStream3sATI(GLenum stream, GLshort nx, GLshort ny, GLshort nz) { onutGLAPI.onutNormalStream3sATI(stream, nx, ny, nz); }
ONUT_FORCE_INLINE void _onutNormalStream3svATI(GLenum stream, const GLshort *coords) { onutGLAPI.onutNormalStream3svATI(stream, coords); }
ONUT_FORCE_INLINE void _onutObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar *label) { onutGLAPI.onutObjectLabel(identifier, name, length, label); }
ONUT_FORCE_INLINE void _onutObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar *label) { onutGLAPI.onutObjectLabelKHR(identifier, name, length, label); }
ONUT_FORCE_INLINE void _onutObjectPtrLabel(const void *ptr, GLsizei length, const GLchar *label) { onutGLAPI.onutObjectPtrLabel(ptr, length, label); }
ONUT_FORCE_INLINE void _onutObjectPtrLabelKHR(const void *ptr, GLsizei length, const GLchar *label) { onutGLAPI.onutObjectPtrLabelKHR(ptr, length, label); }
ONUT_FORCE_INLINE GLenum _onutObjectPurgeableAPPLE(GLenum objectType, GLuint name, GLenum option) { return onutGLAPI.onutObjectPurgeableAPPLE(objectType, name, option); }
ONUT_FORCE_INLINE GLenum _onutObjectUnpurgeableAPPLE(GLenum objectType, GLuint name, GLenum option) { return onutGLAPI.onutObjectUnpurgeableAPPLE(objectType, name, option); }
ONUT_FORCE_INLINE void _onutOrthofOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f) { onutGLAPI.onutOrthofOES(l, r, b, t, n, f); }
ONUT_FORCE_INLINE void _onutOrthoxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f) { onutGLAPI.onutOrthoxOES(l, r, b, t, n, f); }
ONUT_FORCE_INLINE void _onutPNTrianglesfATI(GLenum pname, GLfloat param) { onutGLAPI.onutPNTrianglesfATI(pname, param); }
ONUT_FORCE_INLINE void _onutPNTrianglesiATI(GLenum pname, GLint param) { onutGLAPI.onutPNTrianglesiATI(pname, param); }
ONUT_FORCE_INLINE void _onutPassTexCoordATI(GLuint dst, GLuint coord, GLenum swizzle) { onutGLAPI.onutPassTexCoordATI(dst, coord, swizzle); }
ONUT_FORCE_INLINE void _onutPassThroughxOES(GLfixed token) { onutGLAPI.onutPassThroughxOES(token); }
ONUT_FORCE_INLINE void _onutPatchParameterfv(GLenum pname, const GLfloat *values) { onutGLAPI.onutPatchParameterfv(pname, values); }
ONUT_FORCE_INLINE void _onutPatchParameteri(GLenum pname, GLint value) { onutGLAPI.onutPatchParameteri(pname, value); }
ONUT_FORCE_INLINE void _onutPatchParameteriEXT(GLenum pname, GLint value) { onutGLAPI.onutPatchParameteriEXT(pname, value); }
ONUT_FORCE_INLINE void _onutPatchParameteriOES(GLenum pname, GLint value) { onutGLAPI.onutPatchParameteriOES(pname, value); }
ONUT_FORCE_INLINE void _onutPathColorGenNV(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs) { onutGLAPI.onutPathColorGenNV(color, genMode, colorFormat, coeffs); }
ONUT_FORCE_INLINE void _onutPathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords) { onutGLAPI.onutPathCommandsNV(path, numCommands, commands, numCoords, coordType, coords); }
ONUT_FORCE_INLINE void _onutPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords) { onutGLAPI.onutPathCoordsNV(path, numCoords, coordType, coords); }
ONUT_FORCE_INLINE void _onutPathCoverDepthFuncNV(GLenum func) { onutGLAPI.onutPathCoverDepthFuncNV(func); }
ONUT_FORCE_INLINE void _onutPathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat *dashArray) { onutGLAPI.onutPathDashArrayNV(path, dashCount, dashArray); }
ONUT_FORCE_INLINE void _onutPathFogGenNV(GLenum genMode) { onutGLAPI.onutPathFogGenNV(genMode); }
ONUT_FORCE_INLINE GLenum _onutPathGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale) { return onutGLAPI.onutPathGlyphIndexArrayNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale); }
ONUT_FORCE_INLINE GLenum _onutPathGlyphIndexRangeNV(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]) { return onutGLAPI.onutPathGlyphIndexRangeNV(fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount); }
ONUT_FORCE_INLINE void _onutPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale) { onutGLAPI.onutPathGlyphRangeNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale); }
ONUT_FORCE_INLINE void _onutPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale) { onutGLAPI.onutPathGlyphsNV(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale); }
ONUT_FORCE_INLINE GLenum _onutPathMemoryGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale) { return onutGLAPI.onutPathMemoryGlyphIndexArrayNV(firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale); }
ONUT_FORCE_INLINE void _onutPathParameterfNV(GLuint path, GLenum pname, GLfloat value) { onutGLAPI.onutPathParameterfNV(path, pname, value); }
ONUT_FORCE_INLINE void _onutPathParameterfvNV(GLuint path, GLenum pname, const GLfloat *value) { onutGLAPI.onutPathParameterfvNV(path, pname, value); }
ONUT_FORCE_INLINE void _onutPathParameteriNV(GLuint path, GLenum pname, GLint value) { onutGLAPI.onutPathParameteriNV(path, pname, value); }
ONUT_FORCE_INLINE void _onutPathParameterivNV(GLuint path, GLenum pname, const GLint *value) { onutGLAPI.onutPathParameterivNV(path, pname, value); }
ONUT_FORCE_INLINE void _onutPathStencilDepthOffsetNV(GLfloat factor, GLfloat units) { onutGLAPI.onutPathStencilDepthOffsetNV(factor, units); }
ONUT_FORCE_INLINE void _onutPathStencilFuncNV(GLenum func, GLint ref, GLuint mask) { onutGLAPI.onutPathStencilFuncNV(func, ref, mask); }
ONUT_FORCE_INLINE void _onutPathStringNV(GLuint path, GLenum format, GLsizei length, const void *pathString) { onutGLAPI.onutPathStringNV(path, format, length, pathString); }
ONUT_FORCE_INLINE void _onutPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords) { onutGLAPI.onutPathSubCommandsNV(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords); }
ONUT_FORCE_INLINE void _onutPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords) { onutGLAPI.onutPathSubCoordsNV(path, coordStart, numCoords, coordType, coords); }
ONUT_FORCE_INLINE void _onutPathTexGenNV(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs) { onutGLAPI.onutPathTexGenNV(texCoordSet, genMode, components, coeffs); }
ONUT_FORCE_INLINE void _onutPauseTransformFeedback(void) { onutGLAPI.onutPauseTransformFeedback(); }
ONUT_FORCE_INLINE void _onutPauseTransformFeedbackNV(void) { onutGLAPI.onutPauseTransformFeedbackNV(); }
ONUT_FORCE_INLINE void _onutPixelDataRangeNV(GLenum target, GLsizei length, const void *pointer) { onutGLAPI.onutPixelDataRangeNV(target, length, pointer); }
ONUT_FORCE_INLINE void _onutPixelMapx(GLenum map, GLint size, const GLfixed *values) { onutGLAPI.onutPixelMapx(map, size, values); }
ONUT_FORCE_INLINE void _onutPixelStoref(GLenum pname, GLfloat param) { onutGLAPI.onutPixelStoref(pname, param); }
ONUT_FORCE_INLINE void _onutPixelStorei(GLenum pname, GLint param) { onutGLAPI.onutPixelStorei(pname, param); }
ONUT_FORCE_INLINE void _onutPixelStorex(GLenum pname, GLfixed param) { onutGLAPI.onutPixelStorex(pname, param); }
ONUT_FORCE_INLINE void _onutPixelTexGenParameterfSGIS(GLenum pname, GLfloat param) { onutGLAPI.onutPixelTexGenParameterfSGIS(pname, param); }
ONUT_FORCE_INLINE void _onutPixelTexGenParameterfvSGIS(GLenum pname, const GLfloat *params) { onutGLAPI.onutPixelTexGenParameterfvSGIS(pname, params); }
ONUT_FORCE_INLINE void _onutPixelTexGenParameteriSGIS(GLenum pname, GLint param) { onutGLAPI.onutPixelTexGenParameteriSGIS(pname, param); }
ONUT_FORCE_INLINE void _onutPixelTexGenParameterivSGIS(GLenum pname, const GLint *params) { onutGLAPI.onutPixelTexGenParameterivSGIS(pname, params); }
ONUT_FORCE_INLINE void _onutPixelTexGenSGIX(GLenum mode) { onutGLAPI.onutPixelTexGenSGIX(mode); }
ONUT_FORCE_INLINE void _onutPixelTransferxOES(GLenum pname, GLfixed param) { onutGLAPI.onutPixelTransferxOES(pname, param); }
ONUT_FORCE_INLINE void _onutPixelTransformParameterfEXT(GLenum target, GLenum pname, GLfloat param) { onutGLAPI.onutPixelTransformParameterfEXT(target, pname, param); }
ONUT_FORCE_INLINE void _onutPixelTransformParameterfvEXT(GLenum target, GLenum pname, const GLfloat *params) { onutGLAPI.onutPixelTransformParameterfvEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutPixelTransformParameteriEXT(GLenum target, GLenum pname, GLint param) { onutGLAPI.onutPixelTransformParameteriEXT(target, pname, param); }
ONUT_FORCE_INLINE void _onutPixelTransformParameterivEXT(GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutPixelTransformParameterivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutPixelZoomxOES(GLfixed xfactor, GLfixed yfactor) { onutGLAPI.onutPixelZoomxOES(xfactor, yfactor); }
ONUT_FORCE_INLINE GLboolean _onutPointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY) { return onutGLAPI.onutPointAlongPathNV(path, startSegment, numSegments, distance, x, y, tangentX, tangentY); }
ONUT_FORCE_INLINE void _onutPointParameterf(GLenum pname, GLfloat param) { onutGLAPI.onutPointParameterf(pname, param); }
ONUT_FORCE_INLINE void _onutPointParameterfARB(GLenum pname, GLfloat param) { onutGLAPI.onutPointParameterfARB(pname, param); }
ONUT_FORCE_INLINE void _onutPointParameterfEXT(GLenum pname, GLfloat param) { onutGLAPI.onutPointParameterfEXT(pname, param); }
ONUT_FORCE_INLINE void _onutPointParameterfSGIS(GLenum pname, GLfloat param) { onutGLAPI.onutPointParameterfSGIS(pname, param); }
ONUT_FORCE_INLINE void _onutPointParameterfv(GLenum pname, const GLfloat *params) { onutGLAPI.onutPointParameterfv(pname, params); }
ONUT_FORCE_INLINE void _onutPointParameterfvARB(GLenum pname, const GLfloat *params) { onutGLAPI.onutPointParameterfvARB(pname, params); }
ONUT_FORCE_INLINE void _onutPointParameterfvEXT(GLenum pname, const GLfloat *params) { onutGLAPI.onutPointParameterfvEXT(pname, params); }
ONUT_FORCE_INLINE void _onutPointParameterfvSGIS(GLenum pname, const GLfloat *params) { onutGLAPI.onutPointParameterfvSGIS(pname, params); }
ONUT_FORCE_INLINE void _onutPointParameteri(GLenum pname, GLint param) { onutGLAPI.onutPointParameteri(pname, param); }
ONUT_FORCE_INLINE void _onutPointParameteriNV(GLenum pname, GLint param) { onutGLAPI.onutPointParameteriNV(pname, param); }
ONUT_FORCE_INLINE void _onutPointParameteriv(GLenum pname, const GLint *params) { onutGLAPI.onutPointParameteriv(pname, params); }
ONUT_FORCE_INLINE void _onutPointParameterivNV(GLenum pname, const GLint *params) { onutGLAPI.onutPointParameterivNV(pname, params); }
ONUT_FORCE_INLINE void _onutPointParameterxvOES(GLenum pname, const GLfixed *params) { onutGLAPI.onutPointParameterxvOES(pname, params); }
ONUT_FORCE_INLINE void _onutPointSize(GLfloat size) { onutGLAPI.onutPointSize(size); }
ONUT_FORCE_INLINE void _onutPointSizexOES(GLfixed size) { onutGLAPI.onutPointSizexOES(size); }
ONUT_FORCE_INLINE GLint _onutPollAsyncSGIX(GLuint *markerp) { return onutGLAPI.onutPollAsyncSGIX(markerp); }
ONUT_FORCE_INLINE GLint _onutPollInstrumentsSGIX(GLint *marker_p) { return onutGLAPI.onutPollInstrumentsSGIX(marker_p); }
ONUT_FORCE_INLINE void _onutPolygonMode(GLenum face, GLenum mode) { onutGLAPI.onutPolygonMode(face, mode); }
ONUT_FORCE_INLINE void _onutPolygonModeNV(GLenum face, GLenum mode) { onutGLAPI.onutPolygonModeNV(face, mode); }
ONUT_FORCE_INLINE void _onutPolygonOffset(GLfloat factor, GLfloat units) { onutGLAPI.onutPolygonOffset(factor, units); }
ONUT_FORCE_INLINE void _onutPolygonOffsetClampEXT(GLfloat factor, GLfloat units, GLfloat clamp) { onutGLAPI.onutPolygonOffsetClampEXT(factor, units, clamp); }
ONUT_FORCE_INLINE void _onutPolygonOffsetEXT(GLfloat factor, GLfloat bias) { onutGLAPI.onutPolygonOffsetEXT(factor, bias); }
ONUT_FORCE_INLINE void _onutPolygonOffsetxOES(GLfixed factor, GLfixed units) { onutGLAPI.onutPolygonOffsetxOES(factor, units); }
ONUT_FORCE_INLINE void _onutPopDebugGroup(void) { onutGLAPI.onutPopDebugGroup(); }
ONUT_FORCE_INLINE void _onutPopDebugGroupKHR(void) { onutGLAPI.onutPopDebugGroupKHR(); }
ONUT_FORCE_INLINE void _onutPopGroupMarkerEXT(void) { onutGLAPI.onutPopGroupMarkerEXT(); }
ONUT_FORCE_INLINE void _onutPresentFrameDualFillNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3) { onutGLAPI.onutPresentFrameDualFillNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3); }
ONUT_FORCE_INLINE void _onutPresentFrameKeyedNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1) { onutGLAPI.onutPresentFrameKeyedNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1); }
ONUT_FORCE_INLINE void _onutPrimitiveBoundingBox(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW) { onutGLAPI.onutPrimitiveBoundingBox(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW); }
ONUT_FORCE_INLINE void _onutPrimitiveBoundingBoxARB(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW) { onutGLAPI.onutPrimitiveBoundingBoxARB(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW); }
ONUT_FORCE_INLINE void _onutPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW) { onutGLAPI.onutPrimitiveBoundingBoxEXT(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW); }
ONUT_FORCE_INLINE void _onutPrimitiveBoundingBoxOES(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW) { onutGLAPI.onutPrimitiveBoundingBoxOES(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW); }
ONUT_FORCE_INLINE void _onutPrimitiveRestartIndex(GLuint index) { onutGLAPI.onutPrimitiveRestartIndex(index); }
ONUT_FORCE_INLINE void _onutPrimitiveRestartIndexNV(GLuint index) { onutGLAPI.onutPrimitiveRestartIndexNV(index); }
ONUT_FORCE_INLINE void _onutPrimitiveRestartNV(void) { onutGLAPI.onutPrimitiveRestartNV(); }
ONUT_FORCE_INLINE void _onutPrioritizeTexturesEXT(GLsizei n, const GLuint *textures, const GLclampf *priorities) { onutGLAPI.onutPrioritizeTexturesEXT(n, textures, priorities); }
ONUT_FORCE_INLINE void _onutPrioritizeTexturesxOES(GLsizei n, const GLuint *textures, const GLfixed *priorities) { onutGLAPI.onutPrioritizeTexturesxOES(n, textures, priorities); }
ONUT_FORCE_INLINE void _onutProgramBinary(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length) { onutGLAPI.onutProgramBinary(program, binaryFormat, binary, length); }
ONUT_FORCE_INLINE void _onutProgramBinaryOES(GLuint program, GLenum binaryFormat, const void *binary, GLint length) { onutGLAPI.onutProgramBinaryOES(program, binaryFormat, binary, length); }
ONUT_FORCE_INLINE void _onutProgramBufferParametersIivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params) { onutGLAPI.onutProgramBufferParametersIivNV(target, bindingIndex, wordIndex, count, params); }
ONUT_FORCE_INLINE void _onutProgramBufferParametersIuivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params) { onutGLAPI.onutProgramBufferParametersIuivNV(target, bindingIndex, wordIndex, count, params); }
ONUT_FORCE_INLINE void _onutProgramBufferParametersfvNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params) { onutGLAPI.onutProgramBufferParametersfvNV(target, bindingIndex, wordIndex, count, params); }
ONUT_FORCE_INLINE void _onutProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutProgramEnvParameter4dARB(target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble *params) { onutGLAPI.onutProgramEnvParameter4dvARB(target, index, params); }
ONUT_FORCE_INLINE void _onutProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) { onutGLAPI.onutProgramEnvParameter4fARB(target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat *params) { onutGLAPI.onutProgramEnvParameter4fvARB(target, index, params); }
ONUT_FORCE_INLINE void _onutProgramEnvParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w) { onutGLAPI.onutProgramEnvParameterI4iNV(target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramEnvParameterI4ivNV(GLenum target, GLuint index, const GLint *params) { onutGLAPI.onutProgramEnvParameterI4ivNV(target, index, params); }
ONUT_FORCE_INLINE void _onutProgramEnvParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) { onutGLAPI.onutProgramEnvParameterI4uiNV(target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramEnvParameterI4uivNV(GLenum target, GLuint index, const GLuint *params) { onutGLAPI.onutProgramEnvParameterI4uivNV(target, index, params); }
ONUT_FORCE_INLINE void _onutProgramEnvParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params) { onutGLAPI.onutProgramEnvParameters4fvEXT(target, index, count, params); }
ONUT_FORCE_INLINE void _onutProgramEnvParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint *params) { onutGLAPI.onutProgramEnvParametersI4ivNV(target, index, count, params); }
ONUT_FORCE_INLINE void _onutProgramEnvParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint *params) { onutGLAPI.onutProgramEnvParametersI4uivNV(target, index, count, params); }
ONUT_FORCE_INLINE void _onutProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutProgramLocalParameter4dARB(target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble *params) { onutGLAPI.onutProgramLocalParameter4dvARB(target, index, params); }
ONUT_FORCE_INLINE void _onutProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) { onutGLAPI.onutProgramLocalParameter4fARB(target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat *params) { onutGLAPI.onutProgramLocalParameter4fvARB(target, index, params); }
ONUT_FORCE_INLINE void _onutProgramLocalParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w) { onutGLAPI.onutProgramLocalParameterI4iNV(target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramLocalParameterI4ivNV(GLenum target, GLuint index, const GLint *params) { onutGLAPI.onutProgramLocalParameterI4ivNV(target, index, params); }
ONUT_FORCE_INLINE void _onutProgramLocalParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) { onutGLAPI.onutProgramLocalParameterI4uiNV(target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramLocalParameterI4uivNV(GLenum target, GLuint index, const GLuint *params) { onutGLAPI.onutProgramLocalParameterI4uivNV(target, index, params); }
ONUT_FORCE_INLINE void _onutProgramLocalParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params) { onutGLAPI.onutProgramLocalParameters4fvEXT(target, index, count, params); }
ONUT_FORCE_INLINE void _onutProgramLocalParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint *params) { onutGLAPI.onutProgramLocalParametersI4ivNV(target, index, count, params); }
ONUT_FORCE_INLINE void _onutProgramLocalParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint *params) { onutGLAPI.onutProgramLocalParametersI4uivNV(target, index, count, params); }
ONUT_FORCE_INLINE void _onutProgramNamedParameter4dNV(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutProgramNamedParameter4dNV(id, len, name, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramNamedParameter4dvNV(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v) { onutGLAPI.onutProgramNamedParameter4dvNV(id, len, name, v); }
ONUT_FORCE_INLINE void _onutProgramNamedParameter4fNV(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w) { onutGLAPI.onutProgramNamedParameter4fNV(id, len, name, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramNamedParameter4fvNV(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v) { onutGLAPI.onutProgramNamedParameter4fvNV(id, len, name, v); }
ONUT_FORCE_INLINE void _onutProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutProgramParameter4dNV(target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramParameter4dvNV(GLenum target, GLuint index, const GLdouble *v) { onutGLAPI.onutProgramParameter4dvNV(target, index, v); }
ONUT_FORCE_INLINE void _onutProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) { onutGLAPI.onutProgramParameter4fNV(target, index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramParameter4fvNV(GLenum target, GLuint index, const GLfloat *v) { onutGLAPI.onutProgramParameter4fvNV(target, index, v); }
ONUT_FORCE_INLINE void _onutProgramParameteri(GLuint program, GLenum pname, GLint value) { onutGLAPI.onutProgramParameteri(program, pname, value); }
ONUT_FORCE_INLINE void _onutProgramParameteriARB(GLuint program, GLenum pname, GLint value) { onutGLAPI.onutProgramParameteriARB(program, pname, value); }
ONUT_FORCE_INLINE void _onutProgramParameteriEXT(GLuint program, GLenum pname, GLint value) { onutGLAPI.onutProgramParameteriEXT(program, pname, value); }
ONUT_FORCE_INLINE void _onutProgramParameters4dvNV(GLenum target, GLuint index, GLsizei count, const GLdouble *v) { onutGLAPI.onutProgramParameters4dvNV(target, index, count, v); }
ONUT_FORCE_INLINE void _onutProgramParameters4fvNV(GLenum target, GLuint index, GLsizei count, const GLfloat *v) { onutGLAPI.onutProgramParameters4fvNV(target, index, count, v); }
ONUT_FORCE_INLINE void _onutProgramPathFragmentInputGenNV(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs) { onutGLAPI.onutProgramPathFragmentInputGenNV(program, location, genMode, components, coeffs); }
ONUT_FORCE_INLINE void _onutProgramStringARB(GLenum target, GLenum format, GLsizei len, const void *string) { onutGLAPI.onutProgramStringARB(target, format, len, string); }
ONUT_FORCE_INLINE void _onutProgramSubroutineParametersuivNV(GLenum target, GLsizei count, const GLuint *params) { onutGLAPI.onutProgramSubroutineParametersuivNV(target, count, params); }
ONUT_FORCE_INLINE void _onutProgramUniform1d(GLuint program, GLint location, GLdouble v0) { onutGLAPI.onutProgramUniform1d(program, location, v0); }
ONUT_FORCE_INLINE void _onutProgramUniform1dEXT(GLuint program, GLint location, GLdouble x) { onutGLAPI.onutProgramUniform1dEXT(program, location, x); }
ONUT_FORCE_INLINE void _onutProgramUniform1dv(GLuint program, GLint location, GLsizei count, const GLdouble *value) { onutGLAPI.onutProgramUniform1dv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform1dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value) { onutGLAPI.onutProgramUniform1dvEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform1f(GLuint program, GLint location, GLfloat v0) { onutGLAPI.onutProgramUniform1f(program, location, v0); }
ONUT_FORCE_INLINE void _onutProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0) { onutGLAPI.onutProgramUniform1fEXT(program, location, v0); }
ONUT_FORCE_INLINE void _onutProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutProgramUniform1fv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutProgramUniform1fvEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform1i(GLuint program, GLint location, GLint v0) { onutGLAPI.onutProgramUniform1i(program, location, v0); }
ONUT_FORCE_INLINE void _onutProgramUniform1i64ARB(GLuint program, GLint location, GLint64 x) { onutGLAPI.onutProgramUniform1i64ARB(program, location, x); }
ONUT_FORCE_INLINE void _onutProgramUniform1i64NV(GLuint program, GLint location, GLint64EXT x) { onutGLAPI.onutProgramUniform1i64NV(program, location, x); }
ONUT_FORCE_INLINE void _onutProgramUniform1i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value) { onutGLAPI.onutProgramUniform1i64vARB(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform1i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value) { onutGLAPI.onutProgramUniform1i64vNV(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform1iEXT(GLuint program, GLint location, GLint v0) { onutGLAPI.onutProgramUniform1iEXT(program, location, v0); }
ONUT_FORCE_INLINE void _onutProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutProgramUniform1iv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutProgramUniform1ivEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform1ui(GLuint program, GLint location, GLuint v0) { onutGLAPI.onutProgramUniform1ui(program, location, v0); }
ONUT_FORCE_INLINE void _onutProgramUniform1ui64ARB(GLuint program, GLint location, GLuint64 x) { onutGLAPI.onutProgramUniform1ui64ARB(program, location, x); }
ONUT_FORCE_INLINE void _onutProgramUniform1ui64NV(GLuint program, GLint location, GLuint64EXT x) { onutGLAPI.onutProgramUniform1ui64NV(program, location, x); }
ONUT_FORCE_INLINE void _onutProgramUniform1ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value) { onutGLAPI.onutProgramUniform1ui64vARB(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform1ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value) { onutGLAPI.onutProgramUniform1ui64vNV(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0) { onutGLAPI.onutProgramUniform1uiEXT(program, location, v0); }
ONUT_FORCE_INLINE void _onutProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutProgramUniform1uiv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutProgramUniform1uivEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform2d(GLuint program, GLint location, GLdouble v0, GLdouble v1) { onutGLAPI.onutProgramUniform2d(program, location, v0, v1); }
ONUT_FORCE_INLINE void _onutProgramUniform2dEXT(GLuint program, GLint location, GLdouble x, GLdouble y) { onutGLAPI.onutProgramUniform2dEXT(program, location, x, y); }
ONUT_FORCE_INLINE void _onutProgramUniform2dv(GLuint program, GLint location, GLsizei count, const GLdouble *value) { onutGLAPI.onutProgramUniform2dv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform2dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value) { onutGLAPI.onutProgramUniform2dvEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1) { onutGLAPI.onutProgramUniform2f(program, location, v0, v1); }
ONUT_FORCE_INLINE void _onutProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1) { onutGLAPI.onutProgramUniform2fEXT(program, location, v0, v1); }
ONUT_FORCE_INLINE void _onutProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutProgramUniform2fv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutProgramUniform2fvEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1) { onutGLAPI.onutProgramUniform2i(program, location, v0, v1); }
ONUT_FORCE_INLINE void _onutProgramUniform2i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y) { onutGLAPI.onutProgramUniform2i64ARB(program, location, x, y); }
ONUT_FORCE_INLINE void _onutProgramUniform2i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y) { onutGLAPI.onutProgramUniform2i64NV(program, location, x, y); }
ONUT_FORCE_INLINE void _onutProgramUniform2i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value) { onutGLAPI.onutProgramUniform2i64vARB(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform2i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value) { onutGLAPI.onutProgramUniform2i64vNV(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1) { onutGLAPI.onutProgramUniform2iEXT(program, location, v0, v1); }
ONUT_FORCE_INLINE void _onutProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutProgramUniform2iv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutProgramUniform2ivEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1) { onutGLAPI.onutProgramUniform2ui(program, location, v0, v1); }
ONUT_FORCE_INLINE void _onutProgramUniform2ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y) { onutGLAPI.onutProgramUniform2ui64ARB(program, location, x, y); }
ONUT_FORCE_INLINE void _onutProgramUniform2ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y) { onutGLAPI.onutProgramUniform2ui64NV(program, location, x, y); }
ONUT_FORCE_INLINE void _onutProgramUniform2ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value) { onutGLAPI.onutProgramUniform2ui64vARB(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform2ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value) { onutGLAPI.onutProgramUniform2ui64vNV(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1) { onutGLAPI.onutProgramUniform2uiEXT(program, location, v0, v1); }
ONUT_FORCE_INLINE void _onutProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutProgramUniform2uiv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutProgramUniform2uivEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform3d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2) { onutGLAPI.onutProgramUniform3d(program, location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutProgramUniform3dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutProgramUniform3dEXT(program, location, x, y, z); }
ONUT_FORCE_INLINE void _onutProgramUniform3dv(GLuint program, GLint location, GLsizei count, const GLdouble *value) { onutGLAPI.onutProgramUniform3dv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform3dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value) { onutGLAPI.onutProgramUniform3dvEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2) { onutGLAPI.onutProgramUniform3f(program, location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2) { onutGLAPI.onutProgramUniform3fEXT(program, location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutProgramUniform3fv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutProgramUniform3fvEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2) { onutGLAPI.onutProgramUniform3i(program, location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutProgramUniform3i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z) { onutGLAPI.onutProgramUniform3i64ARB(program, location, x, y, z); }
ONUT_FORCE_INLINE void _onutProgramUniform3i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z) { onutGLAPI.onutProgramUniform3i64NV(program, location, x, y, z); }
ONUT_FORCE_INLINE void _onutProgramUniform3i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value) { onutGLAPI.onutProgramUniform3i64vARB(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform3i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value) { onutGLAPI.onutProgramUniform3i64vNV(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2) { onutGLAPI.onutProgramUniform3iEXT(program, location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutProgramUniform3iv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutProgramUniform3ivEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2) { onutGLAPI.onutProgramUniform3ui(program, location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutProgramUniform3ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z) { onutGLAPI.onutProgramUniform3ui64ARB(program, location, x, y, z); }
ONUT_FORCE_INLINE void _onutProgramUniform3ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z) { onutGLAPI.onutProgramUniform3ui64NV(program, location, x, y, z); }
ONUT_FORCE_INLINE void _onutProgramUniform3ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value) { onutGLAPI.onutProgramUniform3ui64vARB(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform3ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value) { onutGLAPI.onutProgramUniform3ui64vNV(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2) { onutGLAPI.onutProgramUniform3uiEXT(program, location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutProgramUniform3uiv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutProgramUniform3uivEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform4d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3) { onutGLAPI.onutProgramUniform4d(program, location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutProgramUniform4dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutProgramUniform4dEXT(program, location, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramUniform4dv(GLuint program, GLint location, GLsizei count, const GLdouble *value) { onutGLAPI.onutProgramUniform4dv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform4dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value) { onutGLAPI.onutProgramUniform4dvEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) { onutGLAPI.onutProgramUniform4f(program, location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) { onutGLAPI.onutProgramUniform4fEXT(program, location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutProgramUniform4fv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutProgramUniform4fvEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3) { onutGLAPI.onutProgramUniform4i(program, location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutProgramUniform4i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w) { onutGLAPI.onutProgramUniform4i64ARB(program, location, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramUniform4i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w) { onutGLAPI.onutProgramUniform4i64NV(program, location, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramUniform4i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value) { onutGLAPI.onutProgramUniform4i64vARB(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform4i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value) { onutGLAPI.onutProgramUniform4i64vNV(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3) { onutGLAPI.onutProgramUniform4iEXT(program, location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutProgramUniform4iv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutProgramUniform4ivEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) { onutGLAPI.onutProgramUniform4ui(program, location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutProgramUniform4ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w) { onutGLAPI.onutProgramUniform4ui64ARB(program, location, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramUniform4ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w) { onutGLAPI.onutProgramUniform4ui64NV(program, location, x, y, z, w); }
ONUT_FORCE_INLINE void _onutProgramUniform4ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value) { onutGLAPI.onutProgramUniform4ui64vARB(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform4ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value) { onutGLAPI.onutProgramUniform4ui64vNV(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) { onutGLAPI.onutProgramUniform4uiEXT(program, location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutProgramUniform4uiv(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutProgramUniform4uivEXT(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramUniformHandleui64ARB(GLuint program, GLint location, GLuint64 value) { onutGLAPI.onutProgramUniformHandleui64ARB(program, location, value); }
ONUT_FORCE_INLINE void _onutProgramUniformHandleui64IMG(GLuint program, GLint location, GLuint64 value) { onutGLAPI.onutProgramUniformHandleui64IMG(program, location, value); }
ONUT_FORCE_INLINE void _onutProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value) { onutGLAPI.onutProgramUniformHandleui64NV(program, location, value); }
ONUT_FORCE_INLINE void _onutProgramUniformHandleui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *values) { onutGLAPI.onutProgramUniformHandleui64vARB(program, location, count, values); }
ONUT_FORCE_INLINE void _onutProgramUniformHandleui64vIMG(GLuint program, GLint location, GLsizei count, const GLuint64 *values) { onutGLAPI.onutProgramUniformHandleui64vIMG(program, location, count, values); }
ONUT_FORCE_INLINE void _onutProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 *values) { onutGLAPI.onutProgramUniformHandleui64vNV(program, location, count, values); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix2dv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix2dvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix2fv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix2fvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix2x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix2x3dv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix2x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix2x3dvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix2x3fv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix2x3fvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix2x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix2x4dv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix2x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix2x4dvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix2x4fv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix2x4fvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix3dv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix3dvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix3fv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix3fvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix3x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix3x2dv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix3x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix3x2dvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix3x2fv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix3x2fvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix3x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix3x4dv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix3x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix3x4dvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix3x4fv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix3x4fvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix4dv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix4dvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix4fv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix4fvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix4x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix4x2dv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix4x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix4x2dvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix4x2fv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix4x2fvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix4x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix4x3dv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix4x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutProgramUniformMatrix4x3dvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix4x3fv(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutProgramUniformMatrix4x3fvEXT(program, location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutProgramUniformui64NV(GLuint program, GLint location, GLuint64EXT value) { onutGLAPI.onutProgramUniformui64NV(program, location, value); }
ONUT_FORCE_INLINE void _onutProgramUniformui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value) { onutGLAPI.onutProgramUniformui64vNV(program, location, count, value); }
ONUT_FORCE_INLINE void _onutProgramVertexLimitNV(GLenum target, GLint limit) { onutGLAPI.onutProgramVertexLimitNV(target, limit); }
ONUT_FORCE_INLINE void _onutProvokingVertex(GLenum mode) { onutGLAPI.onutProvokingVertex(mode); }
ONUT_FORCE_INLINE void _onutProvokingVertexEXT(GLenum mode) { onutGLAPI.onutProvokingVertexEXT(mode); }
ONUT_FORCE_INLINE void _onutPushClientAttribDefaultEXT(GLbitfield mask) { onutGLAPI.onutPushClientAttribDefaultEXT(mask); }
ONUT_FORCE_INLINE void _onutPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar *message) { onutGLAPI.onutPushDebugGroup(source, id, length, message); }
ONUT_FORCE_INLINE void _onutPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar *message) { onutGLAPI.onutPushDebugGroupKHR(source, id, length, message); }
ONUT_FORCE_INLINE void _onutPushGroupMarkerEXT(GLsizei length, const GLchar *marker) { onutGLAPI.onutPushGroupMarkerEXT(length, marker); }
ONUT_FORCE_INLINE void _onutQueryCounter(GLuint id, GLenum target) { onutGLAPI.onutQueryCounter(id, target); }
ONUT_FORCE_INLINE void _onutQueryCounterEXT(GLuint id, GLenum target) { onutGLAPI.onutQueryCounterEXT(id, target); }
ONUT_FORCE_INLINE GLbitfield _onutQueryMatrixxOES(GLfixed *mantissa, GLint *exponent) { return onutGLAPI.onutQueryMatrixxOES(mantissa, exponent); }
ONUT_FORCE_INLINE void _onutQueryObjectParameteruiAMD(GLenum target, GLuint id, GLenum pname, GLuint param) { onutGLAPI.onutQueryObjectParameteruiAMD(target, id, pname, param); }
ONUT_FORCE_INLINE void _onutRasterPos2xOES(GLfixed x, GLfixed y) { onutGLAPI.onutRasterPos2xOES(x, y); }
ONUT_FORCE_INLINE void _onutRasterPos2xvOES(const GLfixed *coords) { onutGLAPI.onutRasterPos2xvOES(coords); }
ONUT_FORCE_INLINE void _onutRasterPos3xOES(GLfixed x, GLfixed y, GLfixed z) { onutGLAPI.onutRasterPos3xOES(x, y, z); }
ONUT_FORCE_INLINE void _onutRasterPos3xvOES(const GLfixed *coords) { onutGLAPI.onutRasterPos3xvOES(coords); }
ONUT_FORCE_INLINE void _onutRasterPos4xOES(GLfixed x, GLfixed y, GLfixed z, GLfixed w) { onutGLAPI.onutRasterPos4xOES(x, y, z, w); }
ONUT_FORCE_INLINE void _onutRasterPos4xvOES(const GLfixed *coords) { onutGLAPI.onutRasterPos4xvOES(coords); }
ONUT_FORCE_INLINE void _onutRasterSamplesEXT(GLuint samples, GLboolean fixedsamplelocations) { onutGLAPI.onutRasterSamplesEXT(samples, fixedsamplelocations); }
ONUT_FORCE_INLINE void _onutReadBuffer(GLenum src) { onutGLAPI.onutReadBuffer(src); }
ONUT_FORCE_INLINE void _onutReadBufferIndexedEXT(GLenum src, GLint index) { onutGLAPI.onutReadBufferIndexedEXT(src, index); }
ONUT_FORCE_INLINE void _onutReadBufferNV(GLenum mode) { onutGLAPI.onutReadBufferNV(mode); }
ONUT_FORCE_INLINE void _onutReadBufferRegion(GLuint region, GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutReadBufferRegion(region, x, y, width, height); }
ONUT_FORCE_INLINE void _onutReadInstrumentsSGIX(GLint marker) { onutGLAPI.onutReadInstrumentsSGIX(marker); }
ONUT_FORCE_INLINE void _onutReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels) { onutGLAPI.onutReadPixels(x, y, width, height, format, type, pixels); }
ONUT_FORCE_INLINE void _onutReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data) { onutGLAPI.onutReadnPixels(x, y, width, height, format, type, bufSize, data); }
ONUT_FORCE_INLINE void _onutReadnPixelsARB(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data) { onutGLAPI.onutReadnPixelsARB(x, y, width, height, format, type, bufSize, data); }
ONUT_FORCE_INLINE void _onutReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data) { onutGLAPI.onutReadnPixelsEXT(x, y, width, height, format, type, bufSize, data); }
ONUT_FORCE_INLINE void _onutReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data) { onutGLAPI.onutReadnPixelsKHR(x, y, width, height, format, type, bufSize, data); }
ONUT_FORCE_INLINE void _onutRectxOES(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2) { onutGLAPI.onutRectxOES(x1, y1, x2, y2); }
ONUT_FORCE_INLINE void _onutRectxvOES(const GLfixed *v1, const GLfixed *v2) { onutGLAPI.onutRectxvOES(v1, v2); }
ONUT_FORCE_INLINE void _onutReferencePlaneSGIX(const GLdouble *equation) { onutGLAPI.onutReferencePlaneSGIX(equation); }
ONUT_FORCE_INLINE GLboolean _onutReleaseKeyedMutexWin32EXT(GLuint memory, GLuint64 key) { return onutGLAPI.onutReleaseKeyedMutexWin32EXT(memory, key); }
ONUT_FORCE_INLINE void _onutReleaseShaderCompiler(void) { onutGLAPI.onutReleaseShaderCompiler(); }
ONUT_FORCE_INLINE void _onutRenderGpuMaskNV(GLbitfield mask) { onutGLAPI.onutRenderGpuMaskNV(mask); }
ONUT_FORCE_INLINE void _onutRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutRenderbufferStorage(target, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutRenderbufferStorageEXT(target, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutRenderbufferStorageMultisample(target, samples, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutRenderbufferStorageMultisampleANGLE(target, samples, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutRenderbufferStorageMultisampleAPPLE(target, samples, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutRenderbufferStorageMultisampleCoverageNV(target, coverageSamples, colorSamples, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutRenderbufferStorageMultisampleEXT(target, samples, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutRenderbufferStorageMultisampleIMG(target, samples, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutRenderbufferStorageMultisampleNV(target, samples, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutReplacementCodePointerSUN(GLenum type, GLsizei stride, const void **pointer) { onutGLAPI.onutReplacementCodePointerSUN(type, stride, pointer); }
ONUT_FORCE_INLINE void _onutReplacementCodeubSUN(GLubyte code) { onutGLAPI.onutReplacementCodeubSUN(code); }
ONUT_FORCE_INLINE void _onutReplacementCodeubvSUN(const GLubyte *code) { onutGLAPI.onutReplacementCodeubvSUN(code); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiColor3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutReplacementCodeuiColor3fVertex3fSUN(rc, r, g, b, x, y, z); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiColor3fVertex3fvSUN(const GLuint *rc, const GLfloat *c, const GLfloat *v) { onutGLAPI.onutReplacementCodeuiColor3fVertex3fvSUN(rc, c, v); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutReplacementCodeuiColor4fNormal3fVertex3fSUN(rc, r, g, b, a, nx, ny, nz, x, y, z); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiColor4fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v) { onutGLAPI.onutReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc, c, n, v); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiColor4ubVertex3fSUN(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutReplacementCodeuiColor4ubVertex3fSUN(rc, r, g, b, a, x, y, z); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiColor4ubVertex3fvSUN(const GLuint *rc, const GLubyte *c, const GLfloat *v) { onutGLAPI.onutReplacementCodeuiColor4ubVertex3fvSUN(rc, c, v); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiNormal3fVertex3fSUN(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutReplacementCodeuiNormal3fVertex3fSUN(rc, nx, ny, nz, x, y, z); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *n, const GLfloat *v) { onutGLAPI.onutReplacementCodeuiNormal3fVertex3fvSUN(rc, n, v); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiSUN(GLuint code) { onutGLAPI.onutReplacementCodeuiSUN(code); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v) { onutGLAPI.onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc, tc, c, n, v); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc, s, t, nx, ny, nz, x, y, z); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v) { onutGLAPI.onutReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc, tc, n, v); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiTexCoord2fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutReplacementCodeuiTexCoord2fVertex3fSUN(rc, s, t, x, y, z); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiTexCoord2fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *v) { onutGLAPI.onutReplacementCodeuiTexCoord2fVertex3fvSUN(rc, tc, v); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiVertex3fSUN(GLuint rc, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutReplacementCodeuiVertex3fSUN(rc, x, y, z); }
ONUT_FORCE_INLINE void _onutReplacementCodeuiVertex3fvSUN(const GLuint *rc, const GLfloat *v) { onutGLAPI.onutReplacementCodeuiVertex3fvSUN(rc, v); }
ONUT_FORCE_INLINE void _onutReplacementCodeuivSUN(const GLuint *code) { onutGLAPI.onutReplacementCodeuivSUN(code); }
ONUT_FORCE_INLINE void _onutReplacementCodeusSUN(GLushort code) { onutGLAPI.onutReplacementCodeusSUN(code); }
ONUT_FORCE_INLINE void _onutReplacementCodeusvSUN(const GLushort *code) { onutGLAPI.onutReplacementCodeusvSUN(code); }
ONUT_FORCE_INLINE void _onutRequestResidentProgramsNV(GLsizei n, const GLuint *programs) { onutGLAPI.onutRequestResidentProgramsNV(n, programs); }
ONUT_FORCE_INLINE void _onutResetHistogram(GLenum target) { onutGLAPI.onutResetHistogram(target); }
ONUT_FORCE_INLINE void _onutResetHistogramEXT(GLenum target) { onutGLAPI.onutResetHistogramEXT(target); }
ONUT_FORCE_INLINE void _onutResetMinmax(GLenum target) { onutGLAPI.onutResetMinmax(target); }
ONUT_FORCE_INLINE void _onutResetMinmaxEXT(GLenum target) { onutGLAPI.onutResetMinmaxEXT(target); }
ONUT_FORCE_INLINE void _onutResizeBuffersMESA(void) { onutGLAPI.onutResizeBuffersMESA(); }
ONUT_FORCE_INLINE void _onutResolveDepthValuesNV(void) { onutGLAPI.onutResolveDepthValuesNV(); }
ONUT_FORCE_INLINE void _onutResolveMultisampleFramebufferAPPLE(void) { onutGLAPI.onutResolveMultisampleFramebufferAPPLE(); }
ONUT_FORCE_INLINE void _onutResumeTransformFeedback(void) { onutGLAPI.onutResumeTransformFeedback(); }
ONUT_FORCE_INLINE void _onutResumeTransformFeedbackNV(void) { onutGLAPI.onutResumeTransformFeedbackNV(); }
ONUT_FORCE_INLINE void _onutRotatexOES(GLfixed angle, GLfixed x, GLfixed y, GLfixed z) { onutGLAPI.onutRotatexOES(angle, x, y, z); }
ONUT_FORCE_INLINE void _onutSampleCoverage(GLfloat value, GLboolean invert) { onutGLAPI.onutSampleCoverage(value, invert); }
ONUT_FORCE_INLINE void _onutSampleCoverageARB(GLfloat value, GLboolean invert) { onutGLAPI.onutSampleCoverageARB(value, invert); }
ONUT_FORCE_INLINE void _onutSampleMapATI(GLuint dst, GLuint interp, GLenum swizzle) { onutGLAPI.onutSampleMapATI(dst, interp, swizzle); }
ONUT_FORCE_INLINE void _onutSampleMaskEXT(GLclampf value, GLboolean invert) { onutGLAPI.onutSampleMaskEXT(value, invert); }
ONUT_FORCE_INLINE void _onutSampleMaskIndexedNV(GLuint index, GLbitfield mask) { onutGLAPI.onutSampleMaskIndexedNV(index, mask); }
ONUT_FORCE_INLINE void _onutSampleMaskSGIS(GLclampf value, GLboolean invert) { onutGLAPI.onutSampleMaskSGIS(value, invert); }
ONUT_FORCE_INLINE void _onutSampleMaski(GLuint maskNumber, GLbitfield mask) { onutGLAPI.onutSampleMaski(maskNumber, mask); }
ONUT_FORCE_INLINE void _onutSamplePatternEXT(GLenum pattern) { onutGLAPI.onutSamplePatternEXT(pattern); }
ONUT_FORCE_INLINE void _onutSamplePatternSGIS(GLenum pattern) { onutGLAPI.onutSamplePatternSGIS(pattern); }
ONUT_FORCE_INLINE void _onutSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint *param) { onutGLAPI.onutSamplerParameterIiv(sampler, pname, param); }
ONUT_FORCE_INLINE void _onutSamplerParameterIivEXT(GLuint sampler, GLenum pname, const GLint *param) { onutGLAPI.onutSamplerParameterIivEXT(sampler, pname, param); }
ONUT_FORCE_INLINE void _onutSamplerParameterIivOES(GLuint sampler, GLenum pname, const GLint *param) { onutGLAPI.onutSamplerParameterIivOES(sampler, pname, param); }
ONUT_FORCE_INLINE void _onutSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint *param) { onutGLAPI.onutSamplerParameterIuiv(sampler, pname, param); }
ONUT_FORCE_INLINE void _onutSamplerParameterIuivEXT(GLuint sampler, GLenum pname, const GLuint *param) { onutGLAPI.onutSamplerParameterIuivEXT(sampler, pname, param); }
ONUT_FORCE_INLINE void _onutSamplerParameterIuivOES(GLuint sampler, GLenum pname, const GLuint *param) { onutGLAPI.onutSamplerParameterIuivOES(sampler, pname, param); }
ONUT_FORCE_INLINE void _onutSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param) { onutGLAPI.onutSamplerParameterf(sampler, pname, param); }
ONUT_FORCE_INLINE void _onutSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat *param) { onutGLAPI.onutSamplerParameterfv(sampler, pname, param); }
ONUT_FORCE_INLINE void _onutSamplerParameteri(GLuint sampler, GLenum pname, GLint param) { onutGLAPI.onutSamplerParameteri(sampler, pname, param); }
ONUT_FORCE_INLINE void _onutSamplerParameteriv(GLuint sampler, GLenum pname, const GLint *param) { onutGLAPI.onutSamplerParameteriv(sampler, pname, param); }
ONUT_FORCE_INLINE void _onutScalexOES(GLfixed x, GLfixed y, GLfixed z) { onutGLAPI.onutScalexOES(x, y, z); }
ONUT_FORCE_INLINE void _onutScissor(GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutScissor(x, y, width, height); }
ONUT_FORCE_INLINE void _onutScissorArrayv(GLuint first, GLsizei count, const GLint *v) { onutGLAPI.onutScissorArrayv(first, count, v); }
ONUT_FORCE_INLINE void _onutScissorArrayvNV(GLuint first, GLsizei count, const GLint *v) { onutGLAPI.onutScissorArrayvNV(first, count, v); }
ONUT_FORCE_INLINE void _onutScissorArrayvOES(GLuint first, GLsizei count, const GLint *v) { onutGLAPI.onutScissorArrayvOES(first, count, v); }
ONUT_FORCE_INLINE void _onutScissorIndexed(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height) { onutGLAPI.onutScissorIndexed(index, left, bottom, width, height); }
ONUT_FORCE_INLINE void _onutScissorIndexedNV(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height) { onutGLAPI.onutScissorIndexedNV(index, left, bottom, width, height); }
ONUT_FORCE_INLINE void _onutScissorIndexedOES(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height) { onutGLAPI.onutScissorIndexedOES(index, left, bottom, width, height); }
ONUT_FORCE_INLINE void _onutScissorIndexedv(GLuint index, const GLint *v) { onutGLAPI.onutScissorIndexedv(index, v); }
ONUT_FORCE_INLINE void _onutScissorIndexedvNV(GLuint index, const GLint *v) { onutGLAPI.onutScissorIndexedvNV(index, v); }
ONUT_FORCE_INLINE void _onutScissorIndexedvOES(GLuint index, const GLint *v) { onutGLAPI.onutScissorIndexedvOES(index, v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue) { onutGLAPI.onutSecondaryColor3b(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3bEXT(GLbyte red, GLbyte green, GLbyte blue) { onutGLAPI.onutSecondaryColor3bEXT(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3bv(const GLbyte *v) { onutGLAPI.onutSecondaryColor3bv(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3bvEXT(const GLbyte *v) { onutGLAPI.onutSecondaryColor3bvEXT(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue) { onutGLAPI.onutSecondaryColor3d(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3dEXT(GLdouble red, GLdouble green, GLdouble blue) { onutGLAPI.onutSecondaryColor3dEXT(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3dv(const GLdouble *v) { onutGLAPI.onutSecondaryColor3dv(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3dvEXT(const GLdouble *v) { onutGLAPI.onutSecondaryColor3dvEXT(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue) { onutGLAPI.onutSecondaryColor3f(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3fEXT(GLfloat red, GLfloat green, GLfloat blue) { onutGLAPI.onutSecondaryColor3fEXT(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3fv(const GLfloat *v) { onutGLAPI.onutSecondaryColor3fv(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3fvEXT(const GLfloat *v) { onutGLAPI.onutSecondaryColor3fvEXT(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue) { onutGLAPI.onutSecondaryColor3hNV(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3hvNV(const GLhalfNV *v) { onutGLAPI.onutSecondaryColor3hvNV(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3i(GLint red, GLint green, GLint blue) { onutGLAPI.onutSecondaryColor3i(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3iEXT(GLint red, GLint green, GLint blue) { onutGLAPI.onutSecondaryColor3iEXT(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3iv(const GLint *v) { onutGLAPI.onutSecondaryColor3iv(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3ivEXT(const GLint *v) { onutGLAPI.onutSecondaryColor3ivEXT(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3s(GLshort red, GLshort green, GLshort blue) { onutGLAPI.onutSecondaryColor3s(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3sEXT(GLshort red, GLshort green, GLshort blue) { onutGLAPI.onutSecondaryColor3sEXT(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3sv(const GLshort *v) { onutGLAPI.onutSecondaryColor3sv(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3svEXT(const GLshort *v) { onutGLAPI.onutSecondaryColor3svEXT(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue) { onutGLAPI.onutSecondaryColor3ub(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3ubEXT(GLubyte red, GLubyte green, GLubyte blue) { onutGLAPI.onutSecondaryColor3ubEXT(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3ubv(const GLubyte *v) { onutGLAPI.onutSecondaryColor3ubv(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3ubvEXT(const GLubyte *v) { onutGLAPI.onutSecondaryColor3ubvEXT(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3ui(GLuint red, GLuint green, GLuint blue) { onutGLAPI.onutSecondaryColor3ui(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3uiEXT(GLuint red, GLuint green, GLuint blue) { onutGLAPI.onutSecondaryColor3uiEXT(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3uiv(const GLuint *v) { onutGLAPI.onutSecondaryColor3uiv(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3uivEXT(const GLuint *v) { onutGLAPI.onutSecondaryColor3uivEXT(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3us(GLushort red, GLushort green, GLushort blue) { onutGLAPI.onutSecondaryColor3us(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3usEXT(GLushort red, GLushort green, GLushort blue) { onutGLAPI.onutSecondaryColor3usEXT(red, green, blue); }
ONUT_FORCE_INLINE void _onutSecondaryColor3usv(const GLushort *v) { onutGLAPI.onutSecondaryColor3usv(v); }
ONUT_FORCE_INLINE void _onutSecondaryColor3usvEXT(const GLushort *v) { onutGLAPI.onutSecondaryColor3usvEXT(v); }
ONUT_FORCE_INLINE void _onutSecondaryColorFormatNV(GLint size, GLenum type, GLsizei stride) { onutGLAPI.onutSecondaryColorFormatNV(size, type, stride); }
ONUT_FORCE_INLINE void _onutSecondaryColorP3ui(GLenum type, GLuint color) { onutGLAPI.onutSecondaryColorP3ui(type, color); }
ONUT_FORCE_INLINE void _onutSecondaryColorP3uiv(GLenum type, const GLuint *color) { onutGLAPI.onutSecondaryColorP3uiv(type, color); }
ONUT_FORCE_INLINE void _onutSecondaryColorPointer(GLint size, GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutSecondaryColorPointer(size, type, stride, pointer); }
ONUT_FORCE_INLINE void _onutSecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutSecondaryColorPointerEXT(size, type, stride, pointer); }
ONUT_FORCE_INLINE void _onutSecondaryColorPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride) { onutGLAPI.onutSecondaryColorPointerListIBM(size, type, stride, pointer, ptrstride); }
ONUT_FORCE_INLINE void _onutSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList) { onutGLAPI.onutSelectPerfMonitorCountersAMD(monitor, enable, group, numCounters, counterList); }
ONUT_FORCE_INLINE void _onutSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, const GLuint64 *params) { onutGLAPI.onutSemaphoreParameterui64vEXT(semaphore, pname, params); }
ONUT_FORCE_INLINE void _onutSeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column) { onutGLAPI.onutSeparableFilter2D(target, internalformat, width, height, format, type, row, column); }
ONUT_FORCE_INLINE void _onutSeparableFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column) { onutGLAPI.onutSeparableFilter2DEXT(target, internalformat, width, height, format, type, row, column); }
ONUT_FORCE_INLINE void _onutSetFenceAPPLE(GLuint fence) { onutGLAPI.onutSetFenceAPPLE(fence); }
ONUT_FORCE_INLINE void _onutSetFenceNV(GLuint fence, GLenum condition) { onutGLAPI.onutSetFenceNV(fence, condition); }
ONUT_FORCE_INLINE void _onutSetFragmentShaderConstantATI(GLuint dst, const GLfloat *value) { onutGLAPI.onutSetFragmentShaderConstantATI(dst, value); }
ONUT_FORCE_INLINE void _onutSetInvariantEXT(GLuint id, GLenum type, const void *addr) { onutGLAPI.onutSetInvariantEXT(id, type, addr); }
ONUT_FORCE_INLINE void _onutSetLocalConstantEXT(GLuint id, GLenum type, const void *addr) { onutGLAPI.onutSetLocalConstantEXT(id, type, addr); }
ONUT_FORCE_INLINE void _onutSetMultisamplefvAMD(GLenum pname, GLuint index, const GLfloat *val) { onutGLAPI.onutSetMultisamplefvAMD(pname, index, val); }
ONUT_FORCE_INLINE void _onutShaderBinary(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length) { onutGLAPI.onutShaderBinary(count, shaders, binaryformat, binary, length); }
ONUT_FORCE_INLINE void _onutShaderOp1EXT(GLenum op, GLuint res, GLuint arg1) { onutGLAPI.onutShaderOp1EXT(op, res, arg1); }
ONUT_FORCE_INLINE void _onutShaderOp2EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2) { onutGLAPI.onutShaderOp2EXT(op, res, arg1, arg2); }
ONUT_FORCE_INLINE void _onutShaderOp3EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3) { onutGLAPI.onutShaderOp3EXT(op, res, arg1, arg2, arg3); }
ONUT_FORCE_INLINE void _onutShaderSource(GLuint shader, GLsizei count, const GLchar *const *string, const GLint *length) { onutGLAPI.onutShaderSource(shader, count, string, length); }
ONUT_FORCE_INLINE void _onutShaderSourceARB(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length) { onutGLAPI.onutShaderSourceARB(shaderObj, count, string, length); }
ONUT_FORCE_INLINE void _onutShaderStorageBlockBinding(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding) { onutGLAPI.onutShaderStorageBlockBinding(program, storageBlockIndex, storageBlockBinding); }
ONUT_FORCE_INLINE void _onutSharpenTexFuncSGIS(GLenum target, GLsizei n, const GLfloat *points) { onutGLAPI.onutSharpenTexFuncSGIS(target, n, points); }
ONUT_FORCE_INLINE void _onutSignalSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts) { onutGLAPI.onutSignalSemaphoreEXT(semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, dstLayouts); }
ONUT_FORCE_INLINE void _onutSignalVkFenceNV(GLuint64 vkFence) { onutGLAPI.onutSignalVkFenceNV(vkFence); }
ONUT_FORCE_INLINE void _onutSignalVkSemaphoreNV(GLuint64 vkSemaphore) { onutGLAPI.onutSignalVkSemaphoreNV(vkSemaphore); }
ONUT_FORCE_INLINE void _onutSpecializeShaderARB(GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue) { onutGLAPI.onutSpecializeShaderARB(shader, pEntryPoint, numSpecializationConstants, pConstantIndex, pConstantValue); }
ONUT_FORCE_INLINE void _onutSpriteParameterfSGIX(GLenum pname, GLfloat param) { onutGLAPI.onutSpriteParameterfSGIX(pname, param); }
ONUT_FORCE_INLINE void _onutSpriteParameterfvSGIX(GLenum pname, const GLfloat *params) { onutGLAPI.onutSpriteParameterfvSGIX(pname, params); }
ONUT_FORCE_INLINE void _onutSpriteParameteriSGIX(GLenum pname, GLint param) { onutGLAPI.onutSpriteParameteriSGIX(pname, param); }
ONUT_FORCE_INLINE void _onutSpriteParameterivSGIX(GLenum pname, const GLint *params) { onutGLAPI.onutSpriteParameterivSGIX(pname, params); }
ONUT_FORCE_INLINE void _onutStartInstrumentsSGIX(void) { onutGLAPI.onutStartInstrumentsSGIX(); }
ONUT_FORCE_INLINE void _onutStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask) { onutGLAPI.onutStartTilingQCOM(x, y, width, height, preserveMask); }
ONUT_FORCE_INLINE void _onutStateCaptureNV(GLuint state, GLenum mode) { onutGLAPI.onutStateCaptureNV(state, mode); }
ONUT_FORCE_INLINE void _onutStencilClearTagEXT(GLsizei stencilTagBits, GLuint stencilClearTag) { onutGLAPI.onutStencilClearTagEXT(stencilTagBits, stencilClearTag); }
ONUT_FORCE_INLINE void _onutStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues) { onutGLAPI.onutStencilFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues); }
ONUT_FORCE_INLINE void _onutStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask) { onutGLAPI.onutStencilFillPathNV(path, fillMode, mask); }
ONUT_FORCE_INLINE void _onutStencilFunc(GLenum func, GLint ref, GLuint mask) { onutGLAPI.onutStencilFunc(func, ref, mask); }
ONUT_FORCE_INLINE void _onutStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask) { onutGLAPI.onutStencilFuncSeparate(face, func, ref, mask); }
ONUT_FORCE_INLINE void _onutStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask) { onutGLAPI.onutStencilFuncSeparateATI(frontfunc, backfunc, ref, mask); }
ONUT_FORCE_INLINE void _onutStencilMask(GLuint mask) { onutGLAPI.onutStencilMask(mask); }
ONUT_FORCE_INLINE void _onutStencilMaskSeparate(GLenum face, GLuint mask) { onutGLAPI.onutStencilMaskSeparate(face, mask); }
ONUT_FORCE_INLINE void _onutStencilOp(GLenum fail, GLenum zfail, GLenum zpass) { onutGLAPI.onutStencilOp(fail, zfail, zpass); }
ONUT_FORCE_INLINE void _onutStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass) { onutGLAPI.onutStencilOpSeparate(face, sfail, dpfail, dppass); }
ONUT_FORCE_INLINE void _onutStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass) { onutGLAPI.onutStencilOpSeparateATI(face, sfail, dpfail, dppass); }
ONUT_FORCE_INLINE void _onutStencilOpValueAMD(GLenum face, GLuint value) { onutGLAPI.onutStencilOpValueAMD(face, value); }
ONUT_FORCE_INLINE void _onutStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues) { onutGLAPI.onutStencilStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues); }
ONUT_FORCE_INLINE void _onutStencilStrokePathNV(GLuint path, GLint reference, GLuint mask) { onutGLAPI.onutStencilStrokePathNV(path, reference, mask); }
ONUT_FORCE_INLINE void _onutStencilThenCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues) { onutGLAPI.onutStencilThenCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues); }
ONUT_FORCE_INLINE void _onutStencilThenCoverFillPathNV(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode) { onutGLAPI.onutStencilThenCoverFillPathNV(path, fillMode, mask, coverMode); }
ONUT_FORCE_INLINE void _onutStencilThenCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues) { onutGLAPI.onutStencilThenCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues); }
ONUT_FORCE_INLINE void _onutStencilThenCoverStrokePathNV(GLuint path, GLint reference, GLuint mask, GLenum coverMode) { onutGLAPI.onutStencilThenCoverStrokePathNV(path, reference, mask, coverMode); }
ONUT_FORCE_INLINE void _onutStopInstrumentsSGIX(GLint marker) { onutGLAPI.onutStopInstrumentsSGIX(marker); }
ONUT_FORCE_INLINE void _onutStringMarkerGREMEDY(GLsizei len, const void *string) { onutGLAPI.onutStringMarkerGREMEDY(len, string); }
ONUT_FORCE_INLINE void _onutSubpixelPrecisionBiasNV(GLuint xbits, GLuint ybits) { onutGLAPI.onutSubpixelPrecisionBiasNV(xbits, ybits); }
ONUT_FORCE_INLINE void _onutSwizzleEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW) { onutGLAPI.onutSwizzleEXT(res, in, outX, outY, outZ, outW); }
ONUT_FORCE_INLINE void _onutSyncTextureINTEL(GLuint texture) { onutGLAPI.onutSyncTextureINTEL(texture); }
ONUT_FORCE_INLINE void _onutTagSampleBufferSGIX(void) { onutGLAPI.onutTagSampleBufferSGIX(); }
ONUT_FORCE_INLINE void _onutTangent3bEXT(GLbyte tx, GLbyte ty, GLbyte tz) { onutGLAPI.onutTangent3bEXT(tx, ty, tz); }
ONUT_FORCE_INLINE void _onutTangent3bvEXT(const GLbyte *v) { onutGLAPI.onutTangent3bvEXT(v); }
ONUT_FORCE_INLINE void _onutTangent3dEXT(GLdouble tx, GLdouble ty, GLdouble tz) { onutGLAPI.onutTangent3dEXT(tx, ty, tz); }
ONUT_FORCE_INLINE void _onutTangent3dvEXT(const GLdouble *v) { onutGLAPI.onutTangent3dvEXT(v); }
ONUT_FORCE_INLINE void _onutTangent3fEXT(GLfloat tx, GLfloat ty, GLfloat tz) { onutGLAPI.onutTangent3fEXT(tx, ty, tz); }
ONUT_FORCE_INLINE void _onutTangent3fvEXT(const GLfloat *v) { onutGLAPI.onutTangent3fvEXT(v); }
ONUT_FORCE_INLINE void _onutTangent3iEXT(GLint tx, GLint ty, GLint tz) { onutGLAPI.onutTangent3iEXT(tx, ty, tz); }
ONUT_FORCE_INLINE void _onutTangent3ivEXT(const GLint *v) { onutGLAPI.onutTangent3ivEXT(v); }
ONUT_FORCE_INLINE void _onutTangent3sEXT(GLshort tx, GLshort ty, GLshort tz) { onutGLAPI.onutTangent3sEXT(tx, ty, tz); }
ONUT_FORCE_INLINE void _onutTangent3svEXT(const GLshort *v) { onutGLAPI.onutTangent3svEXT(v); }
ONUT_FORCE_INLINE void _onutTangentPointerEXT(GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutTangentPointerEXT(type, stride, pointer); }
ONUT_FORCE_INLINE void _onutTbufferMask3DFX(GLuint mask) { onutGLAPI.onutTbufferMask3DFX(mask); }
ONUT_FORCE_INLINE void _onutTessellationFactorAMD(GLfloat factor) { onutGLAPI.onutTessellationFactorAMD(factor); }
ONUT_FORCE_INLINE void _onutTessellationModeAMD(GLenum mode) { onutGLAPI.onutTessellationModeAMD(mode); }
ONUT_FORCE_INLINE GLboolean _onutTestFenceAPPLE(GLuint fence) { return onutGLAPI.onutTestFenceAPPLE(fence); }
ONUT_FORCE_INLINE GLboolean _onutTestFenceNV(GLuint fence) { return onutGLAPI.onutTestFenceNV(fence); }
ONUT_FORCE_INLINE GLboolean _onutTestObjectAPPLE(GLenum object, GLuint name) { return onutGLAPI.onutTestObjectAPPLE(object, name); }
ONUT_FORCE_INLINE void _onutTexBuffer(GLenum target, GLenum internalformat, GLuint buffer) { onutGLAPI.onutTexBuffer(target, internalformat, buffer); }
ONUT_FORCE_INLINE void _onutTexBufferARB(GLenum target, GLenum internalformat, GLuint buffer) { onutGLAPI.onutTexBufferARB(target, internalformat, buffer); }
ONUT_FORCE_INLINE void _onutTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer) { onutGLAPI.onutTexBufferEXT(target, internalformat, buffer); }
ONUT_FORCE_INLINE void _onutTexBufferOES(GLenum target, GLenum internalformat, GLuint buffer) { onutGLAPI.onutTexBufferOES(target, internalformat, buffer); }
ONUT_FORCE_INLINE void _onutTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size) { onutGLAPI.onutTexBufferRange(target, internalformat, buffer, offset, size); }
ONUT_FORCE_INLINE void _onutTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size) { onutGLAPI.onutTexBufferRangeEXT(target, internalformat, buffer, offset, size); }
ONUT_FORCE_INLINE void _onutTexBufferRangeOES(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size) { onutGLAPI.onutTexBufferRangeOES(target, internalformat, buffer, offset, size); }
ONUT_FORCE_INLINE void _onutTexBumpParameterfvATI(GLenum pname, const GLfloat *param) { onutGLAPI.onutTexBumpParameterfvATI(pname, param); }
ONUT_FORCE_INLINE void _onutTexBumpParameterivATI(GLenum pname, const GLint *param) { onutGLAPI.onutTexBumpParameterivATI(pname, param); }
ONUT_FORCE_INLINE void _onutTexCoord1bOES(GLbyte s) { onutGLAPI.onutTexCoord1bOES(s); }
ONUT_FORCE_INLINE void _onutTexCoord1bvOES(const GLbyte *coords) { onutGLAPI.onutTexCoord1bvOES(coords); }
ONUT_FORCE_INLINE void _onutTexCoord1hNV(GLhalfNV s) { onutGLAPI.onutTexCoord1hNV(s); }
ONUT_FORCE_INLINE void _onutTexCoord1hvNV(const GLhalfNV *v) { onutGLAPI.onutTexCoord1hvNV(v); }
ONUT_FORCE_INLINE void _onutTexCoord1xOES(GLfixed s) { onutGLAPI.onutTexCoord1xOES(s); }
ONUT_FORCE_INLINE void _onutTexCoord1xvOES(const GLfixed *coords) { onutGLAPI.onutTexCoord1xvOES(coords); }
ONUT_FORCE_INLINE void _onutTexCoord2bOES(GLbyte s, GLbyte t) { onutGLAPI.onutTexCoord2bOES(s, t); }
ONUT_FORCE_INLINE void _onutTexCoord2bvOES(const GLbyte *coords) { onutGLAPI.onutTexCoord2bvOES(coords); }
ONUT_FORCE_INLINE void _onutTexCoord2fColor3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutTexCoord2fColor3fVertex3fSUN(s, t, r, g, b, x, y, z); }
ONUT_FORCE_INLINE void _onutTexCoord2fColor3fVertex3fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *v) { onutGLAPI.onutTexCoord2fColor3fVertex3fvSUN(tc, c, v); }
ONUT_FORCE_INLINE void _onutTexCoord2fColor4fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutTexCoord2fColor4fNormal3fVertex3fSUN(s, t, r, g, b, a, nx, ny, nz, x, y, z); }
ONUT_FORCE_INLINE void _onutTexCoord2fColor4fNormal3fVertex3fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v) { onutGLAPI.onutTexCoord2fColor4fNormal3fVertex3fvSUN(tc, c, n, v); }
ONUT_FORCE_INLINE void _onutTexCoord2fColor4ubVertex3fSUN(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutTexCoord2fColor4ubVertex3fSUN(s, t, r, g, b, a, x, y, z); }
ONUT_FORCE_INLINE void _onutTexCoord2fColor4ubVertex3fvSUN(const GLfloat *tc, const GLubyte *c, const GLfloat *v) { onutGLAPI.onutTexCoord2fColor4ubVertex3fvSUN(tc, c, v); }
ONUT_FORCE_INLINE void _onutTexCoord2fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutTexCoord2fNormal3fVertex3fSUN(s, t, nx, ny, nz, x, y, z); }
ONUT_FORCE_INLINE void _onutTexCoord2fNormal3fVertex3fvSUN(const GLfloat *tc, const GLfloat *n, const GLfloat *v) { onutGLAPI.onutTexCoord2fNormal3fVertex3fvSUN(tc, n, v); }
ONUT_FORCE_INLINE void _onutTexCoord2fVertex3fSUN(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutTexCoord2fVertex3fSUN(s, t, x, y, z); }
ONUT_FORCE_INLINE void _onutTexCoord2fVertex3fvSUN(const GLfloat *tc, const GLfloat *v) { onutGLAPI.onutTexCoord2fVertex3fvSUN(tc, v); }
ONUT_FORCE_INLINE void _onutTexCoord2hNV(GLhalfNV s, GLhalfNV t) { onutGLAPI.onutTexCoord2hNV(s, t); }
ONUT_FORCE_INLINE void _onutTexCoord2hvNV(const GLhalfNV *v) { onutGLAPI.onutTexCoord2hvNV(v); }
ONUT_FORCE_INLINE void _onutTexCoord2xOES(GLfixed s, GLfixed t) { onutGLAPI.onutTexCoord2xOES(s, t); }
ONUT_FORCE_INLINE void _onutTexCoord2xvOES(const GLfixed *coords) { onutGLAPI.onutTexCoord2xvOES(coords); }
ONUT_FORCE_INLINE void _onutTexCoord3bOES(GLbyte s, GLbyte t, GLbyte r) { onutGLAPI.onutTexCoord3bOES(s, t, r); }
ONUT_FORCE_INLINE void _onutTexCoord3bvOES(const GLbyte *coords) { onutGLAPI.onutTexCoord3bvOES(coords); }
ONUT_FORCE_INLINE void _onutTexCoord3hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r) { onutGLAPI.onutTexCoord3hNV(s, t, r); }
ONUT_FORCE_INLINE void _onutTexCoord3hvNV(const GLhalfNV *v) { onutGLAPI.onutTexCoord3hvNV(v); }
ONUT_FORCE_INLINE void _onutTexCoord3xOES(GLfixed s, GLfixed t, GLfixed r) { onutGLAPI.onutTexCoord3xOES(s, t, r); }
ONUT_FORCE_INLINE void _onutTexCoord3xvOES(const GLfixed *coords) { onutGLAPI.onutTexCoord3xvOES(coords); }
ONUT_FORCE_INLINE void _onutTexCoord4bOES(GLbyte s, GLbyte t, GLbyte r, GLbyte q) { onutGLAPI.onutTexCoord4bOES(s, t, r, q); }
ONUT_FORCE_INLINE void _onutTexCoord4bvOES(const GLbyte *coords) { onutGLAPI.onutTexCoord4bvOES(coords); }
ONUT_FORCE_INLINE void _onutTexCoord4fColor4fNormal3fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w) { onutGLAPI.onutTexCoord4fColor4fNormal3fVertex4fSUN(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w); }
ONUT_FORCE_INLINE void _onutTexCoord4fColor4fNormal3fVertex4fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v) { onutGLAPI.onutTexCoord4fColor4fNormal3fVertex4fvSUN(tc, c, n, v); }
ONUT_FORCE_INLINE void _onutTexCoord4fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w) { onutGLAPI.onutTexCoord4fVertex4fSUN(s, t, p, q, x, y, z, w); }
ONUT_FORCE_INLINE void _onutTexCoord4fVertex4fvSUN(const GLfloat *tc, const GLfloat *v) { onutGLAPI.onutTexCoord4fVertex4fvSUN(tc, v); }
ONUT_FORCE_INLINE void _onutTexCoord4hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q) { onutGLAPI.onutTexCoord4hNV(s, t, r, q); }
ONUT_FORCE_INLINE void _onutTexCoord4hvNV(const GLhalfNV *v) { onutGLAPI.onutTexCoord4hvNV(v); }
ONUT_FORCE_INLINE void _onutTexCoord4xOES(GLfixed s, GLfixed t, GLfixed r, GLfixed q) { onutGLAPI.onutTexCoord4xOES(s, t, r, q); }
ONUT_FORCE_INLINE void _onutTexCoord4xvOES(const GLfixed *coords) { onutGLAPI.onutTexCoord4xvOES(coords); }
ONUT_FORCE_INLINE void _onutTexCoordFormatNV(GLint size, GLenum type, GLsizei stride) { onutGLAPI.onutTexCoordFormatNV(size, type, stride); }
ONUT_FORCE_INLINE void _onutTexCoordP1ui(GLenum type, GLuint coords) { onutGLAPI.onutTexCoordP1ui(type, coords); }
ONUT_FORCE_INLINE void _onutTexCoordP1uiv(GLenum type, const GLuint *coords) { onutGLAPI.onutTexCoordP1uiv(type, coords); }
ONUT_FORCE_INLINE void _onutTexCoordP2ui(GLenum type, GLuint coords) { onutGLAPI.onutTexCoordP2ui(type, coords); }
ONUT_FORCE_INLINE void _onutTexCoordP2uiv(GLenum type, const GLuint *coords) { onutGLAPI.onutTexCoordP2uiv(type, coords); }
ONUT_FORCE_INLINE void _onutTexCoordP3ui(GLenum type, GLuint coords) { onutGLAPI.onutTexCoordP3ui(type, coords); }
ONUT_FORCE_INLINE void _onutTexCoordP3uiv(GLenum type, const GLuint *coords) { onutGLAPI.onutTexCoordP3uiv(type, coords); }
ONUT_FORCE_INLINE void _onutTexCoordP4ui(GLenum type, GLuint coords) { onutGLAPI.onutTexCoordP4ui(type, coords); }
ONUT_FORCE_INLINE void _onutTexCoordP4uiv(GLenum type, const GLuint *coords) { onutGLAPI.onutTexCoordP4uiv(type, coords); }
ONUT_FORCE_INLINE void _onutTexCoordPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer) { onutGLAPI.onutTexCoordPointerEXT(size, type, stride, count, pointer); }
ONUT_FORCE_INLINE void _onutTexCoordPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride) { onutGLAPI.onutTexCoordPointerListIBM(size, type, stride, pointer, ptrstride); }
ONUT_FORCE_INLINE void _onutTexCoordPointervINTEL(GLint size, GLenum type, const void **pointer) { onutGLAPI.onutTexCoordPointervINTEL(size, type, pointer); }
ONUT_FORCE_INLINE void _onutTexEnvxOES(GLenum target, GLenum pname, GLfixed param) { onutGLAPI.onutTexEnvxOES(target, pname, param); }
ONUT_FORCE_INLINE void _onutTexEnvxvOES(GLenum target, GLenum pname, const GLfixed *params) { onutGLAPI.onutTexEnvxvOES(target, pname, params); }
ONUT_FORCE_INLINE void _onutTexFilterFuncSGIS(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights) { onutGLAPI.onutTexFilterFuncSGIS(target, filter, n, weights); }
ONUT_FORCE_INLINE void _onutTexGenxOES(GLenum coord, GLenum pname, GLfixed param) { onutGLAPI.onutTexGenxOES(coord, pname, param); }
ONUT_FORCE_INLINE void _onutTexGenxvOES(GLenum coord, GLenum pname, const GLfixed *params) { onutGLAPI.onutTexGenxvOES(coord, pname, params); }
ONUT_FORCE_INLINE void _onutTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexImage1D(target, level, internalformat, width, border, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexImage2D(target, level, internalformat, width, height, border, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexImage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations) { onutGLAPI.onutTexImage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations); }
ONUT_FORCE_INLINE void _onutTexImage2DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations) { onutGLAPI.onutTexImage2DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations); }
ONUT_FORCE_INLINE void _onutTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexImage3DEXT(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexImage3DEXT(target, level, internalformat, width, height, depth, border, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexImage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) { onutGLAPI.onutTexImage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations); }
ONUT_FORCE_INLINE void _onutTexImage3DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations) { onutGLAPI.onutTexImage3DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations); }
ONUT_FORCE_INLINE void _onutTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexImage3DOES(target, level, internalformat, width, height, depth, border, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexImage4DSGIS(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexImage4DSGIS(target, level, internalformat, width, height, depth, size4d, border, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexPageCommitmentARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit) { onutGLAPI.onutTexPageCommitmentARB(target, level, xoffset, yoffset, zoffset, width, height, depth, commit); }
ONUT_FORCE_INLINE void _onutTexPageCommitmentEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit) { onutGLAPI.onutTexPageCommitmentEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, commit); }
ONUT_FORCE_INLINE void _onutTexParameterIiv(GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutTexParameterIiv(target, pname, params); }
ONUT_FORCE_INLINE void _onutTexParameterIivEXT(GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutTexParameterIivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutTexParameterIivOES(GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutTexParameterIivOES(target, pname, params); }
ONUT_FORCE_INLINE void _onutTexParameterIuiv(GLenum target, GLenum pname, const GLuint *params) { onutGLAPI.onutTexParameterIuiv(target, pname, params); }
ONUT_FORCE_INLINE void _onutTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint *params) { onutGLAPI.onutTexParameterIuivEXT(target, pname, params); }
ONUT_FORCE_INLINE void _onutTexParameterIuivOES(GLenum target, GLenum pname, const GLuint *params) { onutGLAPI.onutTexParameterIuivOES(target, pname, params); }
ONUT_FORCE_INLINE void _onutTexParameterf(GLenum target, GLenum pname, GLfloat param) { onutGLAPI.onutTexParameterf(target, pname, param); }
ONUT_FORCE_INLINE void _onutTexParameterfv(GLenum target, GLenum pname, const GLfloat *params) { onutGLAPI.onutTexParameterfv(target, pname, params); }
ONUT_FORCE_INLINE void _onutTexParameteri(GLenum target, GLenum pname, GLint param) { onutGLAPI.onutTexParameteri(target, pname, param); }
ONUT_FORCE_INLINE void _onutTexParameteriv(GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutTexParameteriv(target, pname, params); }
ONUT_FORCE_INLINE void _onutTexParameterxOES(GLenum target, GLenum pname, GLfixed param) { onutGLAPI.onutTexParameterxOES(target, pname, param); }
ONUT_FORCE_INLINE void _onutTexParameterxvOES(GLenum target, GLenum pname, const GLfixed *params) { onutGLAPI.onutTexParameterxvOES(target, pname, params); }
ONUT_FORCE_INLINE void _onutTexRenderbufferNV(GLenum target, GLuint renderbuffer) { onutGLAPI.onutTexRenderbufferNV(target, renderbuffer); }
ONUT_FORCE_INLINE void _onutTexStorage1D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width) { onutGLAPI.onutTexStorage1D(target, levels, internalformat, width); }
ONUT_FORCE_INLINE void _onutTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width) { onutGLAPI.onutTexStorage1DEXT(target, levels, internalformat, width); }
ONUT_FORCE_INLINE void _onutTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutTexStorage2D(target, levels, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutTexStorage2DEXT(target, levels, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations) { onutGLAPI.onutTexStorage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations); }
ONUT_FORCE_INLINE void _onutTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth) { onutGLAPI.onutTexStorage3D(target, levels, internalformat, width, height, depth); }
ONUT_FORCE_INLINE void _onutTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth) { onutGLAPI.onutTexStorage3DEXT(target, levels, internalformat, width, height, depth); }
ONUT_FORCE_INLINE void _onutTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) { onutGLAPI.onutTexStorage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations); }
ONUT_FORCE_INLINE void _onutTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) { onutGLAPI.onutTexStorage3DMultisampleOES(target, samples, internalformat, width, height, depth, fixedsamplelocations); }
ONUT_FORCE_INLINE void _onutTexStorageMem1DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset) { onutGLAPI.onutTexStorageMem1DEXT(target, levels, internalFormat, width, memory, offset); }
ONUT_FORCE_INLINE void _onutTexStorageMem2DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset) { onutGLAPI.onutTexStorageMem2DEXT(target, levels, internalFormat, width, height, memory, offset); }
ONUT_FORCE_INLINE void _onutTexStorageMem2DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset) { onutGLAPI.onutTexStorageMem2DMultisampleEXT(target, samples, internalFormat, width, height, fixedSampleLocations, memory, offset); }
ONUT_FORCE_INLINE void _onutTexStorageMem3DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset) { onutGLAPI.onutTexStorageMem3DEXT(target, levels, internalFormat, width, height, depth, memory, offset); }
ONUT_FORCE_INLINE void _onutTexStorageMem3DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset) { onutGLAPI.onutTexStorageMem3DMultisampleEXT(target, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset); }
ONUT_FORCE_INLINE void _onutTexStorageSparseAMD(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags) { onutGLAPI.onutTexStorageSparseAMD(target, internalFormat, width, height, depth, layers, flags); }
ONUT_FORCE_INLINE void _onutTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexSubImage1D(target, level, xoffset, width, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexSubImage1DEXT(target, level, xoffset, width, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTexSubImage4DSGIS(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTexSubImage4DSGIS(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTextureBarrier(void) { onutGLAPI.onutTextureBarrier(); }
ONUT_FORCE_INLINE void _onutTextureBarrierNV(void) { onutGLAPI.onutTextureBarrierNV(); }
ONUT_FORCE_INLINE void _onutTextureBuffer(GLuint texture, GLenum internalformat, GLuint buffer) { onutGLAPI.onutTextureBuffer(texture, internalformat, buffer); }
ONUT_FORCE_INLINE void _onutTextureBufferEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer) { onutGLAPI.onutTextureBufferEXT(texture, target, internalformat, buffer); }
ONUT_FORCE_INLINE void _onutTextureBufferRange(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size) { onutGLAPI.onutTextureBufferRange(texture, internalformat, buffer, offset, size); }
ONUT_FORCE_INLINE void _onutTextureBufferRangeEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size) { onutGLAPI.onutTextureBufferRangeEXT(texture, target, internalformat, buffer, offset, size); }
ONUT_FORCE_INLINE void _onutTextureColorMaskSGIS(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha) { onutGLAPI.onutTextureColorMaskSGIS(red, green, blue, alpha); }
ONUT_FORCE_INLINE void _onutTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTextureImage1DEXT(texture, target, level, internalformat, width, border, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTextureImage2DEXT(texture, target, level, internalformat, width, height, border, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTextureImage2DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations) { onutGLAPI.onutTextureImage2DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations); }
ONUT_FORCE_INLINE void _onutTextureImage2DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations) { onutGLAPI.onutTextureImage2DMultisampleNV(texture, target, samples, internalFormat, width, height, fixedSampleLocations); }
ONUT_FORCE_INLINE void _onutTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTextureImage3DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations) { onutGLAPI.onutTextureImage3DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations); }
ONUT_FORCE_INLINE void _onutTextureImage3DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations) { onutGLAPI.onutTextureImage3DMultisampleNV(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations); }
ONUT_FORCE_INLINE void _onutTextureLightEXT(GLenum pname) { onutGLAPI.onutTextureLightEXT(pname); }
ONUT_FORCE_INLINE void _onutTextureMaterialEXT(GLenum face, GLenum mode) { onutGLAPI.onutTextureMaterialEXT(face, mode); }
ONUT_FORCE_INLINE void _onutTextureNormalEXT(GLenum mode) { onutGLAPI.onutTextureNormalEXT(mode); }
ONUT_FORCE_INLINE void _onutTexturePageCommitmentEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit) { onutGLAPI.onutTexturePageCommitmentEXT(texture, level, xoffset, yoffset, zoffset, width, height, depth, commit); }
ONUT_FORCE_INLINE void _onutTextureParameterIiv(GLuint texture, GLenum pname, const GLint *params) { onutGLAPI.onutTextureParameterIiv(texture, pname, params); }
ONUT_FORCE_INLINE void _onutTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutTextureParameterIivEXT(texture, target, pname, params); }
ONUT_FORCE_INLINE void _onutTextureParameterIuiv(GLuint texture, GLenum pname, const GLuint *params) { onutGLAPI.onutTextureParameterIuiv(texture, pname, params); }
ONUT_FORCE_INLINE void _onutTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, const GLuint *params) { onutGLAPI.onutTextureParameterIuivEXT(texture, target, pname, params); }
ONUT_FORCE_INLINE void _onutTextureParameterf(GLuint texture, GLenum pname, GLfloat param) { onutGLAPI.onutTextureParameterf(texture, pname, param); }
ONUT_FORCE_INLINE void _onutTextureParameterfEXT(GLuint texture, GLenum target, GLenum pname, GLfloat param) { onutGLAPI.onutTextureParameterfEXT(texture, target, pname, param); }
ONUT_FORCE_INLINE void _onutTextureParameterfv(GLuint texture, GLenum pname, const GLfloat *param) { onutGLAPI.onutTextureParameterfv(texture, pname, param); }
ONUT_FORCE_INLINE void _onutTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, const GLfloat *params) { onutGLAPI.onutTextureParameterfvEXT(texture, target, pname, params); }
ONUT_FORCE_INLINE void _onutTextureParameteri(GLuint texture, GLenum pname, GLint param) { onutGLAPI.onutTextureParameteri(texture, pname, param); }
ONUT_FORCE_INLINE void _onutTextureParameteriEXT(GLuint texture, GLenum target, GLenum pname, GLint param) { onutGLAPI.onutTextureParameteriEXT(texture, target, pname, param); }
ONUT_FORCE_INLINE void _onutTextureParameteriv(GLuint texture, GLenum pname, const GLint *param) { onutGLAPI.onutTextureParameteriv(texture, pname, param); }
ONUT_FORCE_INLINE void _onutTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, const GLint *params) { onutGLAPI.onutTextureParameterivEXT(texture, target, pname, params); }
ONUT_FORCE_INLINE void _onutTextureRangeAPPLE(GLenum target, GLsizei length, const void *pointer) { onutGLAPI.onutTextureRangeAPPLE(target, length, pointer); }
ONUT_FORCE_INLINE void _onutTextureRenderbufferEXT(GLuint texture, GLenum target, GLuint renderbuffer) { onutGLAPI.onutTextureRenderbufferEXT(texture, target, renderbuffer); }
ONUT_FORCE_INLINE void _onutTextureStorage1D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width) { onutGLAPI.onutTextureStorage1D(texture, levels, internalformat, width); }
ONUT_FORCE_INLINE void _onutTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width) { onutGLAPI.onutTextureStorage1DEXT(texture, target, levels, internalformat, width); }
ONUT_FORCE_INLINE void _onutTextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutTextureStorage2D(texture, levels, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) { onutGLAPI.onutTextureStorage2DEXT(texture, target, levels, internalformat, width, height); }
ONUT_FORCE_INLINE void _onutTextureStorage2DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations) { onutGLAPI.onutTextureStorage2DMultisample(texture, samples, internalformat, width, height, fixedsamplelocations); }
ONUT_FORCE_INLINE void _onutTextureStorage2DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations) { onutGLAPI.onutTextureStorage2DMultisampleEXT(texture, target, samples, internalformat, width, height, fixedsamplelocations); }
ONUT_FORCE_INLINE void _onutTextureStorage3D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth) { onutGLAPI.onutTextureStorage3D(texture, levels, internalformat, width, height, depth); }
ONUT_FORCE_INLINE void _onutTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth) { onutGLAPI.onutTextureStorage3DEXT(texture, target, levels, internalformat, width, height, depth); }
ONUT_FORCE_INLINE void _onutTextureStorage3DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) { onutGLAPI.onutTextureStorage3DMultisample(texture, samples, internalformat, width, height, depth, fixedsamplelocations); }
ONUT_FORCE_INLINE void _onutTextureStorage3DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) { onutGLAPI.onutTextureStorage3DMultisampleEXT(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations); }
ONUT_FORCE_INLINE void _onutTextureStorageMem1DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset) { onutGLAPI.onutTextureStorageMem1DEXT(texture, levels, internalFormat, width, memory, offset); }
ONUT_FORCE_INLINE void _onutTextureStorageMem2DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset) { onutGLAPI.onutTextureStorageMem2DEXT(texture, levels, internalFormat, width, height, memory, offset); }
ONUT_FORCE_INLINE void _onutTextureStorageMem2DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset) { onutGLAPI.onutTextureStorageMem2DMultisampleEXT(texture, samples, internalFormat, width, height, fixedSampleLocations, memory, offset); }
ONUT_FORCE_INLINE void _onutTextureStorageMem3DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset) { onutGLAPI.onutTextureStorageMem3DEXT(texture, levels, internalFormat, width, height, depth, memory, offset); }
ONUT_FORCE_INLINE void _onutTextureStorageMem3DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset) { onutGLAPI.onutTextureStorageMem3DMultisampleEXT(texture, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset); }
ONUT_FORCE_INLINE void _onutTextureStorageSparseAMD(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags) { onutGLAPI.onutTextureStorageSparseAMD(texture, target, internalFormat, width, height, depth, layers, flags); }
ONUT_FORCE_INLINE void _onutTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTextureSubImage1D(texture, level, xoffset, width, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTextureSubImage1DEXT(texture, target, level, xoffset, width, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels) { onutGLAPI.onutTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels); }
ONUT_FORCE_INLINE void _onutTextureView(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers) { onutGLAPI.onutTextureView(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers); }
ONUT_FORCE_INLINE void _onutTextureViewEXT(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers) { onutGLAPI.onutTextureViewEXT(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers); }
ONUT_FORCE_INLINE void _onutTextureViewOES(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers) { onutGLAPI.onutTextureViewOES(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers); }
ONUT_FORCE_INLINE void _onutTrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform) { onutGLAPI.onutTrackMatrixNV(target, address, matrix, transform); }
ONUT_FORCE_INLINE void _onutTransformFeedbackAttribsNV(GLsizei count, const GLint *attribs, GLenum bufferMode) { onutGLAPI.onutTransformFeedbackAttribsNV(count, attribs, bufferMode); }
ONUT_FORCE_INLINE void _onutTransformFeedbackBufferBase(GLuint xfb, GLuint index, GLuint buffer) { onutGLAPI.onutTransformFeedbackBufferBase(xfb, index, buffer); }
ONUT_FORCE_INLINE void _onutTransformFeedbackBufferRange(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) { onutGLAPI.onutTransformFeedbackBufferRange(xfb, index, buffer, offset, size); }
ONUT_FORCE_INLINE void _onutTransformFeedbackStreamAttribsNV(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode) { onutGLAPI.onutTransformFeedbackStreamAttribsNV(count, attribs, nbuffers, bufstreams, bufferMode); }
ONUT_FORCE_INLINE void _onutTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const *varyings, GLenum bufferMode) { onutGLAPI.onutTransformFeedbackVaryings(program, count, varyings, bufferMode); }
ONUT_FORCE_INLINE void _onutTransformFeedbackVaryingsEXT(GLuint program, GLsizei count, const GLchar *const *varyings, GLenum bufferMode) { onutGLAPI.onutTransformFeedbackVaryingsEXT(program, count, varyings, bufferMode); }
ONUT_FORCE_INLINE void _onutTransformFeedbackVaryingsNV(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode) { onutGLAPI.onutTransformFeedbackVaryingsNV(program, count, locations, bufferMode); }
ONUT_FORCE_INLINE void _onutTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues) { onutGLAPI.onutTransformPathNV(resultPath, srcPath, transformType, transformValues); }
ONUT_FORCE_INLINE void _onutTranslatexOES(GLfixed x, GLfixed y, GLfixed z) { onutGLAPI.onutTranslatexOES(x, y, z); }
ONUT_FORCE_INLINE void _onutUniform1d(GLint location, GLdouble x) { onutGLAPI.onutUniform1d(location, x); }
ONUT_FORCE_INLINE void _onutUniform1dv(GLint location, GLsizei count, const GLdouble *value) { onutGLAPI.onutUniform1dv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform1f(GLint location, GLfloat v0) { onutGLAPI.onutUniform1f(location, v0); }
ONUT_FORCE_INLINE void _onutUniform1fARB(GLint location, GLfloat v0) { onutGLAPI.onutUniform1fARB(location, v0); }
ONUT_FORCE_INLINE void _onutUniform1fv(GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutUniform1fv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform1fvARB(GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutUniform1fvARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform1i(GLint location, GLint v0) { onutGLAPI.onutUniform1i(location, v0); }
ONUT_FORCE_INLINE void _onutUniform1i64ARB(GLint location, GLint64 x) { onutGLAPI.onutUniform1i64ARB(location, x); }
ONUT_FORCE_INLINE void _onutUniform1i64NV(GLint location, GLint64EXT x) { onutGLAPI.onutUniform1i64NV(location, x); }
ONUT_FORCE_INLINE void _onutUniform1i64vARB(GLint location, GLsizei count, const GLint64 *value) { onutGLAPI.onutUniform1i64vARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform1i64vNV(GLint location, GLsizei count, const GLint64EXT *value) { onutGLAPI.onutUniform1i64vNV(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform1iARB(GLint location, GLint v0) { onutGLAPI.onutUniform1iARB(location, v0); }
ONUT_FORCE_INLINE void _onutUniform1iv(GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutUniform1iv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform1ivARB(GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutUniform1ivARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform1ui(GLint location, GLuint v0) { onutGLAPI.onutUniform1ui(location, v0); }
ONUT_FORCE_INLINE void _onutUniform1ui64ARB(GLint location, GLuint64 x) { onutGLAPI.onutUniform1ui64ARB(location, x); }
ONUT_FORCE_INLINE void _onutUniform1ui64NV(GLint location, GLuint64EXT x) { onutGLAPI.onutUniform1ui64NV(location, x); }
ONUT_FORCE_INLINE void _onutUniform1ui64vARB(GLint location, GLsizei count, const GLuint64 *value) { onutGLAPI.onutUniform1ui64vARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform1ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value) { onutGLAPI.onutUniform1ui64vNV(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform1uiEXT(GLint location, GLuint v0) { onutGLAPI.onutUniform1uiEXT(location, v0); }
ONUT_FORCE_INLINE void _onutUniform1uiv(GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutUniform1uiv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform1uivEXT(GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutUniform1uivEXT(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform2d(GLint location, GLdouble x, GLdouble y) { onutGLAPI.onutUniform2d(location, x, y); }
ONUT_FORCE_INLINE void _onutUniform2dv(GLint location, GLsizei count, const GLdouble *value) { onutGLAPI.onutUniform2dv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform2f(GLint location, GLfloat v0, GLfloat v1) { onutGLAPI.onutUniform2f(location, v0, v1); }
ONUT_FORCE_INLINE void _onutUniform2fARB(GLint location, GLfloat v0, GLfloat v1) { onutGLAPI.onutUniform2fARB(location, v0, v1); }
ONUT_FORCE_INLINE void _onutUniform2fv(GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutUniform2fv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform2fvARB(GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutUniform2fvARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform2i(GLint location, GLint v0, GLint v1) { onutGLAPI.onutUniform2i(location, v0, v1); }
ONUT_FORCE_INLINE void _onutUniform2i64ARB(GLint location, GLint64 x, GLint64 y) { onutGLAPI.onutUniform2i64ARB(location, x, y); }
ONUT_FORCE_INLINE void _onutUniform2i64NV(GLint location, GLint64EXT x, GLint64EXT y) { onutGLAPI.onutUniform2i64NV(location, x, y); }
ONUT_FORCE_INLINE void _onutUniform2i64vARB(GLint location, GLsizei count, const GLint64 *value) { onutGLAPI.onutUniform2i64vARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform2i64vNV(GLint location, GLsizei count, const GLint64EXT *value) { onutGLAPI.onutUniform2i64vNV(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform2iARB(GLint location, GLint v0, GLint v1) { onutGLAPI.onutUniform2iARB(location, v0, v1); }
ONUT_FORCE_INLINE void _onutUniform2iv(GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutUniform2iv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform2ivARB(GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutUniform2ivARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform2ui(GLint location, GLuint v0, GLuint v1) { onutGLAPI.onutUniform2ui(location, v0, v1); }
ONUT_FORCE_INLINE void _onutUniform2ui64ARB(GLint location, GLuint64 x, GLuint64 y) { onutGLAPI.onutUniform2ui64ARB(location, x, y); }
ONUT_FORCE_INLINE void _onutUniform2ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y) { onutGLAPI.onutUniform2ui64NV(location, x, y); }
ONUT_FORCE_INLINE void _onutUniform2ui64vARB(GLint location, GLsizei count, const GLuint64 *value) { onutGLAPI.onutUniform2ui64vARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform2ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value) { onutGLAPI.onutUniform2ui64vNV(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform2uiEXT(GLint location, GLuint v0, GLuint v1) { onutGLAPI.onutUniform2uiEXT(location, v0, v1); }
ONUT_FORCE_INLINE void _onutUniform2uiv(GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutUniform2uiv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform2uivEXT(GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutUniform2uivEXT(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform3d(GLint location, GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutUniform3d(location, x, y, z); }
ONUT_FORCE_INLINE void _onutUniform3dv(GLint location, GLsizei count, const GLdouble *value) { onutGLAPI.onutUniform3dv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2) { onutGLAPI.onutUniform3f(location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2) { onutGLAPI.onutUniform3fARB(location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutUniform3fv(GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutUniform3fv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform3fvARB(GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutUniform3fvARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform3i(GLint location, GLint v0, GLint v1, GLint v2) { onutGLAPI.onutUniform3i(location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutUniform3i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z) { onutGLAPI.onutUniform3i64ARB(location, x, y, z); }
ONUT_FORCE_INLINE void _onutUniform3i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z) { onutGLAPI.onutUniform3i64NV(location, x, y, z); }
ONUT_FORCE_INLINE void _onutUniform3i64vARB(GLint location, GLsizei count, const GLint64 *value) { onutGLAPI.onutUniform3i64vARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform3i64vNV(GLint location, GLsizei count, const GLint64EXT *value) { onutGLAPI.onutUniform3i64vNV(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2) { onutGLAPI.onutUniform3iARB(location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutUniform3iv(GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutUniform3iv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform3ivARB(GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutUniform3ivARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2) { onutGLAPI.onutUniform3ui(location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutUniform3ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z) { onutGLAPI.onutUniform3ui64ARB(location, x, y, z); }
ONUT_FORCE_INLINE void _onutUniform3ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z) { onutGLAPI.onutUniform3ui64NV(location, x, y, z); }
ONUT_FORCE_INLINE void _onutUniform3ui64vARB(GLint location, GLsizei count, const GLuint64 *value) { onutGLAPI.onutUniform3ui64vARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform3ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value) { onutGLAPI.onutUniform3ui64vNV(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2) { onutGLAPI.onutUniform3uiEXT(location, v0, v1, v2); }
ONUT_FORCE_INLINE void _onutUniform3uiv(GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutUniform3uiv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform3uivEXT(GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutUniform3uivEXT(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform4d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutUniform4d(location, x, y, z, w); }
ONUT_FORCE_INLINE void _onutUniform4dv(GLint location, GLsizei count, const GLdouble *value) { onutGLAPI.onutUniform4dv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) { onutGLAPI.onutUniform4f(location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) { onutGLAPI.onutUniform4fARB(location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutUniform4fv(GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutUniform4fv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform4fvARB(GLint location, GLsizei count, const GLfloat *value) { onutGLAPI.onutUniform4fvARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3) { onutGLAPI.onutUniform4i(location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutUniform4i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w) { onutGLAPI.onutUniform4i64ARB(location, x, y, z, w); }
ONUT_FORCE_INLINE void _onutUniform4i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w) { onutGLAPI.onutUniform4i64NV(location, x, y, z, w); }
ONUT_FORCE_INLINE void _onutUniform4i64vARB(GLint location, GLsizei count, const GLint64 *value) { onutGLAPI.onutUniform4i64vARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform4i64vNV(GLint location, GLsizei count, const GLint64EXT *value) { onutGLAPI.onutUniform4i64vNV(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3) { onutGLAPI.onutUniform4iARB(location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutUniform4iv(GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutUniform4iv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform4ivARB(GLint location, GLsizei count, const GLint *value) { onutGLAPI.onutUniform4ivARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) { onutGLAPI.onutUniform4ui(location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutUniform4ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w) { onutGLAPI.onutUniform4ui64ARB(location, x, y, z, w); }
ONUT_FORCE_INLINE void _onutUniform4ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w) { onutGLAPI.onutUniform4ui64NV(location, x, y, z, w); }
ONUT_FORCE_INLINE void _onutUniform4ui64vARB(GLint location, GLsizei count, const GLuint64 *value) { onutGLAPI.onutUniform4ui64vARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform4ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value) { onutGLAPI.onutUniform4ui64vNV(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) { onutGLAPI.onutUniform4uiEXT(location, v0, v1, v2, v3); }
ONUT_FORCE_INLINE void _onutUniform4uiv(GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutUniform4uiv(location, count, value); }
ONUT_FORCE_INLINE void _onutUniform4uivEXT(GLint location, GLsizei count, const GLuint *value) { onutGLAPI.onutUniform4uivEXT(location, count, value); }
ONUT_FORCE_INLINE void _onutUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding) { onutGLAPI.onutUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding); }
ONUT_FORCE_INLINE void _onutUniformBufferEXT(GLuint program, GLint location, GLuint buffer) { onutGLAPI.onutUniformBufferEXT(program, location, buffer); }
ONUT_FORCE_INLINE void _onutUniformHandleui64ARB(GLint location, GLuint64 value) { onutGLAPI.onutUniformHandleui64ARB(location, value); }
ONUT_FORCE_INLINE void _onutUniformHandleui64IMG(GLint location, GLuint64 value) { onutGLAPI.onutUniformHandleui64IMG(location, value); }
ONUT_FORCE_INLINE void _onutUniformHandleui64NV(GLint location, GLuint64 value) { onutGLAPI.onutUniformHandleui64NV(location, value); }
ONUT_FORCE_INLINE void _onutUniformHandleui64vARB(GLint location, GLsizei count, const GLuint64 *value) { onutGLAPI.onutUniformHandleui64vARB(location, count, value); }
ONUT_FORCE_INLINE void _onutUniformHandleui64vIMG(GLint location, GLsizei count, const GLuint64 *value) { onutGLAPI.onutUniformHandleui64vIMG(location, count, value); }
ONUT_FORCE_INLINE void _onutUniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 *value) { onutGLAPI.onutUniformHandleui64vNV(location, count, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutUniformMatrix2dv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix2fv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix2fvARB(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix2x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutUniformMatrix2x3dv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix2x3fv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix2x3fvNV(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix2x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutUniformMatrix2x4dv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix2x4fv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix2x4fvNV(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutUniformMatrix3dv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix3fv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix3fvARB(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix3x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutUniformMatrix3x2dv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix3x2fv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix3x2fvNV(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix3x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutUniformMatrix3x4dv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix3x4fv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix3x4fvNV(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutUniformMatrix4dv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix4fv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix4fvARB(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix4x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutUniformMatrix4x2dv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix4x2fv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix4x2fvNV(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix4x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) { onutGLAPI.onutUniformMatrix4x3dv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix4x3fv(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) { onutGLAPI.onutUniformMatrix4x3fvNV(location, count, transpose, value); }
ONUT_FORCE_INLINE void _onutUniformSubroutinesuiv(GLenum shadertype, GLsizei count, const GLuint *indices) { onutGLAPI.onutUniformSubroutinesuiv(shadertype, count, indices); }
ONUT_FORCE_INLINE void _onutUniformui64NV(GLint location, GLuint64EXT value) { onutGLAPI.onutUniformui64NV(location, value); }
ONUT_FORCE_INLINE void _onutUniformui64vNV(GLint location, GLsizei count, const GLuint64EXT *value) { onutGLAPI.onutUniformui64vNV(location, count, value); }
ONUT_FORCE_INLINE void _onutUnlockArraysEXT(void) { onutGLAPI.onutUnlockArraysEXT(); }
ONUT_FORCE_INLINE GLboolean _onutUnmapBuffer(GLenum target) { return onutGLAPI.onutUnmapBuffer(target); }
ONUT_FORCE_INLINE GLboolean _onutUnmapBufferARB(GLenum target) { return onutGLAPI.onutUnmapBufferARB(target); }
ONUT_FORCE_INLINE GLboolean _onutUnmapBufferOES(GLenum target) { return onutGLAPI.onutUnmapBufferOES(target); }
ONUT_FORCE_INLINE GLboolean _onutUnmapNamedBuffer(GLuint buffer) { return onutGLAPI.onutUnmapNamedBuffer(buffer); }
ONUT_FORCE_INLINE GLboolean _onutUnmapNamedBufferEXT(GLuint buffer) { return onutGLAPI.onutUnmapNamedBufferEXT(buffer); }
ONUT_FORCE_INLINE void _onutUnmapObjectBufferATI(GLuint buffer) { onutGLAPI.onutUnmapObjectBufferATI(buffer); }
ONUT_FORCE_INLINE void _onutUnmapTexture2DINTEL(GLuint texture, GLint level) { onutGLAPI.onutUnmapTexture2DINTEL(texture, level); }
ONUT_FORCE_INLINE void _onutUpdateObjectBufferATI(GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve) { onutGLAPI.onutUpdateObjectBufferATI(buffer, offset, size, pointer, preserve); }
ONUT_FORCE_INLINE void _onutUseProgram(GLuint program) { onutGLAPI.onutUseProgram(program); }
ONUT_FORCE_INLINE void _onutUseProgramObjectARB(GLhandleARB programObj) { onutGLAPI.onutUseProgramObjectARB(programObj); }
ONUT_FORCE_INLINE void _onutUseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program) { onutGLAPI.onutUseProgramStages(pipeline, stages, program); }
ONUT_FORCE_INLINE void _onutUseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program) { onutGLAPI.onutUseProgramStagesEXT(pipeline, stages, program); }
ONUT_FORCE_INLINE void _onutUseShaderProgramEXT(GLenum type, GLuint program) { onutGLAPI.onutUseShaderProgramEXT(type, program); }
ONUT_FORCE_INLINE void _onutVDPAUFiniNV(void) { onutGLAPI.onutVDPAUFiniNV(); }
ONUT_FORCE_INLINE void _onutVDPAUGetSurfaceivNV(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values) { onutGLAPI.onutVDPAUGetSurfaceivNV(surface, pname, bufSize, length, values); }
ONUT_FORCE_INLINE void _onutVDPAUInitNV(const void *vdpDevice, const void *getProcAddress) { onutGLAPI.onutVDPAUInitNV(vdpDevice, getProcAddress); }
ONUT_FORCE_INLINE GLboolean _onutVDPAUIsSurfaceNV(GLvdpauSurfaceNV surface) { return onutGLAPI.onutVDPAUIsSurfaceNV(surface); }
ONUT_FORCE_INLINE void _onutVDPAUMapSurfacesNV(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces) { onutGLAPI.onutVDPAUMapSurfacesNV(numSurfaces, surfaces); }
ONUT_FORCE_INLINE GLvdpauSurfaceNV _onutVDPAURegisterOutputSurfaceNV(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames) { return onutGLAPI.onutVDPAURegisterOutputSurfaceNV(vdpSurface, target, numTextureNames, textureNames); }
ONUT_FORCE_INLINE GLvdpauSurfaceNV _onutVDPAURegisterVideoSurfaceNV(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames) { return onutGLAPI.onutVDPAURegisterVideoSurfaceNV(vdpSurface, target, numTextureNames, textureNames); }
ONUT_FORCE_INLINE void _onutVDPAUSurfaceAccessNV(GLvdpauSurfaceNV surface, GLenum access) { onutGLAPI.onutVDPAUSurfaceAccessNV(surface, access); }
ONUT_FORCE_INLINE void _onutVDPAUUnmapSurfacesNV(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces) { onutGLAPI.onutVDPAUUnmapSurfacesNV(numSurface, surfaces); }
ONUT_FORCE_INLINE void _onutVDPAUUnregisterSurfaceNV(GLvdpauSurfaceNV surface) { onutGLAPI.onutVDPAUUnregisterSurfaceNV(surface); }
ONUT_FORCE_INLINE void _onutValidateProgram(GLuint program) { onutGLAPI.onutValidateProgram(program); }
ONUT_FORCE_INLINE void _onutValidateProgramARB(GLhandleARB programObj) { onutGLAPI.onutValidateProgramARB(programObj); }
ONUT_FORCE_INLINE void _onutValidateProgramPipeline(GLuint pipeline) { onutGLAPI.onutValidateProgramPipeline(pipeline); }
ONUT_FORCE_INLINE void _onutValidateProgramPipelineEXT(GLuint pipeline) { onutGLAPI.onutValidateProgramPipelineEXT(pipeline); }
ONUT_FORCE_INLINE void _onutVariantArrayObjectATI(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset) { onutGLAPI.onutVariantArrayObjectATI(id, type, stride, buffer, offset); }
ONUT_FORCE_INLINE void _onutVariantPointerEXT(GLuint id, GLenum type, GLuint stride, const void *addr) { onutGLAPI.onutVariantPointerEXT(id, type, stride, addr); }
ONUT_FORCE_INLINE void _onutVariantbvEXT(GLuint id, const GLbyte *addr) { onutGLAPI.onutVariantbvEXT(id, addr); }
ONUT_FORCE_INLINE void _onutVariantdvEXT(GLuint id, const GLdouble *addr) { onutGLAPI.onutVariantdvEXT(id, addr); }
ONUT_FORCE_INLINE void _onutVariantfvEXT(GLuint id, const GLfloat *addr) { onutGLAPI.onutVariantfvEXT(id, addr); }
ONUT_FORCE_INLINE void _onutVariantivEXT(GLuint id, const GLint *addr) { onutGLAPI.onutVariantivEXT(id, addr); }
ONUT_FORCE_INLINE void _onutVariantsvEXT(GLuint id, const GLshort *addr) { onutGLAPI.onutVariantsvEXT(id, addr); }
ONUT_FORCE_INLINE void _onutVariantubvEXT(GLuint id, const GLubyte *addr) { onutGLAPI.onutVariantubvEXT(id, addr); }
ONUT_FORCE_INLINE void _onutVariantuivEXT(GLuint id, const GLuint *addr) { onutGLAPI.onutVariantuivEXT(id, addr); }
ONUT_FORCE_INLINE void _onutVariantusvEXT(GLuint id, const GLushort *addr) { onutGLAPI.onutVariantusvEXT(id, addr); }
ONUT_FORCE_INLINE void _onutVertex2bOES(GLbyte x, GLbyte y) { onutGLAPI.onutVertex2bOES(x, y); }
ONUT_FORCE_INLINE void _onutVertex2bvOES(const GLbyte *coords) { onutGLAPI.onutVertex2bvOES(coords); }
ONUT_FORCE_INLINE void _onutVertex2hNV(GLhalfNV x, GLhalfNV y) { onutGLAPI.onutVertex2hNV(x, y); }
ONUT_FORCE_INLINE void _onutVertex2hvNV(const GLhalfNV *v) { onutGLAPI.onutVertex2hvNV(v); }
ONUT_FORCE_INLINE void _onutVertex2xOES(GLfixed x) { onutGLAPI.onutVertex2xOES(x); }
ONUT_FORCE_INLINE void _onutVertex2xvOES(const GLfixed *coords) { onutGLAPI.onutVertex2xvOES(coords); }
ONUT_FORCE_INLINE void _onutVertex3bOES(GLbyte x, GLbyte y, GLbyte z) { onutGLAPI.onutVertex3bOES(x, y, z); }
ONUT_FORCE_INLINE void _onutVertex3bvOES(const GLbyte *coords) { onutGLAPI.onutVertex3bvOES(coords); }
ONUT_FORCE_INLINE void _onutVertex3hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z) { onutGLAPI.onutVertex3hNV(x, y, z); }
ONUT_FORCE_INLINE void _onutVertex3hvNV(const GLhalfNV *v) { onutGLAPI.onutVertex3hvNV(v); }
ONUT_FORCE_INLINE void _onutVertex3xOES(GLfixed x, GLfixed y) { onutGLAPI.onutVertex3xOES(x, y); }
ONUT_FORCE_INLINE void _onutVertex3xvOES(const GLfixed *coords) { onutGLAPI.onutVertex3xvOES(coords); }
ONUT_FORCE_INLINE void _onutVertex4bOES(GLbyte x, GLbyte y, GLbyte z, GLbyte w) { onutGLAPI.onutVertex4bOES(x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertex4bvOES(const GLbyte *coords) { onutGLAPI.onutVertex4bvOES(coords); }
ONUT_FORCE_INLINE void _onutVertex4hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w) { onutGLAPI.onutVertex4hNV(x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertex4hvNV(const GLhalfNV *v) { onutGLAPI.onutVertex4hvNV(v); }
ONUT_FORCE_INLINE void _onutVertex4xOES(GLfixed x, GLfixed y, GLfixed z) { onutGLAPI.onutVertex4xOES(x, y, z); }
ONUT_FORCE_INLINE void _onutVertex4xvOES(const GLfixed *coords) { onutGLAPI.onutVertex4xvOES(coords); }
ONUT_FORCE_INLINE void _onutVertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex) { onutGLAPI.onutVertexArrayAttribBinding(vaobj, attribindex, bindingindex); }
ONUT_FORCE_INLINE void _onutVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset) { onutGLAPI.onutVertexArrayAttribFormat(vaobj, attribindex, size, type, normalized, relativeoffset); }
ONUT_FORCE_INLINE void _onutVertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) { onutGLAPI.onutVertexArrayAttribIFormat(vaobj, attribindex, size, type, relativeoffset); }
ONUT_FORCE_INLINE void _onutVertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) { onutGLAPI.onutVertexArrayAttribLFormat(vaobj, attribindex, size, type, relativeoffset); }
ONUT_FORCE_INLINE void _onutVertexArrayBindVertexBufferEXT(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride) { onutGLAPI.onutVertexArrayBindVertexBufferEXT(vaobj, bindingindex, buffer, offset, stride); }
ONUT_FORCE_INLINE void _onutVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint divisor) { onutGLAPI.onutVertexArrayBindingDivisor(vaobj, bindingindex, divisor); }
ONUT_FORCE_INLINE void _onutVertexArrayColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset) { onutGLAPI.onutVertexArrayColorOffsetEXT(vaobj, buffer, size, type, stride, offset); }
ONUT_FORCE_INLINE void _onutVertexArrayEdgeFlagOffsetEXT(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset) { onutGLAPI.onutVertexArrayEdgeFlagOffsetEXT(vaobj, buffer, stride, offset); }
ONUT_FORCE_INLINE void _onutVertexArrayElementBuffer(GLuint vaobj, GLuint buffer) { onutGLAPI.onutVertexArrayElementBuffer(vaobj, buffer); }
ONUT_FORCE_INLINE void _onutVertexArrayFogCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset) { onutGLAPI.onutVertexArrayFogCoordOffsetEXT(vaobj, buffer, type, stride, offset); }
ONUT_FORCE_INLINE void _onutVertexArrayIndexOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset) { onutGLAPI.onutVertexArrayIndexOffsetEXT(vaobj, buffer, type, stride, offset); }
ONUT_FORCE_INLINE void _onutVertexArrayMultiTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset) { onutGLAPI.onutVertexArrayMultiTexCoordOffsetEXT(vaobj, buffer, texunit, size, type, stride, offset); }
ONUT_FORCE_INLINE void _onutVertexArrayNormalOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset) { onutGLAPI.onutVertexArrayNormalOffsetEXT(vaobj, buffer, type, stride, offset); }
ONUT_FORCE_INLINE void _onutVertexArrayParameteriAPPLE(GLenum pname, GLint param) { onutGLAPI.onutVertexArrayParameteriAPPLE(pname, param); }
ONUT_FORCE_INLINE void _onutVertexArrayRangeAPPLE(GLsizei length, void *pointer) { onutGLAPI.onutVertexArrayRangeAPPLE(length, pointer); }
ONUT_FORCE_INLINE void _onutVertexArrayRangeNV(GLsizei length, const void *pointer) { onutGLAPI.onutVertexArrayRangeNV(length, pointer); }
ONUT_FORCE_INLINE void _onutVertexArraySecondaryColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset) { onutGLAPI.onutVertexArraySecondaryColorOffsetEXT(vaobj, buffer, size, type, stride, offset); }
ONUT_FORCE_INLINE void _onutVertexArrayTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset) { onutGLAPI.onutVertexArrayTexCoordOffsetEXT(vaobj, buffer, size, type, stride, offset); }
ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribBindingEXT(GLuint vaobj, GLuint attribindex, GLuint bindingindex) { onutGLAPI.onutVertexArrayVertexAttribBindingEXT(vaobj, attribindex, bindingindex); }
ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribDivisorEXT(GLuint vaobj, GLuint index, GLuint divisor) { onutGLAPI.onutVertexArrayVertexAttribDivisorEXT(vaobj, index, divisor); }
ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset) { onutGLAPI.onutVertexArrayVertexAttribFormatEXT(vaobj, attribindex, size, type, normalized, relativeoffset); }
ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribIFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) { onutGLAPI.onutVertexArrayVertexAttribIFormatEXT(vaobj, attribindex, size, type, relativeoffset); }
ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribIOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset) { onutGLAPI.onutVertexArrayVertexAttribIOffsetEXT(vaobj, buffer, index, size, type, stride, offset); }
ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribLFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) { onutGLAPI.onutVertexArrayVertexAttribLFormatEXT(vaobj, attribindex, size, type, relativeoffset); }
ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribLOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset) { onutGLAPI.onutVertexArrayVertexAttribLOffsetEXT(vaobj, buffer, index, size, type, stride, offset); }
ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset) { onutGLAPI.onutVertexArrayVertexAttribOffsetEXT(vaobj, buffer, index, size, type, normalized, stride, offset); }
ONUT_FORCE_INLINE void _onutVertexArrayVertexBindingDivisorEXT(GLuint vaobj, GLuint bindingindex, GLuint divisor) { onutGLAPI.onutVertexArrayVertexBindingDivisorEXT(vaobj, bindingindex, divisor); }
ONUT_FORCE_INLINE void _onutVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride) { onutGLAPI.onutVertexArrayVertexBuffer(vaobj, bindingindex, buffer, offset, stride); }
ONUT_FORCE_INLINE void _onutVertexArrayVertexBuffers(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides) { onutGLAPI.onutVertexArrayVertexBuffers(vaobj, first, count, buffers, offsets, strides); }
ONUT_FORCE_INLINE void _onutVertexArrayVertexOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset) { onutGLAPI.onutVertexArrayVertexOffsetEXT(vaobj, buffer, size, type, stride, offset); }
ONUT_FORCE_INLINE void _onutVertexAttrib1d(GLuint index, GLdouble x) { onutGLAPI.onutVertexAttrib1d(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttrib1dARB(GLuint index, GLdouble x) { onutGLAPI.onutVertexAttrib1dARB(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttrib1dNV(GLuint index, GLdouble x) { onutGLAPI.onutVertexAttrib1dNV(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttrib1dv(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttrib1dv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib1dvARB(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttrib1dvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib1dvNV(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttrib1dvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib1f(GLuint index, GLfloat x) { onutGLAPI.onutVertexAttrib1f(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttrib1fARB(GLuint index, GLfloat x) { onutGLAPI.onutVertexAttrib1fARB(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttrib1fNV(GLuint index, GLfloat x) { onutGLAPI.onutVertexAttrib1fNV(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttrib1fv(GLuint index, const GLfloat *v) { onutGLAPI.onutVertexAttrib1fv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib1fvARB(GLuint index, const GLfloat *v) { onutGLAPI.onutVertexAttrib1fvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib1fvNV(GLuint index, const GLfloat *v) { onutGLAPI.onutVertexAttrib1fvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib1hNV(GLuint index, GLhalfNV x) { onutGLAPI.onutVertexAttrib1hNV(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttrib1hvNV(GLuint index, const GLhalfNV *v) { onutGLAPI.onutVertexAttrib1hvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib1s(GLuint index, GLshort x) { onutGLAPI.onutVertexAttrib1s(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttrib1sARB(GLuint index, GLshort x) { onutGLAPI.onutVertexAttrib1sARB(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttrib1sNV(GLuint index, GLshort x) { onutGLAPI.onutVertexAttrib1sNV(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttrib1sv(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib1sv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib1svARB(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib1svARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib1svNV(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib1svNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib2d(GLuint index, GLdouble x, GLdouble y) { onutGLAPI.onutVertexAttrib2d(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y) { onutGLAPI.onutVertexAttrib2dARB(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttrib2dNV(GLuint index, GLdouble x, GLdouble y) { onutGLAPI.onutVertexAttrib2dNV(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttrib2dv(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttrib2dv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib2dvARB(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttrib2dvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib2dvNV(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttrib2dvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib2f(GLuint index, GLfloat x, GLfloat y) { onutGLAPI.onutVertexAttrib2f(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y) { onutGLAPI.onutVertexAttrib2fARB(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttrib2fNV(GLuint index, GLfloat x, GLfloat y) { onutGLAPI.onutVertexAttrib2fNV(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttrib2fv(GLuint index, const GLfloat *v) { onutGLAPI.onutVertexAttrib2fv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib2fvARB(GLuint index, const GLfloat *v) { onutGLAPI.onutVertexAttrib2fvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib2fvNV(GLuint index, const GLfloat *v) { onutGLAPI.onutVertexAttrib2fvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib2hNV(GLuint index, GLhalfNV x, GLhalfNV y) { onutGLAPI.onutVertexAttrib2hNV(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttrib2hvNV(GLuint index, const GLhalfNV *v) { onutGLAPI.onutVertexAttrib2hvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib2s(GLuint index, GLshort x, GLshort y) { onutGLAPI.onutVertexAttrib2s(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttrib2sARB(GLuint index, GLshort x, GLshort y) { onutGLAPI.onutVertexAttrib2sARB(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttrib2sNV(GLuint index, GLshort x, GLshort y) { onutGLAPI.onutVertexAttrib2sNV(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttrib2sv(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib2sv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib2svARB(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib2svARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib2svNV(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib2svNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutVertexAttrib3d(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutVertexAttrib3dARB(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttrib3dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutVertexAttrib3dNV(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttrib3dv(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttrib3dv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib3dvARB(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttrib3dvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib3dvNV(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttrib3dvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutVertexAttrib3f(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutVertexAttrib3fARB(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttrib3fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutVertexAttrib3fNV(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttrib3fv(GLuint index, const GLfloat *v) { onutGLAPI.onutVertexAttrib3fv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib3fvARB(GLuint index, const GLfloat *v) { onutGLAPI.onutVertexAttrib3fvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib3fvNV(GLuint index, const GLfloat *v) { onutGLAPI.onutVertexAttrib3fvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib3hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z) { onutGLAPI.onutVertexAttrib3hNV(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttrib3hvNV(GLuint index, const GLhalfNV *v) { onutGLAPI.onutVertexAttrib3hvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z) { onutGLAPI.onutVertexAttrib3s(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z) { onutGLAPI.onutVertexAttrib3sARB(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttrib3sNV(GLuint index, GLshort x, GLshort y, GLshort z) { onutGLAPI.onutVertexAttrib3sNV(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttrib3sv(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib3sv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib3svARB(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib3svARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib3svNV(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib3svNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4Nbv(GLuint index, const GLbyte *v) { onutGLAPI.onutVertexAttrib4Nbv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4NbvARB(GLuint index, const GLbyte *v) { onutGLAPI.onutVertexAttrib4NbvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4Niv(GLuint index, const GLint *v) { onutGLAPI.onutVertexAttrib4Niv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4NivARB(GLuint index, const GLint *v) { onutGLAPI.onutVertexAttrib4NivARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4Nsv(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib4Nsv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4NsvARB(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib4NsvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w) { onutGLAPI.onutVertexAttrib4Nub(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w) { onutGLAPI.onutVertexAttrib4NubARB(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4Nubv(GLuint index, const GLubyte *v) { onutGLAPI.onutVertexAttrib4Nubv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4NubvARB(GLuint index, const GLubyte *v) { onutGLAPI.onutVertexAttrib4NubvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4Nuiv(GLuint index, const GLuint *v) { onutGLAPI.onutVertexAttrib4Nuiv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4NuivARB(GLuint index, const GLuint *v) { onutGLAPI.onutVertexAttrib4NuivARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4Nusv(GLuint index, const GLushort *v) { onutGLAPI.onutVertexAttrib4Nusv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4NusvARB(GLuint index, const GLushort *v) { onutGLAPI.onutVertexAttrib4NusvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4bv(GLuint index, const GLbyte *v) { onutGLAPI.onutVertexAttrib4bv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4bvARB(GLuint index, const GLbyte *v) { onutGLAPI.onutVertexAttrib4bvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutVertexAttrib4d(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutVertexAttrib4dARB(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutVertexAttrib4dNV(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4dv(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttrib4dv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4dvARB(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttrib4dvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4dvNV(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttrib4dvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) { onutGLAPI.onutVertexAttrib4f(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) { onutGLAPI.onutVertexAttrib4fARB(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) { onutGLAPI.onutVertexAttrib4fNV(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4fv(GLuint index, const GLfloat *v) { onutGLAPI.onutVertexAttrib4fv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4fvARB(GLuint index, const GLfloat *v) { onutGLAPI.onutVertexAttrib4fvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4fvNV(GLuint index, const GLfloat *v) { onutGLAPI.onutVertexAttrib4fvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w) { onutGLAPI.onutVertexAttrib4hNV(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4hvNV(GLuint index, const GLhalfNV *v) { onutGLAPI.onutVertexAttrib4hvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4iv(GLuint index, const GLint *v) { onutGLAPI.onutVertexAttrib4iv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4ivARB(GLuint index, const GLint *v) { onutGLAPI.onutVertexAttrib4ivARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w) { onutGLAPI.onutVertexAttrib4s(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w) { onutGLAPI.onutVertexAttrib4sARB(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4sNV(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w) { onutGLAPI.onutVertexAttrib4sNV(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4sv(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib4sv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4svARB(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib4svARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4svNV(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttrib4svNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4ubNV(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w) { onutGLAPI.onutVertexAttrib4ubNV(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttrib4ubv(GLuint index, const GLubyte *v) { onutGLAPI.onutVertexAttrib4ubv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4ubvARB(GLuint index, const GLubyte *v) { onutGLAPI.onutVertexAttrib4ubvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4ubvNV(GLuint index, const GLubyte *v) { onutGLAPI.onutVertexAttrib4ubvNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4uiv(GLuint index, const GLuint *v) { onutGLAPI.onutVertexAttrib4uiv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4uivARB(GLuint index, const GLuint *v) { onutGLAPI.onutVertexAttrib4uivARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4usv(GLuint index, const GLushort *v) { onutGLAPI.onutVertexAttrib4usv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttrib4usvARB(GLuint index, const GLushort *v) { onutGLAPI.onutVertexAttrib4usvARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribArrayObjectATI(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset) { onutGLAPI.onutVertexAttribArrayObjectATI(index, size, type, normalized, stride, buffer, offset); }
ONUT_FORCE_INLINE void _onutVertexAttribBinding(GLuint attribindex, GLuint bindingindex) { onutGLAPI.onutVertexAttribBinding(attribindex, bindingindex); }
ONUT_FORCE_INLINE void _onutVertexAttribDivisor(GLuint index, GLuint divisor) { onutGLAPI.onutVertexAttribDivisor(index, divisor); }
ONUT_FORCE_INLINE void _onutVertexAttribDivisorANGLE(GLuint index, GLuint divisor) { onutGLAPI.onutVertexAttribDivisorANGLE(index, divisor); }
ONUT_FORCE_INLINE void _onutVertexAttribDivisorARB(GLuint index, GLuint divisor) { onutGLAPI.onutVertexAttribDivisorARB(index, divisor); }
ONUT_FORCE_INLINE void _onutVertexAttribDivisorEXT(GLuint index, GLuint divisor) { onutGLAPI.onutVertexAttribDivisorEXT(index, divisor); }
ONUT_FORCE_INLINE void _onutVertexAttribDivisorNV(GLuint index, GLuint divisor) { onutGLAPI.onutVertexAttribDivisorNV(index, divisor); }
ONUT_FORCE_INLINE void _onutVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset) { onutGLAPI.onutVertexAttribFormat(attribindex, size, type, normalized, relativeoffset); }
ONUT_FORCE_INLINE void _onutVertexAttribFormatNV(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride) { onutGLAPI.onutVertexAttribFormatNV(index, size, type, normalized, stride); }
ONUT_FORCE_INLINE void _onutVertexAttribI1i(GLuint index, GLint x) { onutGLAPI.onutVertexAttribI1i(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttribI1iEXT(GLuint index, GLint x) { onutGLAPI.onutVertexAttribI1iEXT(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttribI1iv(GLuint index, const GLint *v) { onutGLAPI.onutVertexAttribI1iv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI1ivEXT(GLuint index, const GLint *v) { onutGLAPI.onutVertexAttribI1ivEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI1ui(GLuint index, GLuint x) { onutGLAPI.onutVertexAttribI1ui(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttribI1uiEXT(GLuint index, GLuint x) { onutGLAPI.onutVertexAttribI1uiEXT(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttribI1uiv(GLuint index, const GLuint *v) { onutGLAPI.onutVertexAttribI1uiv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI1uivEXT(GLuint index, const GLuint *v) { onutGLAPI.onutVertexAttribI1uivEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI2i(GLuint index, GLint x, GLint y) { onutGLAPI.onutVertexAttribI2i(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttribI2iEXT(GLuint index, GLint x, GLint y) { onutGLAPI.onutVertexAttribI2iEXT(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttribI2iv(GLuint index, const GLint *v) { onutGLAPI.onutVertexAttribI2iv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI2ivEXT(GLuint index, const GLint *v) { onutGLAPI.onutVertexAttribI2ivEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI2ui(GLuint index, GLuint x, GLuint y) { onutGLAPI.onutVertexAttribI2ui(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y) { onutGLAPI.onutVertexAttribI2uiEXT(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttribI2uiv(GLuint index, const GLuint *v) { onutGLAPI.onutVertexAttribI2uiv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI2uivEXT(GLuint index, const GLuint *v) { onutGLAPI.onutVertexAttribI2uivEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI3i(GLuint index, GLint x, GLint y, GLint z) { onutGLAPI.onutVertexAttribI3i(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z) { onutGLAPI.onutVertexAttribI3iEXT(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttribI3iv(GLuint index, const GLint *v) { onutGLAPI.onutVertexAttribI3iv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI3ivEXT(GLuint index, const GLint *v) { onutGLAPI.onutVertexAttribI3ivEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z) { onutGLAPI.onutVertexAttribI3ui(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z) { onutGLAPI.onutVertexAttribI3uiEXT(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttribI3uiv(GLuint index, const GLuint *v) { onutGLAPI.onutVertexAttribI3uiv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI3uivEXT(GLuint index, const GLuint *v) { onutGLAPI.onutVertexAttribI3uivEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI4bv(GLuint index, const GLbyte *v) { onutGLAPI.onutVertexAttribI4bv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI4bvEXT(GLuint index, const GLbyte *v) { onutGLAPI.onutVertexAttribI4bvEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w) { onutGLAPI.onutVertexAttribI4i(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w) { onutGLAPI.onutVertexAttribI4iEXT(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttribI4iv(GLuint index, const GLint *v) { onutGLAPI.onutVertexAttribI4iv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI4ivEXT(GLuint index, const GLint *v) { onutGLAPI.onutVertexAttribI4ivEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI4sv(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttribI4sv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI4svEXT(GLuint index, const GLshort *v) { onutGLAPI.onutVertexAttribI4svEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI4ubv(GLuint index, const GLubyte *v) { onutGLAPI.onutVertexAttribI4ubv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI4ubvEXT(GLuint index, const GLubyte *v) { onutGLAPI.onutVertexAttribI4ubvEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) { onutGLAPI.onutVertexAttribI4ui(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) { onutGLAPI.onutVertexAttribI4uiEXT(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttribI4uiv(GLuint index, const GLuint *v) { onutGLAPI.onutVertexAttribI4uiv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI4uivEXT(GLuint index, const GLuint *v) { onutGLAPI.onutVertexAttribI4uivEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI4usv(GLuint index, const GLushort *v) { onutGLAPI.onutVertexAttribI4usv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribI4usvEXT(GLuint index, const GLushort *v) { onutGLAPI.onutVertexAttribI4usvEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) { onutGLAPI.onutVertexAttribIFormat(attribindex, size, type, relativeoffset); }
ONUT_FORCE_INLINE void _onutVertexAttribIFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride) { onutGLAPI.onutVertexAttribIFormatNV(index, size, type, stride); }
ONUT_FORCE_INLINE void _onutVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutVertexAttribIPointer(index, size, type, stride, pointer); }
ONUT_FORCE_INLINE void _onutVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutVertexAttribIPointerEXT(index, size, type, stride, pointer); }
ONUT_FORCE_INLINE void _onutVertexAttribL1d(GLuint index, GLdouble x) { onutGLAPI.onutVertexAttribL1d(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttribL1dEXT(GLuint index, GLdouble x) { onutGLAPI.onutVertexAttribL1dEXT(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttribL1dv(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttribL1dv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL1dvEXT(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttribL1dvEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL1i64NV(GLuint index, GLint64EXT x) { onutGLAPI.onutVertexAttribL1i64NV(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttribL1i64vNV(GLuint index, const GLint64EXT *v) { onutGLAPI.onutVertexAttribL1i64vNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL1ui64ARB(GLuint index, GLuint64EXT x) { onutGLAPI.onutVertexAttribL1ui64ARB(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttribL1ui64NV(GLuint index, GLuint64EXT x) { onutGLAPI.onutVertexAttribL1ui64NV(index, x); }
ONUT_FORCE_INLINE void _onutVertexAttribL1ui64vARB(GLuint index, const GLuint64EXT *v) { onutGLAPI.onutVertexAttribL1ui64vARB(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL1ui64vNV(GLuint index, const GLuint64EXT *v) { onutGLAPI.onutVertexAttribL1ui64vNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL2d(GLuint index, GLdouble x, GLdouble y) { onutGLAPI.onutVertexAttribL2d(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttribL2dEXT(GLuint index, GLdouble x, GLdouble y) { onutGLAPI.onutVertexAttribL2dEXT(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttribL2dv(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttribL2dv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL2dvEXT(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttribL2dvEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL2i64NV(GLuint index, GLint64EXT x, GLint64EXT y) { onutGLAPI.onutVertexAttribL2i64NV(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttribL2i64vNV(GLuint index, const GLint64EXT *v) { onutGLAPI.onutVertexAttribL2i64vNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL2ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y) { onutGLAPI.onutVertexAttribL2ui64NV(index, x, y); }
ONUT_FORCE_INLINE void _onutVertexAttribL2ui64vNV(GLuint index, const GLuint64EXT *v) { onutGLAPI.onutVertexAttribL2ui64vNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL3d(GLuint index, GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutVertexAttribL3d(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttribL3dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutVertexAttribL3dEXT(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttribL3dv(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttribL3dv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL3dvEXT(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttribL3dvEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL3i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z) { onutGLAPI.onutVertexAttribL3i64NV(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttribL3i64vNV(GLuint index, const GLint64EXT *v) { onutGLAPI.onutVertexAttribL3i64vNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL3ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z) { onutGLAPI.onutVertexAttribL3ui64NV(index, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexAttribL3ui64vNV(GLuint index, const GLuint64EXT *v) { onutGLAPI.onutVertexAttribL3ui64vNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutVertexAttribL4d(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttribL4dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutVertexAttribL4dEXT(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttribL4dv(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttribL4dv(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL4dvEXT(GLuint index, const GLdouble *v) { onutGLAPI.onutVertexAttribL4dvEXT(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL4i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w) { onutGLAPI.onutVertexAttribL4i64NV(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttribL4i64vNV(GLuint index, const GLint64EXT *v) { onutGLAPI.onutVertexAttribL4i64vNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribL4ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w) { onutGLAPI.onutVertexAttribL4ui64NV(index, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexAttribL4ui64vNV(GLuint index, const GLuint64EXT *v) { onutGLAPI.onutVertexAttribL4ui64vNV(index, v); }
ONUT_FORCE_INLINE void _onutVertexAttribLFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) { onutGLAPI.onutVertexAttribLFormat(attribindex, size, type, relativeoffset); }
ONUT_FORCE_INLINE void _onutVertexAttribLFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride) { onutGLAPI.onutVertexAttribLFormatNV(index, size, type, stride); }
ONUT_FORCE_INLINE void _onutVertexAttribLPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutVertexAttribLPointer(index, size, type, stride, pointer); }
ONUT_FORCE_INLINE void _onutVertexAttribLPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutVertexAttribLPointerEXT(index, size, type, stride, pointer); }
ONUT_FORCE_INLINE void _onutVertexAttribP1ui(GLuint index, GLenum type, GLboolean normalized, GLuint value) { onutGLAPI.onutVertexAttribP1ui(index, type, normalized, value); }
ONUT_FORCE_INLINE void _onutVertexAttribP1uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value) { onutGLAPI.onutVertexAttribP1uiv(index, type, normalized, value); }
ONUT_FORCE_INLINE void _onutVertexAttribP2ui(GLuint index, GLenum type, GLboolean normalized, GLuint value) { onutGLAPI.onutVertexAttribP2ui(index, type, normalized, value); }
ONUT_FORCE_INLINE void _onutVertexAttribP2uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value) { onutGLAPI.onutVertexAttribP2uiv(index, type, normalized, value); }
ONUT_FORCE_INLINE void _onutVertexAttribP3ui(GLuint index, GLenum type, GLboolean normalized, GLuint value) { onutGLAPI.onutVertexAttribP3ui(index, type, normalized, value); }
ONUT_FORCE_INLINE void _onutVertexAttribP3uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value) { onutGLAPI.onutVertexAttribP3uiv(index, type, normalized, value); }
ONUT_FORCE_INLINE void _onutVertexAttribP4ui(GLuint index, GLenum type, GLboolean normalized, GLuint value) { onutGLAPI.onutVertexAttribP4ui(index, type, normalized, value); }
ONUT_FORCE_INLINE void _onutVertexAttribP4uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value) { onutGLAPI.onutVertexAttribP4uiv(index, type, normalized, value); }
ONUT_FORCE_INLINE void _onutVertexAttribParameteriAMD(GLuint index, GLenum pname, GLint param) { onutGLAPI.onutVertexAttribParameteriAMD(index, pname, param); }
ONUT_FORCE_INLINE void _onutVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer) { onutGLAPI.onutVertexAttribPointer(index, size, type, normalized, stride, pointer); }
ONUT_FORCE_INLINE void _onutVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer) { onutGLAPI.onutVertexAttribPointerARB(index, size, type, normalized, stride, pointer); }
ONUT_FORCE_INLINE void _onutVertexAttribPointerNV(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutVertexAttribPointerNV(index, fsize, type, stride, pointer); }
ONUT_FORCE_INLINE void _onutVertexAttribs1dvNV(GLuint index, GLsizei count, const GLdouble *v) { onutGLAPI.onutVertexAttribs1dvNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs1fvNV(GLuint index, GLsizei count, const GLfloat *v) { onutGLAPI.onutVertexAttribs1fvNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs1hvNV(GLuint index, GLsizei n, const GLhalfNV *v) { onutGLAPI.onutVertexAttribs1hvNV(index, n, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs1svNV(GLuint index, GLsizei count, const GLshort *v) { onutGLAPI.onutVertexAttribs1svNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs2dvNV(GLuint index, GLsizei count, const GLdouble *v) { onutGLAPI.onutVertexAttribs2dvNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs2fvNV(GLuint index, GLsizei count, const GLfloat *v) { onutGLAPI.onutVertexAttribs2fvNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs2hvNV(GLuint index, GLsizei n, const GLhalfNV *v) { onutGLAPI.onutVertexAttribs2hvNV(index, n, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs2svNV(GLuint index, GLsizei count, const GLshort *v) { onutGLAPI.onutVertexAttribs2svNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs3dvNV(GLuint index, GLsizei count, const GLdouble *v) { onutGLAPI.onutVertexAttribs3dvNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs3fvNV(GLuint index, GLsizei count, const GLfloat *v) { onutGLAPI.onutVertexAttribs3fvNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs3hvNV(GLuint index, GLsizei n, const GLhalfNV *v) { onutGLAPI.onutVertexAttribs3hvNV(index, n, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs3svNV(GLuint index, GLsizei count, const GLshort *v) { onutGLAPI.onutVertexAttribs3svNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs4dvNV(GLuint index, GLsizei count, const GLdouble *v) { onutGLAPI.onutVertexAttribs4dvNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs4fvNV(GLuint index, GLsizei count, const GLfloat *v) { onutGLAPI.onutVertexAttribs4fvNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs4hvNV(GLuint index, GLsizei n, const GLhalfNV *v) { onutGLAPI.onutVertexAttribs4hvNV(index, n, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs4svNV(GLuint index, GLsizei count, const GLshort *v) { onutGLAPI.onutVertexAttribs4svNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexAttribs4ubvNV(GLuint index, GLsizei count, const GLubyte *v) { onutGLAPI.onutVertexAttribs4ubvNV(index, count, v); }
ONUT_FORCE_INLINE void _onutVertexBindingDivisor(GLuint bindingindex, GLuint divisor) { onutGLAPI.onutVertexBindingDivisor(bindingindex, divisor); }
ONUT_FORCE_INLINE void _onutVertexBlendARB(GLint count) { onutGLAPI.onutVertexBlendARB(count); }
ONUT_FORCE_INLINE void _onutVertexBlendEnvfATI(GLenum pname, GLfloat param) { onutGLAPI.onutVertexBlendEnvfATI(pname, param); }
ONUT_FORCE_INLINE void _onutVertexBlendEnviATI(GLenum pname, GLint param) { onutGLAPI.onutVertexBlendEnviATI(pname, param); }
ONUT_FORCE_INLINE void _onutVertexFormatNV(GLint size, GLenum type, GLsizei stride) { onutGLAPI.onutVertexFormatNV(size, type, stride); }
ONUT_FORCE_INLINE void _onutVertexP2ui(GLenum type, GLuint value) { onutGLAPI.onutVertexP2ui(type, value); }
ONUT_FORCE_INLINE void _onutVertexP2uiv(GLenum type, const GLuint *value) { onutGLAPI.onutVertexP2uiv(type, value); }
ONUT_FORCE_INLINE void _onutVertexP3ui(GLenum type, GLuint value) { onutGLAPI.onutVertexP3ui(type, value); }
ONUT_FORCE_INLINE void _onutVertexP3uiv(GLenum type, const GLuint *value) { onutGLAPI.onutVertexP3uiv(type, value); }
ONUT_FORCE_INLINE void _onutVertexP4ui(GLenum type, GLuint value) { onutGLAPI.onutVertexP4ui(type, value); }
ONUT_FORCE_INLINE void _onutVertexP4uiv(GLenum type, const GLuint *value) { onutGLAPI.onutVertexP4uiv(type, value); }
ONUT_FORCE_INLINE void _onutVertexPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer) { onutGLAPI.onutVertexPointerEXT(size, type, stride, count, pointer); }
ONUT_FORCE_INLINE void _onutVertexPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride) { onutGLAPI.onutVertexPointerListIBM(size, type, stride, pointer, ptrstride); }
ONUT_FORCE_INLINE void _onutVertexPointervINTEL(GLint size, GLenum type, const void **pointer) { onutGLAPI.onutVertexPointervINTEL(size, type, pointer); }
ONUT_FORCE_INLINE void _onutVertexStream1dATI(GLenum stream, GLdouble x) { onutGLAPI.onutVertexStream1dATI(stream, x); }
ONUT_FORCE_INLINE void _onutVertexStream1dvATI(GLenum stream, const GLdouble *coords) { onutGLAPI.onutVertexStream1dvATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream1fATI(GLenum stream, GLfloat x) { onutGLAPI.onutVertexStream1fATI(stream, x); }
ONUT_FORCE_INLINE void _onutVertexStream1fvATI(GLenum stream, const GLfloat *coords) { onutGLAPI.onutVertexStream1fvATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream1iATI(GLenum stream, GLint x) { onutGLAPI.onutVertexStream1iATI(stream, x); }
ONUT_FORCE_INLINE void _onutVertexStream1ivATI(GLenum stream, const GLint *coords) { onutGLAPI.onutVertexStream1ivATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream1sATI(GLenum stream, GLshort x) { onutGLAPI.onutVertexStream1sATI(stream, x); }
ONUT_FORCE_INLINE void _onutVertexStream1svATI(GLenum stream, const GLshort *coords) { onutGLAPI.onutVertexStream1svATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream2dATI(GLenum stream, GLdouble x, GLdouble y) { onutGLAPI.onutVertexStream2dATI(stream, x, y); }
ONUT_FORCE_INLINE void _onutVertexStream2dvATI(GLenum stream, const GLdouble *coords) { onutGLAPI.onutVertexStream2dvATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream2fATI(GLenum stream, GLfloat x, GLfloat y) { onutGLAPI.onutVertexStream2fATI(stream, x, y); }
ONUT_FORCE_INLINE void _onutVertexStream2fvATI(GLenum stream, const GLfloat *coords) { onutGLAPI.onutVertexStream2fvATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream2iATI(GLenum stream, GLint x, GLint y) { onutGLAPI.onutVertexStream2iATI(stream, x, y); }
ONUT_FORCE_INLINE void _onutVertexStream2ivATI(GLenum stream, const GLint *coords) { onutGLAPI.onutVertexStream2ivATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream2sATI(GLenum stream, GLshort x, GLshort y) { onutGLAPI.onutVertexStream2sATI(stream, x, y); }
ONUT_FORCE_INLINE void _onutVertexStream2svATI(GLenum stream, const GLshort *coords) { onutGLAPI.onutVertexStream2svATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream3dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutVertexStream3dATI(stream, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexStream3dvATI(GLenum stream, const GLdouble *coords) { onutGLAPI.onutVertexStream3dvATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream3fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutVertexStream3fATI(stream, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexStream3fvATI(GLenum stream, const GLfloat *coords) { onutGLAPI.onutVertexStream3fvATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream3iATI(GLenum stream, GLint x, GLint y, GLint z) { onutGLAPI.onutVertexStream3iATI(stream, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexStream3ivATI(GLenum stream, const GLint *coords) { onutGLAPI.onutVertexStream3ivATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream3sATI(GLenum stream, GLshort x, GLshort y, GLshort z) { onutGLAPI.onutVertexStream3sATI(stream, x, y, z); }
ONUT_FORCE_INLINE void _onutVertexStream3svATI(GLenum stream, const GLshort *coords) { onutGLAPI.onutVertexStream3svATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream4dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutVertexStream4dATI(stream, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexStream4dvATI(GLenum stream, const GLdouble *coords) { onutGLAPI.onutVertexStream4dvATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream4fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w) { onutGLAPI.onutVertexStream4fATI(stream, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexStream4fvATI(GLenum stream, const GLfloat *coords) { onutGLAPI.onutVertexStream4fvATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream4iATI(GLenum stream, GLint x, GLint y, GLint z, GLint w) { onutGLAPI.onutVertexStream4iATI(stream, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexStream4ivATI(GLenum stream, const GLint *coords) { onutGLAPI.onutVertexStream4ivATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexStream4sATI(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w) { onutGLAPI.onutVertexStream4sATI(stream, x, y, z, w); }
ONUT_FORCE_INLINE void _onutVertexStream4svATI(GLenum stream, const GLshort *coords) { onutGLAPI.onutVertexStream4svATI(stream, coords); }
ONUT_FORCE_INLINE void _onutVertexWeightPointerEXT(GLint size, GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutVertexWeightPointerEXT(size, type, stride, pointer); }
ONUT_FORCE_INLINE void _onutVertexWeightfEXT(GLfloat weight) { onutGLAPI.onutVertexWeightfEXT(weight); }
ONUT_FORCE_INLINE void _onutVertexWeightfvEXT(const GLfloat *weight) { onutGLAPI.onutVertexWeightfvEXT(weight); }
ONUT_FORCE_INLINE void _onutVertexWeighthNV(GLhalfNV weight) { onutGLAPI.onutVertexWeighthNV(weight); }
ONUT_FORCE_INLINE void _onutVertexWeighthvNV(const GLhalfNV *weight) { onutGLAPI.onutVertexWeighthvNV(weight); }
ONUT_FORCE_INLINE GLenum _onutVideoCaptureNV(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time) { return onutGLAPI.onutVideoCaptureNV(video_capture_slot, sequence_num, capture_time); }
ONUT_FORCE_INLINE void _onutVideoCaptureStreamParameterdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params) { onutGLAPI.onutVideoCaptureStreamParameterdvNV(video_capture_slot, stream, pname, params); }
ONUT_FORCE_INLINE void _onutVideoCaptureStreamParameterfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params) { onutGLAPI.onutVideoCaptureStreamParameterfvNV(video_capture_slot, stream, pname, params); }
ONUT_FORCE_INLINE void _onutVideoCaptureStreamParameterivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params) { onutGLAPI.onutVideoCaptureStreamParameterivNV(video_capture_slot, stream, pname, params); }
ONUT_FORCE_INLINE void _onutViewport(GLint x, GLint y, GLsizei width, GLsizei height) { onutGLAPI.onutViewport(x, y, width, height); }
ONUT_FORCE_INLINE void _onutViewportArrayv(GLuint first, GLsizei count, const GLfloat *v) { onutGLAPI.onutViewportArrayv(first, count, v); }
ONUT_FORCE_INLINE void _onutViewportArrayvNV(GLuint first, GLsizei count, const GLfloat *v) { onutGLAPI.onutViewportArrayvNV(first, count, v); }
ONUT_FORCE_INLINE void _onutViewportArrayvOES(GLuint first, GLsizei count, const GLfloat *v) { onutGLAPI.onutViewportArrayvOES(first, count, v); }
ONUT_FORCE_INLINE void _onutViewportIndexedf(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h) { onutGLAPI.onutViewportIndexedf(index, x, y, w, h); }
ONUT_FORCE_INLINE void _onutViewportIndexedfNV(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h) { onutGLAPI.onutViewportIndexedfNV(index, x, y, w, h); }
ONUT_FORCE_INLINE void _onutViewportIndexedfOES(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h) { onutGLAPI.onutViewportIndexedfOES(index, x, y, w, h); }
ONUT_FORCE_INLINE void _onutViewportIndexedfv(GLuint index, const GLfloat *v) { onutGLAPI.onutViewportIndexedfv(index, v); }
ONUT_FORCE_INLINE void _onutViewportIndexedfvNV(GLuint index, const GLfloat *v) { onutGLAPI.onutViewportIndexedfvNV(index, v); }
ONUT_FORCE_INLINE void _onutViewportIndexedfvOES(GLuint index, const GLfloat *v) { onutGLAPI.onutViewportIndexedfvOES(index, v); }
ONUT_FORCE_INLINE void _onutViewportPositionWScaleNV(GLuint index, GLfloat xcoeff, GLfloat ycoeff) { onutGLAPI.onutViewportPositionWScaleNV(index, xcoeff, ycoeff); }
ONUT_FORCE_INLINE void _onutViewportSwizzleNV(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew) { onutGLAPI.onutViewportSwizzleNV(index, swizzlex, swizzley, swizzlez, swizzlew); }
ONUT_FORCE_INLINE void _onutWaitSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts) { onutGLAPI.onutWaitSemaphoreEXT(semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, srcLayouts); }
ONUT_FORCE_INLINE void _onutWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout) { onutGLAPI.onutWaitSync(sync, flags, timeout); }
ONUT_FORCE_INLINE void _onutWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout) { onutGLAPI.onutWaitSyncAPPLE(sync, flags, timeout); }
ONUT_FORCE_INLINE void _onutWaitVkSemaphoreNV(GLuint64 vkSemaphore) { onutGLAPI.onutWaitVkSemaphoreNV(vkSemaphore); }
ONUT_FORCE_INLINE void _onutWeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights) { onutGLAPI.onutWeightPathsNV(resultPath, numPaths, paths, weights); }
ONUT_FORCE_INLINE void _onutWeightPointerARB(GLint size, GLenum type, GLsizei stride, const void *pointer) { onutGLAPI.onutWeightPointerARB(size, type, stride, pointer); }
ONUT_FORCE_INLINE void _onutWeightbvARB(GLint size, const GLbyte *weights) { onutGLAPI.onutWeightbvARB(size, weights); }
ONUT_FORCE_INLINE void _onutWeightdvARB(GLint size, const GLdouble *weights) { onutGLAPI.onutWeightdvARB(size, weights); }
ONUT_FORCE_INLINE void _onutWeightfvARB(GLint size, const GLfloat *weights) { onutGLAPI.onutWeightfvARB(size, weights); }
ONUT_FORCE_INLINE void _onutWeightivARB(GLint size, const GLint *weights) { onutGLAPI.onutWeightivARB(size, weights); }
ONUT_FORCE_INLINE void _onutWeightsvARB(GLint size, const GLshort *weights) { onutGLAPI.onutWeightsvARB(size, weights); }
ONUT_FORCE_INLINE void _onutWeightubvARB(GLint size, const GLubyte *weights) { onutGLAPI.onutWeightubvARB(size, weights); }
ONUT_FORCE_INLINE void _onutWeightuivARB(GLint size, const GLuint *weights) { onutGLAPI.onutWeightuivARB(size, weights); }
ONUT_FORCE_INLINE void _onutWeightusvARB(GLint size, const GLushort *weights) { onutGLAPI.onutWeightusvARB(size, weights); }
ONUT_FORCE_INLINE void _onutWindowPos2d(GLdouble x, GLdouble y) { onutGLAPI.onutWindowPos2d(x, y); }
ONUT_FORCE_INLINE void _onutWindowPos2dARB(GLdouble x, GLdouble y) { onutGLAPI.onutWindowPos2dARB(x, y); }
ONUT_FORCE_INLINE void _onutWindowPos2dMESA(GLdouble x, GLdouble y) { onutGLAPI.onutWindowPos2dMESA(x, y); }
ONUT_FORCE_INLINE void _onutWindowPos2dv(const GLdouble *v) { onutGLAPI.onutWindowPos2dv(v); }
ONUT_FORCE_INLINE void _onutWindowPos2dvARB(const GLdouble *v) { onutGLAPI.onutWindowPos2dvARB(v); }
ONUT_FORCE_INLINE void _onutWindowPos2dvMESA(const GLdouble *v) { onutGLAPI.onutWindowPos2dvMESA(v); }
ONUT_FORCE_INLINE void _onutWindowPos2f(GLfloat x, GLfloat y) { onutGLAPI.onutWindowPos2f(x, y); }
ONUT_FORCE_INLINE void _onutWindowPos2fARB(GLfloat x, GLfloat y) { onutGLAPI.onutWindowPos2fARB(x, y); }
ONUT_FORCE_INLINE void _onutWindowPos2fMESA(GLfloat x, GLfloat y) { onutGLAPI.onutWindowPos2fMESA(x, y); }
ONUT_FORCE_INLINE void _onutWindowPos2fv(const GLfloat *v) { onutGLAPI.onutWindowPos2fv(v); }
ONUT_FORCE_INLINE void _onutWindowPos2fvARB(const GLfloat *v) { onutGLAPI.onutWindowPos2fvARB(v); }
ONUT_FORCE_INLINE void _onutWindowPos2fvMESA(const GLfloat *v) { onutGLAPI.onutWindowPos2fvMESA(v); }
ONUT_FORCE_INLINE void _onutWindowPos2i(GLint x, GLint y) { onutGLAPI.onutWindowPos2i(x, y); }
ONUT_FORCE_INLINE void _onutWindowPos2iARB(GLint x, GLint y) { onutGLAPI.onutWindowPos2iARB(x, y); }
ONUT_FORCE_INLINE void _onutWindowPos2iMESA(GLint x, GLint y) { onutGLAPI.onutWindowPos2iMESA(x, y); }
ONUT_FORCE_INLINE void _onutWindowPos2iv(const GLint *v) { onutGLAPI.onutWindowPos2iv(v); }
ONUT_FORCE_INLINE void _onutWindowPos2ivARB(const GLint *v) { onutGLAPI.onutWindowPos2ivARB(v); }
ONUT_FORCE_INLINE void _onutWindowPos2ivMESA(const GLint *v) { onutGLAPI.onutWindowPos2ivMESA(v); }
ONUT_FORCE_INLINE void _onutWindowPos2s(GLshort x, GLshort y) { onutGLAPI.onutWindowPos2s(x, y); }
ONUT_FORCE_INLINE void _onutWindowPos2sARB(GLshort x, GLshort y) { onutGLAPI.onutWindowPos2sARB(x, y); }
ONUT_FORCE_INLINE void _onutWindowPos2sMESA(GLshort x, GLshort y) { onutGLAPI.onutWindowPos2sMESA(x, y); }
ONUT_FORCE_INLINE void _onutWindowPos2sv(const GLshort *v) { onutGLAPI.onutWindowPos2sv(v); }
ONUT_FORCE_INLINE void _onutWindowPos2svARB(const GLshort *v) { onutGLAPI.onutWindowPos2svARB(v); }
ONUT_FORCE_INLINE void _onutWindowPos2svMESA(const GLshort *v) { onutGLAPI.onutWindowPos2svMESA(v); }
ONUT_FORCE_INLINE void _onutWindowPos3d(GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutWindowPos3d(x, y, z); }
ONUT_FORCE_INLINE void _onutWindowPos3dARB(GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutWindowPos3dARB(x, y, z); }
ONUT_FORCE_INLINE void _onutWindowPos3dMESA(GLdouble x, GLdouble y, GLdouble z) { onutGLAPI.onutWindowPos3dMESA(x, y, z); }
ONUT_FORCE_INLINE void _onutWindowPos3dv(const GLdouble *v) { onutGLAPI.onutWindowPos3dv(v); }
ONUT_FORCE_INLINE void _onutWindowPos3dvARB(const GLdouble *v) { onutGLAPI.onutWindowPos3dvARB(v); }
ONUT_FORCE_INLINE void _onutWindowPos3dvMESA(const GLdouble *v) { onutGLAPI.onutWindowPos3dvMESA(v); }
ONUT_FORCE_INLINE void _onutWindowPos3f(GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutWindowPos3f(x, y, z); }
ONUT_FORCE_INLINE void _onutWindowPos3fARB(GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutWindowPos3fARB(x, y, z); }
ONUT_FORCE_INLINE void _onutWindowPos3fMESA(GLfloat x, GLfloat y, GLfloat z) { onutGLAPI.onutWindowPos3fMESA(x, y, z); }
ONUT_FORCE_INLINE void _onutWindowPos3fv(const GLfloat *v) { onutGLAPI.onutWindowPos3fv(v); }
ONUT_FORCE_INLINE void _onutWindowPos3fvARB(const GLfloat *v) { onutGLAPI.onutWindowPos3fvARB(v); }
ONUT_FORCE_INLINE void _onutWindowPos3fvMESA(const GLfloat *v) { onutGLAPI.onutWindowPos3fvMESA(v); }
ONUT_FORCE_INLINE void _onutWindowPos3i(GLint x, GLint y, GLint z) { onutGLAPI.onutWindowPos3i(x, y, z); }
ONUT_FORCE_INLINE void _onutWindowPos3iARB(GLint x, GLint y, GLint z) { onutGLAPI.onutWindowPos3iARB(x, y, z); }
ONUT_FORCE_INLINE void _onutWindowPos3iMESA(GLint x, GLint y, GLint z) { onutGLAPI.onutWindowPos3iMESA(x, y, z); }
ONUT_FORCE_INLINE void _onutWindowPos3iv(const GLint *v) { onutGLAPI.onutWindowPos3iv(v); }
ONUT_FORCE_INLINE void _onutWindowPos3ivARB(const GLint *v) { onutGLAPI.onutWindowPos3ivARB(v); }
ONUT_FORCE_INLINE void _onutWindowPos3ivMESA(const GLint *v) { onutGLAPI.onutWindowPos3ivMESA(v); }
ONUT_FORCE_INLINE void _onutWindowPos3s(GLshort x, GLshort y, GLshort z) { onutGLAPI.onutWindowPos3s(x, y, z); }
ONUT_FORCE_INLINE void _onutWindowPos3sARB(GLshort x, GLshort y, GLshort z) { onutGLAPI.onutWindowPos3sARB(x, y, z); }
ONUT_FORCE_INLINE void _onutWindowPos3sMESA(GLshort x, GLshort y, GLshort z) { onutGLAPI.onutWindowPos3sMESA(x, y, z); }
ONUT_FORCE_INLINE void _onutWindowPos3sv(const GLshort *v) { onutGLAPI.onutWindowPos3sv(v); }
ONUT_FORCE_INLINE void _onutWindowPos3svARB(const GLshort *v) { onutGLAPI.onutWindowPos3svARB(v); }
ONUT_FORCE_INLINE void _onutWindowPos3svMESA(const GLshort *v) { onutGLAPI.onutWindowPos3svMESA(v); }
ONUT_FORCE_INLINE void _onutWindowPos4dMESA(GLdouble x, GLdouble y, GLdouble z, GLdouble w) { onutGLAPI.onutWindowPos4dMESA(x, y, z, w); }
ONUT_FORCE_INLINE void _onutWindowPos4dvMESA(const GLdouble *v) { onutGLAPI.onutWindowPos4dvMESA(v); }
ONUT_FORCE_INLINE void _onutWindowPos4fMESA(GLfloat x, GLfloat y, GLfloat z, GLfloat w) { onutGLAPI.onutWindowPos4fMESA(x, y, z, w); }
ONUT_FORCE_INLINE void _onutWindowPos4fvMESA(const GLfloat *v) { onutGLAPI.onutWindowPos4fvMESA(v); }
ONUT_FORCE_INLINE void _onutWindowPos4iMESA(GLint x, GLint y, GLint z, GLint w) { onutGLAPI.onutWindowPos4iMESA(x, y, z, w); }
ONUT_FORCE_INLINE void _onutWindowPos4ivMESA(const GLint *v) { onutGLAPI.onutWindowPos4ivMESA(v); }
ONUT_FORCE_INLINE void _onutWindowPos4sMESA(GLshort x, GLshort y, GLshort z, GLshort w) { onutGLAPI.onutWindowPos4sMESA(x, y, z, w); }
ONUT_FORCE_INLINE void _onutWindowPos4svMESA(const GLshort *v) { onutGLAPI.onutWindowPos4svMESA(v); }
ONUT_FORCE_INLINE void _onutWindowRectanglesEXT(GLenum mode, GLsizei count, const GLint *box) { onutGLAPI.onutWindowRectanglesEXT(mode, count, box); }
ONUT_FORCE_INLINE void _onutWriteMaskEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW) { onutGLAPI.onutWriteMaskEXT(res, in, outX, outY, outZ, outW); }

#define glAccumxOES _onutAccumxOES
#define glAcquireKeyedMutexWin32EXT _onutAcquireKeyedMutexWin32EXT
#define glActiveProgramEXT _onutActiveProgramEXT
#define glActiveShaderProgram _onutActiveShaderProgram
#define glActiveShaderProgramEXT _onutActiveShaderProgramEXT
#define glActiveStencilFaceEXT _onutActiveStencilFaceEXT
#define glActiveTexture _onutActiveTexture
#define glActiveTextureARB _onutActiveTextureARB
#define glActiveVaryingNV _onutActiveVaryingNV
#define glAlphaFragmentOp1ATI _onutAlphaFragmentOp1ATI
#define glAlphaFragmentOp2ATI _onutAlphaFragmentOp2ATI
#define glAlphaFragmentOp3ATI _onutAlphaFragmentOp3ATI
#define glAlphaFuncQCOM _onutAlphaFuncQCOM
#define glAlphaFuncxOES _onutAlphaFuncxOES
#define glAlphaToCoverageDitherControlNV _onutAlphaToCoverageDitherControlNV
#define glApplyFramebufferAttachmentCMAAINTEL _onutApplyFramebufferAttachmentCMAAINTEL
#define glApplyTextureEXT _onutApplyTextureEXT
#define glAreProgramsResidentNV _onutAreProgramsResidentNV
#define glAreTexturesResidentEXT _onutAreTexturesResidentEXT
#define glArrayElementEXT _onutArrayElementEXT
#define glArrayObjectATI _onutArrayObjectATI
#define glAsyncMarkerSGIX _onutAsyncMarkerSGIX
#define glAttachObjectARB _onutAttachObjectARB
#define glAttachShader _onutAttachShader
#define glBeginConditionalRender _onutBeginConditionalRender
#define glBeginConditionalRenderNV _onutBeginConditionalRenderNV
#define glBeginConditionalRenderNVX _onutBeginConditionalRenderNVX
#define glBeginFragmentShaderATI _onutBeginFragmentShaderATI
#define glBeginOcclusionQueryNV _onutBeginOcclusionQueryNV
#define glBeginPerfMonitorAMD _onutBeginPerfMonitorAMD
#define glBeginPerfQueryINTEL _onutBeginPerfQueryINTEL
#define glBeginQuery _onutBeginQuery
#define glBeginQueryARB _onutBeginQueryARB
#define glBeginQueryEXT _onutBeginQueryEXT
#define glBeginQueryIndexed _onutBeginQueryIndexed
#define glBeginTransformFeedback _onutBeginTransformFeedback
#define glBeginTransformFeedbackEXT _onutBeginTransformFeedbackEXT
#define glBeginTransformFeedbackNV _onutBeginTransformFeedbackNV
#define glBeginVertexShaderEXT _onutBeginVertexShaderEXT
#define glBeginVideoCaptureNV _onutBeginVideoCaptureNV
#define glBindAttribLocation _onutBindAttribLocation
#define glBindAttribLocationARB _onutBindAttribLocationARB
#define glBindBuffer _onutBindBuffer
#define glBindBufferARB _onutBindBufferARB
#define glBindBufferBase _onutBindBufferBase
#define glBindBufferBaseEXT _onutBindBufferBaseEXT
#define glBindBufferBaseNV _onutBindBufferBaseNV
#define glBindBufferOffsetEXT _onutBindBufferOffsetEXT
#define glBindBufferOffsetNV _onutBindBufferOffsetNV
#define glBindBufferRange _onutBindBufferRange
#define glBindBufferRangeEXT _onutBindBufferRangeEXT
#define glBindBufferRangeNV _onutBindBufferRangeNV
#define glBindBuffersBase _onutBindBuffersBase
#define glBindBuffersRange _onutBindBuffersRange
#define glBindFragDataLocation _onutBindFragDataLocation
#define glBindFragDataLocationEXT _onutBindFragDataLocationEXT
#define glBindFragDataLocationIndexed _onutBindFragDataLocationIndexed
#define glBindFragDataLocationIndexedEXT _onutBindFragDataLocationIndexedEXT
#define glBindFragmentShaderATI _onutBindFragmentShaderATI
#define glBindFramebuffer _onutBindFramebuffer
#define glBindFramebufferEXT _onutBindFramebufferEXT
#define glBindImageTexture _onutBindImageTexture
#define glBindImageTextureEXT _onutBindImageTextureEXT
#define glBindImageTextures _onutBindImageTextures
#define glBindLightParameterEXT _onutBindLightParameterEXT
#define glBindMaterialParameterEXT _onutBindMaterialParameterEXT
#define glBindMultiTextureEXT _onutBindMultiTextureEXT
#define glBindParameterEXT _onutBindParameterEXT
#define glBindProgramARB _onutBindProgramARB
#define glBindProgramNV _onutBindProgramNV
#define glBindProgramPipeline _onutBindProgramPipeline
#define glBindProgramPipelineEXT _onutBindProgramPipelineEXT
#define glBindRenderbuffer _onutBindRenderbuffer
#define glBindRenderbufferEXT _onutBindRenderbufferEXT
#define glBindSampler _onutBindSampler
#define glBindSamplers _onutBindSamplers
#define glBindTexGenParameterEXT _onutBindTexGenParameterEXT
#define glBindTexture _onutBindTexture
#define glBindTextureEXT _onutBindTextureEXT
#define glBindTextureUnit _onutBindTextureUnit
#define glBindTextureUnitParameterEXT _onutBindTextureUnitParameterEXT
#define glBindTextures _onutBindTextures
#define glBindTransformFeedback _onutBindTransformFeedback
#define glBindTransformFeedbackNV _onutBindTransformFeedbackNV
#define glBindVertexArray _onutBindVertexArray
#define glBindVertexArrayAPPLE _onutBindVertexArrayAPPLE
#define glBindVertexArrayOES _onutBindVertexArrayOES
#define glBindVertexBuffer _onutBindVertexBuffer
#define glBindVertexBuffers _onutBindVertexBuffers
#define glBindVertexShaderEXT _onutBindVertexShaderEXT
#define glBindVideoCaptureStreamBufferNV _onutBindVideoCaptureStreamBufferNV
#define glBindVideoCaptureStreamTextureNV _onutBindVideoCaptureStreamTextureNV
#define glBinormal3bEXT _onutBinormal3bEXT
#define glBinormal3bvEXT _onutBinormal3bvEXT
#define glBinormal3dEXT _onutBinormal3dEXT
#define glBinormal3dvEXT _onutBinormal3dvEXT
#define glBinormal3fEXT _onutBinormal3fEXT
#define glBinormal3fvEXT _onutBinormal3fvEXT
#define glBinormal3iEXT _onutBinormal3iEXT
#define glBinormal3ivEXT _onutBinormal3ivEXT
#define glBinormal3sEXT _onutBinormal3sEXT
#define glBinormal3svEXT _onutBinormal3svEXT
#define glBinormalPointerEXT _onutBinormalPointerEXT
#define glBitmapxOES _onutBitmapxOES
#define glBlendBarrier _onutBlendBarrier
#define glBlendBarrierKHR _onutBlendBarrierKHR
#define glBlendBarrierNV _onutBlendBarrierNV
#define glBlendColor _onutBlendColor
#define glBlendColorEXT _onutBlendColorEXT
#define glBlendColorxOES _onutBlendColorxOES
#define glBlendEquation _onutBlendEquation
#define glBlendEquationEXT _onutBlendEquationEXT
#define glBlendEquationIndexedAMD _onutBlendEquationIndexedAMD
#define glBlendEquationSeparate _onutBlendEquationSeparate
#define glBlendEquationSeparateEXT _onutBlendEquationSeparateEXT
#define glBlendEquationSeparateIndexedAMD _onutBlendEquationSeparateIndexedAMD
#define glBlendEquationSeparatei _onutBlendEquationSeparatei
#define glBlendEquationSeparateiARB _onutBlendEquationSeparateiARB
#define glBlendEquationSeparateiEXT _onutBlendEquationSeparateiEXT
#define glBlendEquationSeparateiOES _onutBlendEquationSeparateiOES
#define glBlendEquationi _onutBlendEquationi
#define glBlendEquationiARB _onutBlendEquationiARB
#define glBlendEquationiEXT _onutBlendEquationiEXT
#define glBlendEquationiOES _onutBlendEquationiOES
#define glBlendFunc _onutBlendFunc
#define glBlendFuncIndexedAMD _onutBlendFuncIndexedAMD
#define glBlendFuncSeparate _onutBlendFuncSeparate
#define glBlendFuncSeparateEXT _onutBlendFuncSeparateEXT
#define glBlendFuncSeparateINGR _onutBlendFuncSeparateINGR
#define glBlendFuncSeparateIndexedAMD _onutBlendFuncSeparateIndexedAMD
#define glBlendFuncSeparatei _onutBlendFuncSeparatei
#define glBlendFuncSeparateiARB _onutBlendFuncSeparateiARB
#define glBlendFuncSeparateiEXT _onutBlendFuncSeparateiEXT
#define glBlendFuncSeparateiOES _onutBlendFuncSeparateiOES
#define glBlendFunci _onutBlendFunci
#define glBlendFunciARB _onutBlendFunciARB
#define glBlendFunciEXT _onutBlendFunciEXT
#define glBlendFunciOES _onutBlendFunciOES
#define glBlendParameteriNV _onutBlendParameteriNV
#define glBlitFramebuffer _onutBlitFramebuffer
#define glBlitFramebufferANGLE _onutBlitFramebufferANGLE
#define glBlitFramebufferEXT _onutBlitFramebufferEXT
#define glBlitFramebufferNV _onutBlitFramebufferNV
#define glBlitNamedFramebuffer _onutBlitNamedFramebuffer
#define glBufferAddressRangeNV _onutBufferAddressRangeNV
#define glBufferData _onutBufferData
#define glBufferDataARB _onutBufferDataARB
#define glBufferPageCommitmentARB _onutBufferPageCommitmentARB
#define glBufferParameteriAPPLE _onutBufferParameteriAPPLE
#define glBufferRegionEnabled _onutBufferRegionEnabled
#define glBufferStorage _onutBufferStorage
#define glBufferStorageEXT _onutBufferStorageEXT
#define glBufferStorageExternalEXT _onutBufferStorageExternalEXT
#define glBufferStorageMemEXT _onutBufferStorageMemEXT
#define glBufferSubData _onutBufferSubData
#define glBufferSubDataARB _onutBufferSubDataARB
#define glCallCommandListNV _onutCallCommandListNV
#define glCheckFramebufferStatus _onutCheckFramebufferStatus
#define glCheckFramebufferStatusEXT _onutCheckFramebufferStatusEXT
#define glCheckNamedFramebufferStatus _onutCheckNamedFramebufferStatus
#define glCheckNamedFramebufferStatusEXT _onutCheckNamedFramebufferStatusEXT
#define glClampColor _onutClampColor
#define glClampColorARB _onutClampColorARB
#define glClear _onutClear
#define glClearAccumxOES _onutClearAccumxOES
#define glClearBufferData _onutClearBufferData
#define glClearBufferSubData _onutClearBufferSubData
#define glClearBufferfi _onutClearBufferfi
#define glClearBufferfv _onutClearBufferfv
#define glClearBufferiv _onutClearBufferiv
#define glClearBufferuiv _onutClearBufferuiv
#define glClearColor _onutClearColor
#define glClearColorIiEXT _onutClearColorIiEXT
#define glClearColorIuiEXT _onutClearColorIuiEXT
#define glClearColorxOES _onutClearColorxOES
#define glClearDepth _onutClearDepth
#define glClearDepthdNV _onutClearDepthdNV
#define glClearDepthf _onutClearDepthf
#define glClearDepthfOES _onutClearDepthfOES
#define glClearDepthxOES _onutClearDepthxOES
#define glClearNamedBufferData _onutClearNamedBufferData
#define glClearNamedBufferDataEXT _onutClearNamedBufferDataEXT
#define glClearNamedBufferSubData _onutClearNamedBufferSubData
#define glClearNamedBufferSubDataEXT _onutClearNamedBufferSubDataEXT
#define glClearNamedFramebufferfi _onutClearNamedFramebufferfi
#define glClearNamedFramebufferfv _onutClearNamedFramebufferfv
#define glClearNamedFramebufferiv _onutClearNamedFramebufferiv
#define glClearNamedFramebufferuiv _onutClearNamedFramebufferuiv
#define glClearPixelLocalStorageuiEXT _onutClearPixelLocalStorageuiEXT
#define glClearStencil _onutClearStencil
#define glClearTexImage _onutClearTexImage
#define glClearTexImageEXT _onutClearTexImageEXT
#define glClearTexSubImage _onutClearTexSubImage
#define glClearTexSubImageEXT _onutClearTexSubImageEXT
#define glClientActiveTexture _onutClientActiveTexture
#define glClientActiveTextureARB _onutClientActiveTextureARB
#define glClientActiveVertexStreamATI _onutClientActiveVertexStreamATI
#define glClientAttribDefaultEXT _onutClientAttribDefaultEXT
#define glClientWaitSync _onutClientWaitSync
#define glClientWaitSyncAPPLE _onutClientWaitSyncAPPLE
#define glClipControl _onutClipControl
#define glClipPlanefOES _onutClipPlanefOES
#define glClipPlanexOES _onutClipPlanexOES
#define glColor3fVertex3fSUN _onutColor3fVertex3fSUN
#define glColor3fVertex3fvSUN _onutColor3fVertex3fvSUN
#define glColor3hNV _onutColor3hNV
#define glColor3hvNV _onutColor3hvNV
#define glColor3xOES _onutColor3xOES
#define glColor3xvOES _onutColor3xvOES
#define glColor4fNormal3fVertex3fSUN _onutColor4fNormal3fVertex3fSUN
#define glColor4fNormal3fVertex3fvSUN _onutColor4fNormal3fVertex3fvSUN
#define glColor4hNV _onutColor4hNV
#define glColor4hvNV _onutColor4hvNV
#define glColor4ubVertex2fSUN _onutColor4ubVertex2fSUN
#define glColor4ubVertex2fvSUN _onutColor4ubVertex2fvSUN
#define glColor4ubVertex3fSUN _onutColor4ubVertex3fSUN
#define glColor4ubVertex3fvSUN _onutColor4ubVertex3fvSUN
#define glColor4xOES _onutColor4xOES
#define glColor4xvOES _onutColor4xvOES
#define glColorFormatNV _onutColorFormatNV
#define glColorFragmentOp1ATI _onutColorFragmentOp1ATI
#define glColorFragmentOp2ATI _onutColorFragmentOp2ATI
#define glColorFragmentOp3ATI _onutColorFragmentOp3ATI
#define glColorMask _onutColorMask
#define glColorMaskIndexedEXT _onutColorMaskIndexedEXT
#define glColorMaski _onutColorMaski
#define glColorMaskiEXT _onutColorMaskiEXT
#define glColorMaskiOES _onutColorMaskiOES
#define glColorP3ui _onutColorP3ui
#define glColorP3uiv _onutColorP3uiv
#define glColorP4ui _onutColorP4ui
#define glColorP4uiv _onutColorP4uiv
#define glColorPointerEXT _onutColorPointerEXT
#define glColorPointerListIBM _onutColorPointerListIBM
#define glColorPointervINTEL _onutColorPointervINTEL
#define glColorSubTable _onutColorSubTable
#define glColorSubTableEXT _onutColorSubTableEXT
#define glColorTable _onutColorTable
#define glColorTableEXT _onutColorTableEXT
#define glColorTableParameterfv _onutColorTableParameterfv
#define glColorTableParameterfvSGI _onutColorTableParameterfvSGI
#define glColorTableParameteriv _onutColorTableParameteriv
#define glColorTableParameterivSGI _onutColorTableParameterivSGI
#define glColorTableSGI _onutColorTableSGI
#define glCombinerInputNV _onutCombinerInputNV
#define glCombinerOutputNV _onutCombinerOutputNV
#define glCombinerParameterfNV _onutCombinerParameterfNV
#define glCombinerParameterfvNV _onutCombinerParameterfvNV
#define glCombinerParameteriNV _onutCombinerParameteriNV
#define glCombinerParameterivNV _onutCombinerParameterivNV
#define glCombinerStageParameterfvNV _onutCombinerStageParameterfvNV
#define glCommandListSegmentsNV _onutCommandListSegmentsNV
#define glCompileCommandListNV _onutCompileCommandListNV
#define glCompileShader _onutCompileShader
#define glCompileShaderARB _onutCompileShaderARB
#define glCompileShaderIncludeARB _onutCompileShaderIncludeARB
#define glCompressedMultiTexImage1DEXT _onutCompressedMultiTexImage1DEXT
#define glCompressedMultiTexImage2DEXT _onutCompressedMultiTexImage2DEXT
#define glCompressedMultiTexImage3DEXT _onutCompressedMultiTexImage3DEXT
#define glCompressedMultiTexSubImage1DEXT _onutCompressedMultiTexSubImage1DEXT
#define glCompressedMultiTexSubImage2DEXT _onutCompressedMultiTexSubImage2DEXT
#define glCompressedMultiTexSubImage3DEXT _onutCompressedMultiTexSubImage3DEXT
#define glCompressedTexImage1D _onutCompressedTexImage1D
#define glCompressedTexImage1DARB _onutCompressedTexImage1DARB
#define glCompressedTexImage2D _onutCompressedTexImage2D
#define glCompressedTexImage2DARB _onutCompressedTexImage2DARB
#define glCompressedTexImage3D _onutCompressedTexImage3D
#define glCompressedTexImage3DARB _onutCompressedTexImage3DARB
#define glCompressedTexImage3DOES _onutCompressedTexImage3DOES
#define glCompressedTexSubImage1D _onutCompressedTexSubImage1D
#define glCompressedTexSubImage1DARB _onutCompressedTexSubImage1DARB
#define glCompressedTexSubImage2D _onutCompressedTexSubImage2D
#define glCompressedTexSubImage2DARB _onutCompressedTexSubImage2DARB
#define glCompressedTexSubImage3D _onutCompressedTexSubImage3D
#define glCompressedTexSubImage3DARB _onutCompressedTexSubImage3DARB
#define glCompressedTexSubImage3DOES _onutCompressedTexSubImage3DOES
#define glCompressedTextureImage1DEXT _onutCompressedTextureImage1DEXT
#define glCompressedTextureImage2DEXT _onutCompressedTextureImage2DEXT
#define glCompressedTextureImage3DEXT _onutCompressedTextureImage3DEXT
#define glCompressedTextureSubImage1D _onutCompressedTextureSubImage1D
#define glCompressedTextureSubImage1DEXT _onutCompressedTextureSubImage1DEXT
#define glCompressedTextureSubImage2D _onutCompressedTextureSubImage2D
#define glCompressedTextureSubImage2DEXT _onutCompressedTextureSubImage2DEXT
#define glCompressedTextureSubImage3D _onutCompressedTextureSubImage3D
#define glCompressedTextureSubImage3DEXT _onutCompressedTextureSubImage3DEXT
#define glConservativeRasterParameterfNV _onutConservativeRasterParameterfNV
#define glConservativeRasterParameteriNV _onutConservativeRasterParameteriNV
#define glConvolutionFilter1D _onutConvolutionFilter1D
#define glConvolutionFilter1DEXT _onutConvolutionFilter1DEXT
#define glConvolutionFilter2D _onutConvolutionFilter2D
#define glConvolutionFilter2DEXT _onutConvolutionFilter2DEXT
#define glConvolutionParameterf _onutConvolutionParameterf
#define glConvolutionParameterfEXT _onutConvolutionParameterfEXT
#define glConvolutionParameterfv _onutConvolutionParameterfv
#define glConvolutionParameterfvEXT _onutConvolutionParameterfvEXT
#define glConvolutionParameteri _onutConvolutionParameteri
#define glConvolutionParameteriEXT _onutConvolutionParameteriEXT
#define glConvolutionParameteriv _onutConvolutionParameteriv
#define glConvolutionParameterivEXT _onutConvolutionParameterivEXT
#define glConvolutionParameterxOES _onutConvolutionParameterxOES
#define glConvolutionParameterxvOES _onutConvolutionParameterxvOES
#define glCopyBufferSubData _onutCopyBufferSubData
#define glCopyBufferSubDataNV _onutCopyBufferSubDataNV
#define glCopyColorSubTable _onutCopyColorSubTable
#define glCopyColorSubTableEXT _onutCopyColorSubTableEXT
#define glCopyColorTable _onutCopyColorTable
#define glCopyColorTableSGI _onutCopyColorTableSGI
#define glCopyConvolutionFilter1D _onutCopyConvolutionFilter1D
#define glCopyConvolutionFilter1DEXT _onutCopyConvolutionFilter1DEXT
#define glCopyConvolutionFilter2D _onutCopyConvolutionFilter2D
#define glCopyConvolutionFilter2DEXT _onutCopyConvolutionFilter2DEXT
#define glCopyImageSubData _onutCopyImageSubData
#define glCopyImageSubDataEXT _onutCopyImageSubDataEXT
#define glCopyImageSubDataNV _onutCopyImageSubDataNV
#define glCopyImageSubDataOES _onutCopyImageSubDataOES
#define glCopyMultiTexImage1DEXT _onutCopyMultiTexImage1DEXT
#define glCopyMultiTexImage2DEXT _onutCopyMultiTexImage2DEXT
#define glCopyMultiTexSubImage1DEXT _onutCopyMultiTexSubImage1DEXT
#define glCopyMultiTexSubImage2DEXT _onutCopyMultiTexSubImage2DEXT
#define glCopyMultiTexSubImage3DEXT _onutCopyMultiTexSubImage3DEXT
#define glCopyNamedBufferSubData _onutCopyNamedBufferSubData
#define glCopyPathNV _onutCopyPathNV
#define glCopyTexImage1D _onutCopyTexImage1D
#define glCopyTexImage1DEXT _onutCopyTexImage1DEXT
#define glCopyTexImage2D _onutCopyTexImage2D
#define glCopyTexImage2DEXT _onutCopyTexImage2DEXT
#define glCopyTexSubImage1D _onutCopyTexSubImage1D
#define glCopyTexSubImage1DEXT _onutCopyTexSubImage1DEXT
#define glCopyTexSubImage2D _onutCopyTexSubImage2D
#define glCopyTexSubImage2DEXT _onutCopyTexSubImage2DEXT
#define glCopyTexSubImage3D _onutCopyTexSubImage3D
#define glCopyTexSubImage3DEXT _onutCopyTexSubImage3DEXT
#define glCopyTexSubImage3DOES _onutCopyTexSubImage3DOES
#define glCopyTextureImage1DEXT _onutCopyTextureImage1DEXT
#define glCopyTextureImage2DEXT _onutCopyTextureImage2DEXT
#define glCopyTextureLevelsAPPLE _onutCopyTextureLevelsAPPLE
#define glCopyTextureSubImage1D _onutCopyTextureSubImage1D
#define glCopyTextureSubImage1DEXT _onutCopyTextureSubImage1DEXT
#define glCopyTextureSubImage2D _onutCopyTextureSubImage2D
#define glCopyTextureSubImage2DEXT _onutCopyTextureSubImage2DEXT
#define glCopyTextureSubImage3D _onutCopyTextureSubImage3D
#define glCopyTextureSubImage3DEXT _onutCopyTextureSubImage3DEXT
#define glCoverFillPathInstancedNV _onutCoverFillPathInstancedNV
#define glCoverFillPathNV _onutCoverFillPathNV
#define glCoverStrokePathInstancedNV _onutCoverStrokePathInstancedNV
#define glCoverStrokePathNV _onutCoverStrokePathNV
#define glCoverageMaskNV _onutCoverageMaskNV
#define glCoverageModulationNV _onutCoverageModulationNV
#define glCoverageModulationTableNV _onutCoverageModulationTableNV
#define glCoverageOperationNV _onutCoverageOperationNV
#define glCreateBuffers _onutCreateBuffers
#define glCreateCommandListsNV _onutCreateCommandListsNV
#define glCreateFramebuffers _onutCreateFramebuffers
#define glCreateMemoryObjectsEXT _onutCreateMemoryObjectsEXT
#define glCreatePerfQueryINTEL _onutCreatePerfQueryINTEL
#define glCreateProgram _onutCreateProgram
#define glCreateProgramObjectARB _onutCreateProgramObjectARB
#define glCreateProgramPipelines _onutCreateProgramPipelines
#define glCreateQueries _onutCreateQueries
#define glCreateRenderbuffers _onutCreateRenderbuffers
#define glCreateSamplers _onutCreateSamplers
#define glCreateShader _onutCreateShader
#define glCreateShaderObjectARB _onutCreateShaderObjectARB
#define glCreateShaderProgramEXT _onutCreateShaderProgramEXT
#define glCreateShaderProgramv _onutCreateShaderProgramv
#define glCreateShaderProgramvEXT _onutCreateShaderProgramvEXT
#define glCreateStatesNV _onutCreateStatesNV
#define glCreateSyncFromCLeventARB _onutCreateSyncFromCLeventARB
#define glCreateTextures _onutCreateTextures
#define glCreateTransformFeedbacks _onutCreateTransformFeedbacks
#define glCreateVertexArrays _onutCreateVertexArrays
#define glCullFace _onutCullFace
#define glCullParameterdvEXT _onutCullParameterdvEXT
#define glCullParameterfvEXT _onutCullParameterfvEXT
#define glCurrentPaletteMatrixARB _onutCurrentPaletteMatrixARB
#define glDebugMessageCallback _onutDebugMessageCallback
#define glDebugMessageCallbackAMD _onutDebugMessageCallbackAMD
#define glDebugMessageCallbackARB _onutDebugMessageCallbackARB
#define glDebugMessageCallbackKHR _onutDebugMessageCallbackKHR
#define glDebugMessageControl _onutDebugMessageControl
#define glDebugMessageControlARB _onutDebugMessageControlARB
#define glDebugMessageControlKHR _onutDebugMessageControlKHR
#define glDebugMessageEnableAMD _onutDebugMessageEnableAMD
#define glDebugMessageInsert _onutDebugMessageInsert
#define glDebugMessageInsertAMD _onutDebugMessageInsertAMD
#define glDebugMessageInsertARB _onutDebugMessageInsertARB
#define glDebugMessageInsertKHR _onutDebugMessageInsertKHR
#define glDeformSGIX _onutDeformSGIX
#define glDeformationMap3dSGIX _onutDeformationMap3dSGIX
#define glDeformationMap3fSGIX _onutDeformationMap3fSGIX
#define glDeleteAsyncMarkersSGIX _onutDeleteAsyncMarkersSGIX
#define glDeleteBufferRegion _onutDeleteBufferRegion
#define glDeleteBuffers _onutDeleteBuffers
#define glDeleteBuffersARB _onutDeleteBuffersARB
#define glDeleteCommandListsNV _onutDeleteCommandListsNV
#define glDeleteFencesAPPLE _onutDeleteFencesAPPLE
#define glDeleteFencesNV _onutDeleteFencesNV
#define glDeleteFragmentShaderATI _onutDeleteFragmentShaderATI
#define glDeleteFramebuffers _onutDeleteFramebuffers
#define glDeleteFramebuffersEXT _onutDeleteFramebuffersEXT
#define glDeleteMemoryObjectsEXT _onutDeleteMemoryObjectsEXT
#define glDeleteNamedStringARB _onutDeleteNamedStringARB
#define glDeleteNamesAMD _onutDeleteNamesAMD
#define glDeleteObjectARB _onutDeleteObjectARB
#define glDeleteOcclusionQueriesNV _onutDeleteOcclusionQueriesNV
#define glDeletePathsNV _onutDeletePathsNV
#define glDeletePerfMonitorsAMD _onutDeletePerfMonitorsAMD
#define glDeletePerfQueryINTEL _onutDeletePerfQueryINTEL
#define glDeleteProgram _onutDeleteProgram
#define glDeleteProgramPipelines _onutDeleteProgramPipelines
#define glDeleteProgramPipelinesEXT _onutDeleteProgramPipelinesEXT
#define glDeleteProgramsARB _onutDeleteProgramsARB
#define glDeleteProgramsNV _onutDeleteProgramsNV
#define glDeleteQueries _onutDeleteQueries
#define glDeleteQueriesARB _onutDeleteQueriesARB
#define glDeleteQueriesEXT _onutDeleteQueriesEXT
#define glDeleteRenderbuffers _onutDeleteRenderbuffers
#define glDeleteRenderbuffersEXT _onutDeleteRenderbuffersEXT
#define glDeleteSamplers _onutDeleteSamplers
#define glDeleteSemaphoresEXT _onutDeleteSemaphoresEXT
#define glDeleteShader _onutDeleteShader
#define glDeleteStatesNV _onutDeleteStatesNV
#define glDeleteSync _onutDeleteSync
#define glDeleteSyncAPPLE _onutDeleteSyncAPPLE
#define glDeleteTextures _onutDeleteTextures
#define glDeleteTexturesEXT _onutDeleteTexturesEXT
#define glDeleteTransformFeedbacks _onutDeleteTransformFeedbacks
#define glDeleteTransformFeedbacksNV _onutDeleteTransformFeedbacksNV
#define glDeleteVertexArrays _onutDeleteVertexArrays
#define glDeleteVertexArraysAPPLE _onutDeleteVertexArraysAPPLE
#define glDeleteVertexArraysOES _onutDeleteVertexArraysOES
#define glDeleteVertexShaderEXT _onutDeleteVertexShaderEXT
#define glDepthBoundsEXT _onutDepthBoundsEXT
#define glDepthBoundsdNV _onutDepthBoundsdNV
#define glDepthFunc _onutDepthFunc
#define glDepthMask _onutDepthMask
#define glDepthRange _onutDepthRange
#define glDepthRangeArrayfvNV _onutDepthRangeArrayfvNV
#define glDepthRangeArrayfvOES _onutDepthRangeArrayfvOES
#define glDepthRangeArrayv _onutDepthRangeArrayv
#define glDepthRangeIndexed _onutDepthRangeIndexed
#define glDepthRangeIndexedfNV _onutDepthRangeIndexedfNV
#define glDepthRangeIndexedfOES _onutDepthRangeIndexedfOES
#define glDepthRangedNV _onutDepthRangedNV
#define glDepthRangef _onutDepthRangef
#define glDepthRangefOES _onutDepthRangefOES
#define glDepthRangexOES _onutDepthRangexOES
#define glDetachObjectARB _onutDetachObjectARB
#define glDetachShader _onutDetachShader
#define glDetailTexFuncSGIS _onutDetailTexFuncSGIS
#define glDisable _onutDisable
#define glDisableClientStateIndexedEXT _onutDisableClientStateIndexedEXT
#define glDisableClientStateiEXT _onutDisableClientStateiEXT
#define glDisableDriverControlQCOM _onutDisableDriverControlQCOM
#define glDisableIndexedEXT _onutDisableIndexedEXT
#define glDisableVariantClientStateEXT _onutDisableVariantClientStateEXT
#define glDisableVertexArrayAttrib _onutDisableVertexArrayAttrib
#define glDisableVertexArrayAttribEXT _onutDisableVertexArrayAttribEXT
#define glDisableVertexArrayEXT _onutDisableVertexArrayEXT
#define glDisableVertexAttribAPPLE _onutDisableVertexAttribAPPLE
#define glDisableVertexAttribArray _onutDisableVertexAttribArray
#define glDisableVertexAttribArrayARB _onutDisableVertexAttribArrayARB
#define glDisablei _onutDisablei
#define glDisableiEXT _onutDisableiEXT
#define glDisableiNV _onutDisableiNV
#define glDisableiOES _onutDisableiOES
#define glDiscardFramebufferEXT _onutDiscardFramebufferEXT
#define glDispatchCompute _onutDispatchCompute
#define glDispatchComputeGroupSizeARB _onutDispatchComputeGroupSizeARB
#define glDispatchComputeIndirect _onutDispatchComputeIndirect
#define glDrawArrays _onutDrawArrays
#define glDrawArraysEXT _onutDrawArraysEXT
#define glDrawArraysIndirect _onutDrawArraysIndirect
#define glDrawArraysInstanced _onutDrawArraysInstanced
#define glDrawArraysInstancedANGLE _onutDrawArraysInstancedANGLE
#define glDrawArraysInstancedARB _onutDrawArraysInstancedARB
#define glDrawArraysInstancedBaseInstance _onutDrawArraysInstancedBaseInstance
#define glDrawArraysInstancedBaseInstanceEXT _onutDrawArraysInstancedBaseInstanceEXT
#define glDrawArraysInstancedEXT _onutDrawArraysInstancedEXT
#define glDrawArraysInstancedNV _onutDrawArraysInstancedNV
#define glDrawBuffer _onutDrawBuffer
#define glDrawBufferRegion _onutDrawBufferRegion
#define glDrawBuffers _onutDrawBuffers
#define glDrawBuffersARB _onutDrawBuffersARB
#define glDrawBuffersATI _onutDrawBuffersATI
#define glDrawBuffersEXT _onutDrawBuffersEXT
#define glDrawBuffersIndexedEXT _onutDrawBuffersIndexedEXT
#define glDrawBuffersNV _onutDrawBuffersNV
#define glDrawCommandsAddressNV _onutDrawCommandsAddressNV
#define glDrawCommandsNV _onutDrawCommandsNV
#define glDrawCommandsStatesAddressNV _onutDrawCommandsStatesAddressNV
#define glDrawCommandsStatesNV _onutDrawCommandsStatesNV
#define glDrawElementArrayAPPLE _onutDrawElementArrayAPPLE
#define glDrawElementArrayATI _onutDrawElementArrayATI
#define glDrawElements _onutDrawElements
#define glDrawElementsBaseVertex _onutDrawElementsBaseVertex
#define glDrawElementsBaseVertexEXT _onutDrawElementsBaseVertexEXT
#define glDrawElementsBaseVertexOES _onutDrawElementsBaseVertexOES
#define glDrawElementsIndirect _onutDrawElementsIndirect
#define glDrawElementsInstanced _onutDrawElementsInstanced
#define glDrawElementsInstancedANGLE _onutDrawElementsInstancedANGLE
#define glDrawElementsInstancedARB _onutDrawElementsInstancedARB
#define glDrawElementsInstancedBaseInstance _onutDrawElementsInstancedBaseInstance
#define glDrawElementsInstancedBaseInstanceEXT _onutDrawElementsInstancedBaseInstanceEXT
#define glDrawElementsInstancedBaseVertex _onutDrawElementsInstancedBaseVertex
#define glDrawElementsInstancedBaseVertexBaseInstance _onutDrawElementsInstancedBaseVertexBaseInstance
#define glDrawElementsInstancedBaseVertexBaseInstanceEXT _onutDrawElementsInstancedBaseVertexBaseInstanceEXT
#define glDrawElementsInstancedBaseVertexEXT _onutDrawElementsInstancedBaseVertexEXT
#define glDrawElementsInstancedBaseVertexOES _onutDrawElementsInstancedBaseVertexOES
#define glDrawElementsInstancedEXT _onutDrawElementsInstancedEXT
#define glDrawElementsInstancedNV _onutDrawElementsInstancedNV
#define glDrawMeshArraysSUN _onutDrawMeshArraysSUN
#define glDrawRangeElementArrayAPPLE _onutDrawRangeElementArrayAPPLE
#define glDrawRangeElementArrayATI _onutDrawRangeElementArrayATI
#define glDrawRangeElements _onutDrawRangeElements
#define glDrawRangeElementsBaseVertex _onutDrawRangeElementsBaseVertex
#define glDrawRangeElementsBaseVertexEXT _onutDrawRangeElementsBaseVertexEXT
#define glDrawRangeElementsBaseVertexOES _onutDrawRangeElementsBaseVertexOES
#define glDrawRangeElementsEXT _onutDrawRangeElementsEXT
#define glDrawTextureNV _onutDrawTextureNV
#define glDrawTransformFeedback _onutDrawTransformFeedback
#define glDrawTransformFeedbackEXT _onutDrawTransformFeedbackEXT
#define glDrawTransformFeedbackInstanced _onutDrawTransformFeedbackInstanced
#define glDrawTransformFeedbackInstancedEXT _onutDrawTransformFeedbackInstancedEXT
#define glDrawTransformFeedbackNV _onutDrawTransformFeedbackNV
#define glDrawTransformFeedbackStream _onutDrawTransformFeedbackStream
#define glDrawTransformFeedbackStreamInstanced _onutDrawTransformFeedbackStreamInstanced
#define glDrawVkImageNV _onutDrawVkImageNV
#define glEGLImageTargetRenderbufferStorageOES _onutEGLImageTargetRenderbufferStorageOES
#define glEGLImageTargetTexture2DOES _onutEGLImageTargetTexture2DOES
#define glEdgeFlagFormatNV _onutEdgeFlagFormatNV
#define glEdgeFlagPointerEXT _onutEdgeFlagPointerEXT
#define glEdgeFlagPointerListIBM _onutEdgeFlagPointerListIBM
#define glElementPointerAPPLE _onutElementPointerAPPLE
#define glElementPointerATI _onutElementPointerATI
#define glEnable _onutEnable
#define glEnableClientStateIndexedEXT _onutEnableClientStateIndexedEXT
#define glEnableClientStateiEXT _onutEnableClientStateiEXT
#define glEnableDriverControlQCOM _onutEnableDriverControlQCOM
#define glEnableIndexedEXT _onutEnableIndexedEXT
#define glEnableVariantClientStateEXT _onutEnableVariantClientStateEXT
#define glEnableVertexArrayAttrib _onutEnableVertexArrayAttrib
#define glEnableVertexArrayAttribEXT _onutEnableVertexArrayAttribEXT
#define glEnableVertexArrayEXT _onutEnableVertexArrayEXT
#define glEnableVertexAttribAPPLE _onutEnableVertexAttribAPPLE
#define glEnableVertexAttribArray _onutEnableVertexAttribArray
#define glEnableVertexAttribArrayARB _onutEnableVertexAttribArrayARB
#define glEnablei _onutEnablei
#define glEnableiEXT _onutEnableiEXT
#define glEnableiNV _onutEnableiNV
#define glEnableiOES _onutEnableiOES
#define glEndConditionalRender _onutEndConditionalRender
#define glEndConditionalRenderNV _onutEndConditionalRenderNV
#define glEndConditionalRenderNVX _onutEndConditionalRenderNVX
#define glEndFragmentShaderATI _onutEndFragmentShaderATI
#define glEndOcclusionQueryNV _onutEndOcclusionQueryNV
#define glEndPerfMonitorAMD _onutEndPerfMonitorAMD
#define glEndPerfQueryINTEL _onutEndPerfQueryINTEL
#define glEndQuery _onutEndQuery
#define glEndQueryARB _onutEndQueryARB
#define glEndQueryEXT _onutEndQueryEXT
#define glEndQueryIndexed _onutEndQueryIndexed
#define glEndTilingQCOM _onutEndTilingQCOM
#define glEndTransformFeedback _onutEndTransformFeedback
#define glEndTransformFeedbackEXT _onutEndTransformFeedbackEXT
#define glEndTransformFeedbackNV _onutEndTransformFeedbackNV
#define glEndVertexShaderEXT _onutEndVertexShaderEXT
#define glEndVideoCaptureNV _onutEndVideoCaptureNV
#define glEvalCoord1xOES _onutEvalCoord1xOES
#define glEvalCoord1xvOES _onutEvalCoord1xvOES
#define glEvalCoord2xOES _onutEvalCoord2xOES
#define glEvalCoord2xvOES _onutEvalCoord2xvOES
#define glEvalMapsNV _onutEvalMapsNV
#define glEvaluateDepthValuesARB _onutEvaluateDepthValuesARB
#define glExecuteProgramNV _onutExecuteProgramNV
#define glExtGetBufferPointervQCOM _onutExtGetBufferPointervQCOM
#define glExtGetBuffersQCOM _onutExtGetBuffersQCOM
#define glExtGetFramebuffersQCOM _onutExtGetFramebuffersQCOM
#define glExtGetProgramBinarySourceQCOM _onutExtGetProgramBinarySourceQCOM
#define glExtGetProgramsQCOM _onutExtGetProgramsQCOM
#define glExtGetRenderbuffersQCOM _onutExtGetRenderbuffersQCOM
#define glExtGetShadersQCOM _onutExtGetShadersQCOM
#define glExtGetTexLevelParameterivQCOM _onutExtGetTexLevelParameterivQCOM
#define glExtGetTexSubImageQCOM _onutExtGetTexSubImageQCOM
#define glExtGetTexturesQCOM _onutExtGetTexturesQCOM
#define glExtIsProgramBinaryQCOM _onutExtIsProgramBinaryQCOM
#define glExtTexObjectStateOverrideiQCOM _onutExtTexObjectStateOverrideiQCOM
#define glExtractComponentEXT _onutExtractComponentEXT
#define glFeedbackBufferxOES _onutFeedbackBufferxOES
#define glFenceSync _onutFenceSync
#define glFenceSyncAPPLE _onutFenceSyncAPPLE
#define glFinalCombinerInputNV _onutFinalCombinerInputNV
#define glFinish _onutFinish
#define glFinishAsyncSGIX _onutFinishAsyncSGIX
#define glFinishFenceAPPLE _onutFinishFenceAPPLE
#define glFinishFenceNV _onutFinishFenceNV
#define glFinishObjectAPPLE _onutFinishObjectAPPLE
#define glFinishTextureSUNX _onutFinishTextureSUNX
#define glFlush _onutFlush
#define glFlushMappedBufferRange _onutFlushMappedBufferRange
#define glFlushMappedBufferRangeAPPLE _onutFlushMappedBufferRangeAPPLE
#define glFlushMappedBufferRangeEXT _onutFlushMappedBufferRangeEXT
#define glFlushMappedNamedBufferRange _onutFlushMappedNamedBufferRange
#define glFlushMappedNamedBufferRangeEXT _onutFlushMappedNamedBufferRangeEXT
#define glFlushPixelDataRangeNV _onutFlushPixelDataRangeNV
#define glFlushRasterSGIX _onutFlushRasterSGIX
#define glFlushStaticDataIBM _onutFlushStaticDataIBM
#define glFlushVertexArrayRangeAPPLE _onutFlushVertexArrayRangeAPPLE
#define glFlushVertexArrayRangeNV _onutFlushVertexArrayRangeNV
#define glFogCoordFormatNV _onutFogCoordFormatNV
#define glFogCoordPointer _onutFogCoordPointer
#define glFogCoordPointerEXT _onutFogCoordPointerEXT
#define glFogCoordPointerListIBM _onutFogCoordPointerListIBM
#define glFogCoordd _onutFogCoordd
#define glFogCoorddEXT _onutFogCoorddEXT
#define glFogCoorddv _onutFogCoorddv
#define glFogCoorddvEXT _onutFogCoorddvEXT
#define glFogCoordf _onutFogCoordf
#define glFogCoordfEXT _onutFogCoordfEXT
#define glFogCoordfv _onutFogCoordfv
#define glFogCoordfvEXT _onutFogCoordfvEXT
#define glFogCoordhNV _onutFogCoordhNV
#define glFogCoordhvNV _onutFogCoordhvNV
#define glFogFuncSGIS _onutFogFuncSGIS
#define glFogxOES _onutFogxOES
#define glFogxvOES _onutFogxvOES
#define glFragmentColorMaterialSGIX _onutFragmentColorMaterialSGIX
#define glFragmentCoverageColorNV _onutFragmentCoverageColorNV
#define glFragmentLightModelfSGIX _onutFragmentLightModelfSGIX
#define glFragmentLightModelfvSGIX _onutFragmentLightModelfvSGIX
#define glFragmentLightModeliSGIX _onutFragmentLightModeliSGIX
#define glFragmentLightModelivSGIX _onutFragmentLightModelivSGIX
#define glFragmentLightfSGIX _onutFragmentLightfSGIX
#define glFragmentLightfvSGIX _onutFragmentLightfvSGIX
#define glFragmentLightiSGIX _onutFragmentLightiSGIX
#define glFragmentLightivSGIX _onutFragmentLightivSGIX
#define glFragmentMaterialfSGIX _onutFragmentMaterialfSGIX
#define glFragmentMaterialfvSGIX _onutFragmentMaterialfvSGIX
#define glFragmentMaterialiSGIX _onutFragmentMaterialiSGIX
#define glFragmentMaterialivSGIX _onutFragmentMaterialivSGIX
#define glFrameTerminatorGREMEDY _onutFrameTerminatorGREMEDY
#define glFrameZoomSGIX _onutFrameZoomSGIX
#define glFramebufferDrawBufferEXT _onutFramebufferDrawBufferEXT
#define glFramebufferDrawBuffersEXT _onutFramebufferDrawBuffersEXT
#define glFramebufferFetchBarrierQCOM _onutFramebufferFetchBarrierQCOM
#define glFramebufferFoveationConfigQCOM _onutFramebufferFoveationConfigQCOM
#define glFramebufferFoveationParametersQCOM _onutFramebufferFoveationParametersQCOM
#define glFramebufferParameteri _onutFramebufferParameteri
#define glFramebufferPixelLocalStorageSizeEXT _onutFramebufferPixelLocalStorageSizeEXT
#define glFramebufferReadBufferEXT _onutFramebufferReadBufferEXT
#define glFramebufferRenderbuffer _onutFramebufferRenderbuffer
#define glFramebufferRenderbufferEXT _onutFramebufferRenderbufferEXT
#define glFramebufferSampleLocationsfvARB _onutFramebufferSampleLocationsfvARB
#define glFramebufferSampleLocationsfvNV _onutFramebufferSampleLocationsfvNV
#define glFramebufferSamplePositionsfvAMD _onutFramebufferSamplePositionsfvAMD
#define glFramebufferTexture _onutFramebufferTexture
#define glFramebufferTexture1D _onutFramebufferTexture1D
#define glFramebufferTexture1DEXT _onutFramebufferTexture1DEXT
#define glFramebufferTexture2D _onutFramebufferTexture2D
#define glFramebufferTexture2DDownsampleIMG _onutFramebufferTexture2DDownsampleIMG
#define glFramebufferTexture2DEXT _onutFramebufferTexture2DEXT
#define glFramebufferTexture2DMultisampleEXT _onutFramebufferTexture2DMultisampleEXT
#define glFramebufferTexture2DMultisampleIMG _onutFramebufferTexture2DMultisampleIMG
#define glFramebufferTexture3D _onutFramebufferTexture3D
#define glFramebufferTexture3DEXT _onutFramebufferTexture3DEXT
#define glFramebufferTexture3DOES _onutFramebufferTexture3DOES
#define glFramebufferTextureARB _onutFramebufferTextureARB
#define glFramebufferTextureEXT _onutFramebufferTextureEXT
#define glFramebufferTextureFaceARB _onutFramebufferTextureFaceARB
#define glFramebufferTextureFaceEXT _onutFramebufferTextureFaceEXT
#define glFramebufferTextureLayer _onutFramebufferTextureLayer
#define glFramebufferTextureLayerARB _onutFramebufferTextureLayerARB
#define glFramebufferTextureLayerDownsampleIMG _onutFramebufferTextureLayerDownsampleIMG
#define glFramebufferTextureLayerEXT _onutFramebufferTextureLayerEXT
#define glFramebufferTextureMultisampleMultiviewOVR _onutFramebufferTextureMultisampleMultiviewOVR
#define glFramebufferTextureMultiviewOVR _onutFramebufferTextureMultiviewOVR
#define glFramebufferTextureOES _onutFramebufferTextureOES
#define glFreeObjectBufferATI _onutFreeObjectBufferATI
#define glFrontFace _onutFrontFace
#define glFrustumfOES _onutFrustumfOES
#define glFrustumxOES _onutFrustumxOES
#define glGenAsyncMarkersSGIX _onutGenAsyncMarkersSGIX
#define glGenBuffers _onutGenBuffers
#define glGenBuffersARB _onutGenBuffersARB
#define glGenFencesAPPLE _onutGenFencesAPPLE
#define glGenFencesNV _onutGenFencesNV
#define glGenFragmentShadersATI _onutGenFragmentShadersATI
#define glGenFramebuffers _onutGenFramebuffers
#define glGenFramebuffersEXT _onutGenFramebuffersEXT
#define glGenNamesAMD _onutGenNamesAMD
#define glGenOcclusionQueriesNV _onutGenOcclusionQueriesNV
#define glGenPathsNV _onutGenPathsNV
#define glGenPerfMonitorsAMD _onutGenPerfMonitorsAMD
#define glGenProgramPipelines _onutGenProgramPipelines
#define glGenProgramPipelinesEXT _onutGenProgramPipelinesEXT
#define glGenProgramsARB _onutGenProgramsARB
#define glGenProgramsNV _onutGenProgramsNV
#define glGenQueries _onutGenQueries
#define glGenQueriesARB _onutGenQueriesARB
#define glGenQueriesEXT _onutGenQueriesEXT
#define glGenRenderbuffers _onutGenRenderbuffers
#define glGenRenderbuffersEXT _onutGenRenderbuffersEXT
#define glGenSamplers _onutGenSamplers
#define glGenSemaphoresEXT _onutGenSemaphoresEXT
#define glGenSymbolsEXT _onutGenSymbolsEXT
#define glGenTextures _onutGenTextures
#define glGenTexturesEXT _onutGenTexturesEXT
#define glGenTransformFeedbacks _onutGenTransformFeedbacks
#define glGenTransformFeedbacksNV _onutGenTransformFeedbacksNV
#define glGenVertexArrays _onutGenVertexArrays
#define glGenVertexArraysAPPLE _onutGenVertexArraysAPPLE
#define glGenVertexArraysOES _onutGenVertexArraysOES
#define glGenVertexShadersEXT _onutGenVertexShadersEXT
#define glGenerateMipmap _onutGenerateMipmap
#define glGenerateMipmapEXT _onutGenerateMipmapEXT
#define glGenerateMultiTexMipmapEXT _onutGenerateMultiTexMipmapEXT
#define glGenerateTextureMipmap _onutGenerateTextureMipmap
#define glGenerateTextureMipmapEXT _onutGenerateTextureMipmapEXT
#define glGetActiveAtomicCounterBufferiv _onutGetActiveAtomicCounterBufferiv
#define glGetActiveAttrib _onutGetActiveAttrib
#define glGetActiveAttribARB _onutGetActiveAttribARB
#define glGetActiveSubroutineName _onutGetActiveSubroutineName
#define glGetActiveSubroutineUniformName _onutGetActiveSubroutineUniformName
#define glGetActiveSubroutineUniformiv _onutGetActiveSubroutineUniformiv
#define glGetActiveUniform _onutGetActiveUniform
#define glGetActiveUniformARB _onutGetActiveUniformARB
#define glGetActiveUniformBlockName _onutGetActiveUniformBlockName
#define glGetActiveUniformBlockiv _onutGetActiveUniformBlockiv
#define glGetActiveUniformName _onutGetActiveUniformName
#define glGetActiveUniformsiv _onutGetActiveUniformsiv
#define glGetActiveVaryingNV _onutGetActiveVaryingNV
#define glGetArrayObjectfvATI _onutGetArrayObjectfvATI
#define glGetArrayObjectivATI _onutGetArrayObjectivATI
#define glGetAttachedObjectsARB _onutGetAttachedObjectsARB
#define glGetAttachedShaders _onutGetAttachedShaders
#define glGetAttribLocation _onutGetAttribLocation
#define glGetAttribLocationARB _onutGetAttribLocationARB
#define glGetBooleanIndexedvEXT _onutGetBooleanIndexedvEXT
#define glGetBooleani_v _onutGetBooleani_v
#define glGetBooleanv _onutGetBooleanv
#define glGetBufferParameteri64v _onutGetBufferParameteri64v
#define glGetBufferParameteriv _onutGetBufferParameteriv
#define glGetBufferParameterivARB _onutGetBufferParameterivARB
#define glGetBufferParameterui64vNV _onutGetBufferParameterui64vNV
#define glGetBufferPointerv _onutGetBufferPointerv
#define glGetBufferPointervARB _onutGetBufferPointervARB
#define glGetBufferPointervOES _onutGetBufferPointervOES
#define glGetBufferSubData _onutGetBufferSubData
#define glGetBufferSubDataARB _onutGetBufferSubDataARB
#define glGetClipPlanefOES _onutGetClipPlanefOES
#define glGetClipPlanexOES _onutGetClipPlanexOES
#define glGetColorTable _onutGetColorTable
#define glGetColorTableEXT _onutGetColorTableEXT
#define glGetColorTableParameterfv _onutGetColorTableParameterfv
#define glGetColorTableParameterfvEXT _onutGetColorTableParameterfvEXT
#define glGetColorTableParameterfvSGI _onutGetColorTableParameterfvSGI
#define glGetColorTableParameteriv _onutGetColorTableParameteriv
#define glGetColorTableParameterivEXT _onutGetColorTableParameterivEXT
#define glGetColorTableParameterivSGI _onutGetColorTableParameterivSGI
#define glGetColorTableSGI _onutGetColorTableSGI
#define glGetCombinerInputParameterfvNV _onutGetCombinerInputParameterfvNV
#define glGetCombinerInputParameterivNV _onutGetCombinerInputParameterivNV
#define glGetCombinerOutputParameterfvNV _onutGetCombinerOutputParameterfvNV
#define glGetCombinerOutputParameterivNV _onutGetCombinerOutputParameterivNV
#define glGetCombinerStageParameterfvNV _onutGetCombinerStageParameterfvNV
#define glGetCommandHeaderNV _onutGetCommandHeaderNV
#define glGetCompressedMultiTexImageEXT _onutGetCompressedMultiTexImageEXT
#define glGetCompressedTexImage _onutGetCompressedTexImage
#define glGetCompressedTexImageARB _onutGetCompressedTexImageARB
#define glGetCompressedTextureImage _onutGetCompressedTextureImage
#define glGetCompressedTextureImageEXT _onutGetCompressedTextureImageEXT
#define glGetCompressedTextureSubImage _onutGetCompressedTextureSubImage
#define glGetConvolutionFilter _onutGetConvolutionFilter
#define glGetConvolutionFilterEXT _onutGetConvolutionFilterEXT
#define glGetConvolutionParameterfv _onutGetConvolutionParameterfv
#define glGetConvolutionParameterfvEXT _onutGetConvolutionParameterfvEXT
#define glGetConvolutionParameteriv _onutGetConvolutionParameteriv
#define glGetConvolutionParameterivEXT _onutGetConvolutionParameterivEXT
#define glGetConvolutionParameterxvOES _onutGetConvolutionParameterxvOES
#define glGetCoverageModulationTableNV _onutGetCoverageModulationTableNV
#define glGetDebugMessageLog _onutGetDebugMessageLog
#define glGetDebugMessageLogAMD _onutGetDebugMessageLogAMD
#define glGetDebugMessageLogARB _onutGetDebugMessageLogARB
#define glGetDebugMessageLogKHR _onutGetDebugMessageLogKHR
#define glGetDetailTexFuncSGIS _onutGetDetailTexFuncSGIS
#define glGetDoubleIndexedvEXT _onutGetDoubleIndexedvEXT
#define glGetDoublei_v _onutGetDoublei_v
#define glGetDoublei_vEXT _onutGetDoublei_vEXT
#define glGetDoublev _onutGetDoublev
#define glGetDriverControlStringQCOM _onutGetDriverControlStringQCOM
#define glGetDriverControlsQCOM _onutGetDriverControlsQCOM
#define glGetError _onutGetError
#define glGetFenceivNV _onutGetFenceivNV
#define glGetFinalCombinerInputParameterfvNV _onutGetFinalCombinerInputParameterfvNV
#define glGetFinalCombinerInputParameterivNV _onutGetFinalCombinerInputParameterivNV
#define glGetFirstPerfQueryIdINTEL _onutGetFirstPerfQueryIdINTEL
#define glGetFixedvOES _onutGetFixedvOES
#define glGetFloatIndexedvEXT _onutGetFloatIndexedvEXT
#define glGetFloati_v _onutGetFloati_v
#define glGetFloati_vEXT _onutGetFloati_vEXT
#define glGetFloati_vNV _onutGetFloati_vNV
#define glGetFloati_vOES _onutGetFloati_vOES
#define glGetFloatv _onutGetFloatv
#define glGetFogFuncSGIS _onutGetFogFuncSGIS
#define glGetFragDataIndex _onutGetFragDataIndex
#define glGetFragDataIndexEXT _onutGetFragDataIndexEXT
#define glGetFragDataLocation _onutGetFragDataLocation
#define glGetFragDataLocationEXT _onutGetFragDataLocationEXT
#define glGetFragmentLightfvSGIX _onutGetFragmentLightfvSGIX
#define glGetFragmentLightivSGIX _onutGetFragmentLightivSGIX
#define glGetFragmentMaterialfvSGIX _onutGetFragmentMaterialfvSGIX
#define glGetFragmentMaterialivSGIX _onutGetFragmentMaterialivSGIX
#define glGetFramebufferAttachmentParameteriv _onutGetFramebufferAttachmentParameteriv
#define glGetFramebufferAttachmentParameterivEXT _onutGetFramebufferAttachmentParameterivEXT
#define glGetFramebufferParameterfvAMD _onutGetFramebufferParameterfvAMD
#define glGetFramebufferParameteriv _onutGetFramebufferParameteriv
#define glGetFramebufferParameterivEXT _onutGetFramebufferParameterivEXT
#define glGetFramebufferPixelLocalStorageSizeEXT _onutGetFramebufferPixelLocalStorageSizeEXT
#define glGetGraphicsResetStatus _onutGetGraphicsResetStatus
#define glGetGraphicsResetStatusARB _onutGetGraphicsResetStatusARB
#define glGetGraphicsResetStatusEXT _onutGetGraphicsResetStatusEXT
#define glGetGraphicsResetStatusKHR _onutGetGraphicsResetStatusKHR
#define glGetHandleARB _onutGetHandleARB
#define glGetHistogram _onutGetHistogram
#define glGetHistogramEXT _onutGetHistogramEXT
#define glGetHistogramParameterfv _onutGetHistogramParameterfv
#define glGetHistogramParameterfvEXT _onutGetHistogramParameterfvEXT
#define glGetHistogramParameteriv _onutGetHistogramParameteriv
#define glGetHistogramParameterivEXT _onutGetHistogramParameterivEXT
#define glGetHistogramParameterxvOES _onutGetHistogramParameterxvOES
#define glGetImageHandleARB _onutGetImageHandleARB
#define glGetImageHandleNV _onutGetImageHandleNV
#define glGetImageTransformParameterfvHP _onutGetImageTransformParameterfvHP
#define glGetImageTransformParameterivHP _onutGetImageTransformParameterivHP
#define glGetInfoLogARB _onutGetInfoLogARB
#define glGetInstrumentsSGIX _onutGetInstrumentsSGIX
#define glGetInteger64i_v _onutGetInteger64i_v
#define glGetInteger64v _onutGetInteger64v
#define glGetInteger64vAPPLE _onutGetInteger64vAPPLE
#define glGetIntegerIndexedvEXT _onutGetIntegerIndexedvEXT
#define glGetIntegeri_v _onutGetIntegeri_v
#define glGetIntegeri_vEXT _onutGetIntegeri_vEXT
#define glGetIntegerui64i_vNV _onutGetIntegerui64i_vNV
#define glGetIntegerui64vNV _onutGetIntegerui64vNV
#define glGetIntegerv _onutGetIntegerv
#define glGetInternalformatSampleivNV _onutGetInternalformatSampleivNV
#define glGetInternalformati64v _onutGetInternalformati64v
#define glGetInternalformativ _onutGetInternalformativ
#define glGetInvariantBooleanvEXT _onutGetInvariantBooleanvEXT
#define glGetInvariantFloatvEXT _onutGetInvariantFloatvEXT
#define glGetInvariantIntegervEXT _onutGetInvariantIntegervEXT
#define glGetLightxOES _onutGetLightxOES
#define glGetListParameterfvSGIX _onutGetListParameterfvSGIX
#define glGetListParameterivSGIX _onutGetListParameterivSGIX
#define glGetLocalConstantBooleanvEXT _onutGetLocalConstantBooleanvEXT
#define glGetLocalConstantFloatvEXT _onutGetLocalConstantFloatvEXT
#define glGetLocalConstantIntegervEXT _onutGetLocalConstantIntegervEXT
#define glGetMapAttribParameterfvNV _onutGetMapAttribParameterfvNV
#define glGetMapAttribParameterivNV _onutGetMapAttribParameterivNV
#define glGetMapControlPointsNV _onutGetMapControlPointsNV
#define glGetMapParameterfvNV _onutGetMapParameterfvNV
#define glGetMapParameterivNV _onutGetMapParameterivNV
#define glGetMapxvOES _onutGetMapxvOES
#define glGetMaterialxOES _onutGetMaterialxOES
#define glGetMemoryObjectParameterivEXT _onutGetMemoryObjectParameterivEXT
#define glGetMinmax _onutGetMinmax
#define glGetMinmaxEXT _onutGetMinmaxEXT
#define glGetMinmaxParameterfv _onutGetMinmaxParameterfv
#define glGetMinmaxParameterfvEXT _onutGetMinmaxParameterfvEXT
#define glGetMinmaxParameteriv _onutGetMinmaxParameteriv
#define glGetMinmaxParameterivEXT _onutGetMinmaxParameterivEXT
#define glGetMultiTexEnvfvEXT _onutGetMultiTexEnvfvEXT
#define glGetMultiTexEnvivEXT _onutGetMultiTexEnvivEXT
#define glGetMultiTexGendvEXT _onutGetMultiTexGendvEXT
#define glGetMultiTexGenfvEXT _onutGetMultiTexGenfvEXT
#define glGetMultiTexGenivEXT _onutGetMultiTexGenivEXT
#define glGetMultiTexImageEXT _onutGetMultiTexImageEXT
#define glGetMultiTexLevelParameterfvEXT _onutGetMultiTexLevelParameterfvEXT
#define glGetMultiTexLevelParameterivEXT _onutGetMultiTexLevelParameterivEXT
#define glGetMultiTexParameterIivEXT _onutGetMultiTexParameterIivEXT
#define glGetMultiTexParameterIuivEXT _onutGetMultiTexParameterIuivEXT
#define glGetMultiTexParameterfvEXT _onutGetMultiTexParameterfvEXT
#define glGetMultiTexParameterivEXT _onutGetMultiTexParameterivEXT
#define glGetMultisamplefv _onutGetMultisamplefv
#define glGetMultisamplefvNV _onutGetMultisamplefvNV
#define glGetNamedBufferParameteri64v _onutGetNamedBufferParameteri64v
#define glGetNamedBufferParameteriv _onutGetNamedBufferParameteriv
#define glGetNamedBufferParameterivEXT _onutGetNamedBufferParameterivEXT
#define glGetNamedBufferParameterui64vNV _onutGetNamedBufferParameterui64vNV
#define glGetNamedBufferPointerv _onutGetNamedBufferPointerv
#define glGetNamedBufferPointervEXT _onutGetNamedBufferPointervEXT
#define glGetNamedBufferSubData _onutGetNamedBufferSubData
#define glGetNamedBufferSubDataEXT _onutGetNamedBufferSubDataEXT
#define glGetNamedFramebufferAttachmentParameteriv _onutGetNamedFramebufferAttachmentParameteriv
#define glGetNamedFramebufferAttachmentParameterivEXT _onutGetNamedFramebufferAttachmentParameterivEXT
#define glGetNamedFramebufferParameterfvAMD _onutGetNamedFramebufferParameterfvAMD
#define glGetNamedFramebufferParameteriv _onutGetNamedFramebufferParameteriv
#define glGetNamedFramebufferParameterivEXT _onutGetNamedFramebufferParameterivEXT
#define glGetNamedProgramLocalParameterIivEXT _onutGetNamedProgramLocalParameterIivEXT
#define glGetNamedProgramLocalParameterIuivEXT _onutGetNamedProgramLocalParameterIuivEXT
#define glGetNamedProgramLocalParameterdvEXT _onutGetNamedProgramLocalParameterdvEXT
#define glGetNamedProgramLocalParameterfvEXT _onutGetNamedProgramLocalParameterfvEXT
#define glGetNamedProgramStringEXT _onutGetNamedProgramStringEXT
#define glGetNamedProgramivEXT _onutGetNamedProgramivEXT
#define glGetNamedRenderbufferParameteriv _onutGetNamedRenderbufferParameteriv
#define glGetNamedRenderbufferParameterivEXT _onutGetNamedRenderbufferParameterivEXT
#define glGetNamedStringARB _onutGetNamedStringARB
#define glGetNamedStringivARB _onutGetNamedStringivARB
#define glGetNextPerfQueryIdINTEL _onutGetNextPerfQueryIdINTEL
#define glGetObjectBufferfvATI _onutGetObjectBufferfvATI
#define glGetObjectBufferivATI _onutGetObjectBufferivATI
#define glGetObjectLabel _onutGetObjectLabel
#define glGetObjectLabelEXT _onutGetObjectLabelEXT
#define glGetObjectLabelKHR _onutGetObjectLabelKHR
#define glGetObjectParameterfvARB _onutGetObjectParameterfvARB
#define glGetObjectParameterivAPPLE _onutGetObjectParameterivAPPLE
#define glGetObjectParameterivARB _onutGetObjectParameterivARB
#define glGetObjectPtrLabel _onutGetObjectPtrLabel
#define glGetObjectPtrLabelKHR _onutGetObjectPtrLabelKHR
#define glGetOcclusionQueryivNV _onutGetOcclusionQueryivNV
#define glGetOcclusionQueryuivNV _onutGetOcclusionQueryuivNV
#define glGetPathColorGenfvNV _onutGetPathColorGenfvNV
#define glGetPathColorGenivNV _onutGetPathColorGenivNV
#define glGetPathCommandsNV _onutGetPathCommandsNV
#define glGetPathCoordsNV _onutGetPathCoordsNV
#define glGetPathDashArrayNV _onutGetPathDashArrayNV
#define glGetPathLengthNV _onutGetPathLengthNV
#define glGetPathMetricRangeNV _onutGetPathMetricRangeNV
#define glGetPathMetricsNV _onutGetPathMetricsNV
#define glGetPathParameterfvNV _onutGetPathParameterfvNV
#define glGetPathParameterivNV _onutGetPathParameterivNV
#define glGetPathSpacingNV _onutGetPathSpacingNV
#define glGetPathTexGenfvNV _onutGetPathTexGenfvNV
#define glGetPathTexGenivNV _onutGetPathTexGenivNV
#define glGetPerfCounterInfoINTEL _onutGetPerfCounterInfoINTEL
#define glGetPerfMonitorCounterDataAMD _onutGetPerfMonitorCounterDataAMD
#define glGetPerfMonitorCounterInfoAMD _onutGetPerfMonitorCounterInfoAMD
#define glGetPerfMonitorCounterStringAMD _onutGetPerfMonitorCounterStringAMD
#define glGetPerfMonitorCountersAMD _onutGetPerfMonitorCountersAMD
#define glGetPerfMonitorGroupStringAMD _onutGetPerfMonitorGroupStringAMD
#define glGetPerfMonitorGroupsAMD _onutGetPerfMonitorGroupsAMD
#define glGetPerfQueryDataINTEL _onutGetPerfQueryDataINTEL
#define glGetPerfQueryIdByNameINTEL _onutGetPerfQueryIdByNameINTEL
#define glGetPerfQueryInfoINTEL _onutGetPerfQueryInfoINTEL
#define glGetPixelMapxv _onutGetPixelMapxv
#define glGetPixelTexGenParameterfvSGIS _onutGetPixelTexGenParameterfvSGIS
#define glGetPixelTexGenParameterivSGIS _onutGetPixelTexGenParameterivSGIS
#define glGetPixelTransformParameterfvEXT _onutGetPixelTransformParameterfvEXT
#define glGetPixelTransformParameterivEXT _onutGetPixelTransformParameterivEXT
#define glGetPointerIndexedvEXT _onutGetPointerIndexedvEXT
#define glGetPointeri_vEXT _onutGetPointeri_vEXT
#define glGetPointerv _onutGetPointerv
#define glGetPointervEXT _onutGetPointervEXT
#define glGetPointervKHR _onutGetPointervKHR
#define glGetProgramBinary _onutGetProgramBinary
#define glGetProgramBinaryOES _onutGetProgramBinaryOES
#define glGetProgramEnvParameterIivNV _onutGetProgramEnvParameterIivNV
#define glGetProgramEnvParameterIuivNV _onutGetProgramEnvParameterIuivNV
#define glGetProgramEnvParameterdvARB _onutGetProgramEnvParameterdvARB
#define glGetProgramEnvParameterfvARB _onutGetProgramEnvParameterfvARB
#define glGetProgramInfoLog _onutGetProgramInfoLog
#define glGetProgramInterfaceiv _onutGetProgramInterfaceiv
#define glGetProgramLocalParameterIivNV _onutGetProgramLocalParameterIivNV
#define glGetProgramLocalParameterIuivNV _onutGetProgramLocalParameterIuivNV
#define glGetProgramLocalParameterdvARB _onutGetProgramLocalParameterdvARB
#define glGetProgramLocalParameterfvARB _onutGetProgramLocalParameterfvARB
#define glGetProgramNamedParameterdvNV _onutGetProgramNamedParameterdvNV
#define glGetProgramNamedParameterfvNV _onutGetProgramNamedParameterfvNV
#define glGetProgramParameterdvNV _onutGetProgramParameterdvNV
#define glGetProgramParameterfvNV _onutGetProgramParameterfvNV
#define glGetProgramPipelineInfoLog _onutGetProgramPipelineInfoLog
#define glGetProgramPipelineInfoLogEXT _onutGetProgramPipelineInfoLogEXT
#define glGetProgramPipelineiv _onutGetProgramPipelineiv
#define glGetProgramPipelineivEXT _onutGetProgramPipelineivEXT
#define glGetProgramResourceIndex _onutGetProgramResourceIndex
#define glGetProgramResourceLocation _onutGetProgramResourceLocation
#define glGetProgramResourceLocationIndex _onutGetProgramResourceLocationIndex
#define glGetProgramResourceLocationIndexEXT _onutGetProgramResourceLocationIndexEXT
#define glGetProgramResourceName _onutGetProgramResourceName
#define glGetProgramResourcefvNV _onutGetProgramResourcefvNV
#define glGetProgramResourceiv _onutGetProgramResourceiv
#define glGetProgramStageiv _onutGetProgramStageiv
#define glGetProgramStringARB _onutGetProgramStringARB
#define glGetProgramStringNV _onutGetProgramStringNV
#define glGetProgramSubroutineParameteruivNV _onutGetProgramSubroutineParameteruivNV
#define glGetProgramiv _onutGetProgramiv
#define glGetProgramivARB _onutGetProgramivARB
#define glGetProgramivNV _onutGetProgramivNV
#define glGetQueryBufferObjecti64v _onutGetQueryBufferObjecti64v
#define glGetQueryBufferObjectiv _onutGetQueryBufferObjectiv
#define glGetQueryBufferObjectui64v _onutGetQueryBufferObjectui64v
#define glGetQueryBufferObjectuiv _onutGetQueryBufferObjectuiv
#define glGetQueryIndexediv _onutGetQueryIndexediv
#define glGetQueryObjecti64v _onutGetQueryObjecti64v
#define glGetQueryObjecti64vEXT _onutGetQueryObjecti64vEXT
#define glGetQueryObjectiv _onutGetQueryObjectiv
#define glGetQueryObjectivARB _onutGetQueryObjectivARB
#define glGetQueryObjectivEXT _onutGetQueryObjectivEXT
#define glGetQueryObjectui64v _onutGetQueryObjectui64v
#define glGetQueryObjectui64vEXT _onutGetQueryObjectui64vEXT
#define glGetQueryObjectuiv _onutGetQueryObjectuiv
#define glGetQueryObjectuivARB _onutGetQueryObjectuivARB
#define glGetQueryObjectuivEXT _onutGetQueryObjectuivEXT
#define glGetQueryiv _onutGetQueryiv
#define glGetQueryivARB _onutGetQueryivARB
#define glGetQueryivEXT _onutGetQueryivEXT
#define glGetRenderbufferParameteriv _onutGetRenderbufferParameteriv
#define glGetRenderbufferParameterivEXT _onutGetRenderbufferParameterivEXT
#define glGetSamplerParameterIiv _onutGetSamplerParameterIiv
#define glGetSamplerParameterIivEXT _onutGetSamplerParameterIivEXT
#define glGetSamplerParameterIivOES _onutGetSamplerParameterIivOES
#define glGetSamplerParameterIuiv _onutGetSamplerParameterIuiv
#define glGetSamplerParameterIuivEXT _onutGetSamplerParameterIuivEXT
#define glGetSamplerParameterIuivOES _onutGetSamplerParameterIuivOES
#define glGetSamplerParameterfv _onutGetSamplerParameterfv
#define glGetSamplerParameteriv _onutGetSamplerParameteriv
#define glGetSemaphoreParameterui64vEXT _onutGetSemaphoreParameterui64vEXT
#define glGetSeparableFilter _onutGetSeparableFilter
#define glGetSeparableFilterEXT _onutGetSeparableFilterEXT
#define glGetShaderInfoLog _onutGetShaderInfoLog
#define glGetShaderPrecisionFormat _onutGetShaderPrecisionFormat
#define glGetShaderSource _onutGetShaderSource
#define glGetShaderSourceARB _onutGetShaderSourceARB
#define glGetShaderiv _onutGetShaderiv
#define glGetSharpenTexFuncSGIS _onutGetSharpenTexFuncSGIS
#define glGetStageIndexNV _onutGetStageIndexNV
#define glGetString _onutGetString
#define glGetStringi _onutGetStringi
#define glGetSubroutineIndex _onutGetSubroutineIndex
#define glGetSubroutineUniformLocation _onutGetSubroutineUniformLocation
#define glGetSynciv _onutGetSynciv
#define glGetSyncivAPPLE _onutGetSyncivAPPLE
#define glGetTexBumpParameterfvATI _onutGetTexBumpParameterfvATI
#define glGetTexBumpParameterivATI _onutGetTexBumpParameterivATI
#define glGetTexEnvxvOES _onutGetTexEnvxvOES
#define glGetTexFilterFuncSGIS _onutGetTexFilterFuncSGIS
#define glGetTexGenxvOES _onutGetTexGenxvOES
#define glGetTexImage _onutGetTexImage
#define glGetTexLevelParameterfv _onutGetTexLevelParameterfv
#define glGetTexLevelParameteriv _onutGetTexLevelParameteriv
#define glGetTexLevelParameterxvOES _onutGetTexLevelParameterxvOES
#define glGetTexParameterIiv _onutGetTexParameterIiv
#define glGetTexParameterIivEXT _onutGetTexParameterIivEXT
#define glGetTexParameterIivOES _onutGetTexParameterIivOES
#define glGetTexParameterIuiv _onutGetTexParameterIuiv
#define glGetTexParameterIuivEXT _onutGetTexParameterIuivEXT
#define glGetTexParameterIuivOES _onutGetTexParameterIuivOES
#define glGetTexParameterPointervAPPLE _onutGetTexParameterPointervAPPLE
#define glGetTexParameterfv _onutGetTexParameterfv
#define glGetTexParameteriv _onutGetTexParameteriv
#define glGetTexParameterxvOES _onutGetTexParameterxvOES
#define glGetTextureHandleARB _onutGetTextureHandleARB
#define glGetTextureHandleIMG _onutGetTextureHandleIMG
#define glGetTextureHandleNV _onutGetTextureHandleNV
#define glGetTextureImage _onutGetTextureImage
#define glGetTextureImageEXT _onutGetTextureImageEXT
#define glGetTextureLevelParameterfv _onutGetTextureLevelParameterfv
#define glGetTextureLevelParameterfvEXT _onutGetTextureLevelParameterfvEXT
#define glGetTextureLevelParameteriv _onutGetTextureLevelParameteriv
#define glGetTextureLevelParameterivEXT _onutGetTextureLevelParameterivEXT
#define glGetTextureParameterIiv _onutGetTextureParameterIiv
#define glGetTextureParameterIivEXT _onutGetTextureParameterIivEXT
#define glGetTextureParameterIuiv _onutGetTextureParameterIuiv
#define glGetTextureParameterIuivEXT _onutGetTextureParameterIuivEXT
#define glGetTextureParameterfv _onutGetTextureParameterfv
#define glGetTextureParameterfvEXT _onutGetTextureParameterfvEXT
#define glGetTextureParameteriv _onutGetTextureParameteriv
#define glGetTextureParameterivEXT _onutGetTextureParameterivEXT
#define glGetTextureSamplerHandleARB _onutGetTextureSamplerHandleARB
#define glGetTextureSamplerHandleIMG _onutGetTextureSamplerHandleIMG
#define glGetTextureSamplerHandleNV _onutGetTextureSamplerHandleNV
#define glGetTextureSubImage _onutGetTextureSubImage
#define glGetTrackMatrixivNV _onutGetTrackMatrixivNV
#define glGetTransformFeedbackVarying _onutGetTransformFeedbackVarying
#define glGetTransformFeedbackVaryingEXT _onutGetTransformFeedbackVaryingEXT
#define glGetTransformFeedbackVaryingNV _onutGetTransformFeedbackVaryingNV
#define glGetTransformFeedbacki64_v _onutGetTransformFeedbacki64_v
#define glGetTransformFeedbacki_v _onutGetTransformFeedbacki_v
#define glGetTransformFeedbackiv _onutGetTransformFeedbackiv
#define glGetTranslatedShaderSourceANGLE _onutGetTranslatedShaderSourceANGLE
#define glGetUniformBlockIndex _onutGetUniformBlockIndex
#define glGetUniformBufferSizeEXT _onutGetUniformBufferSizeEXT
#define glGetUniformIndices _onutGetUniformIndices
#define glGetUniformLocation _onutGetUniformLocation
#define glGetUniformLocationARB _onutGetUniformLocationARB
#define glGetUniformOffsetEXT _onutGetUniformOffsetEXT
#define glGetUniformSubroutineuiv _onutGetUniformSubroutineuiv
#define glGetUniformdv _onutGetUniformdv
#define glGetUniformfv _onutGetUniformfv
#define glGetUniformfvARB _onutGetUniformfvARB
#define glGetUniformi64vARB _onutGetUniformi64vARB
#define glGetUniformi64vNV _onutGetUniformi64vNV
#define glGetUniformiv _onutGetUniformiv
#define glGetUniformivARB _onutGetUniformivARB
#define glGetUniformui64vARB _onutGetUniformui64vARB
#define glGetUniformui64vNV _onutGetUniformui64vNV
#define glGetUniformuiv _onutGetUniformuiv
#define glGetUniformuivEXT _onutGetUniformuivEXT
#define glGetUnsignedBytei_vEXT _onutGetUnsignedBytei_vEXT
#define glGetUnsignedBytevEXT _onutGetUnsignedBytevEXT
#define glGetVariantArrayObjectfvATI _onutGetVariantArrayObjectfvATI
#define glGetVariantArrayObjectivATI _onutGetVariantArrayObjectivATI
#define glGetVariantBooleanvEXT _onutGetVariantBooleanvEXT
#define glGetVariantFloatvEXT _onutGetVariantFloatvEXT
#define glGetVariantIntegervEXT _onutGetVariantIntegervEXT
#define glGetVariantPointervEXT _onutGetVariantPointervEXT
#define glGetVaryingLocationNV _onutGetVaryingLocationNV
#define glGetVertexArrayIndexed64iv _onutGetVertexArrayIndexed64iv
#define glGetVertexArrayIndexediv _onutGetVertexArrayIndexediv
#define glGetVertexArrayIntegeri_vEXT _onutGetVertexArrayIntegeri_vEXT
#define glGetVertexArrayIntegervEXT _onutGetVertexArrayIntegervEXT
#define glGetVertexArrayPointeri_vEXT _onutGetVertexArrayPointeri_vEXT
#define glGetVertexArrayPointervEXT _onutGetVertexArrayPointervEXT
#define glGetVertexArrayiv _onutGetVertexArrayiv
#define glGetVertexAttribArrayObjectfvATI _onutGetVertexAttribArrayObjectfvATI
#define glGetVertexAttribArrayObjectivATI _onutGetVertexAttribArrayObjectivATI
#define glGetVertexAttribIiv _onutGetVertexAttribIiv
#define glGetVertexAttribIivEXT _onutGetVertexAttribIivEXT
#define glGetVertexAttribIuiv _onutGetVertexAttribIuiv
#define glGetVertexAttribIuivEXT _onutGetVertexAttribIuivEXT
#define glGetVertexAttribLdv _onutGetVertexAttribLdv
#define glGetVertexAttribLdvEXT _onutGetVertexAttribLdvEXT
#define glGetVertexAttribLi64vNV _onutGetVertexAttribLi64vNV
#define glGetVertexAttribLui64vARB _onutGetVertexAttribLui64vARB
#define glGetVertexAttribLui64vNV _onutGetVertexAttribLui64vNV
#define glGetVertexAttribPointerv _onutGetVertexAttribPointerv
#define glGetVertexAttribPointervARB _onutGetVertexAttribPointervARB
#define glGetVertexAttribPointervNV _onutGetVertexAttribPointervNV
#define glGetVertexAttribdv _onutGetVertexAttribdv
#define glGetVertexAttribdvARB _onutGetVertexAttribdvARB
#define glGetVertexAttribdvNV _onutGetVertexAttribdvNV
#define glGetVertexAttribfv _onutGetVertexAttribfv
#define glGetVertexAttribfvARB _onutGetVertexAttribfvARB
#define glGetVertexAttribfvNV _onutGetVertexAttribfvNV
#define glGetVertexAttribiv _onutGetVertexAttribiv
#define glGetVertexAttribivARB _onutGetVertexAttribivARB
#define glGetVertexAttribivNV _onutGetVertexAttribivNV
#define glGetVideoCaptureStreamdvNV _onutGetVideoCaptureStreamdvNV
#define glGetVideoCaptureStreamfvNV _onutGetVideoCaptureStreamfvNV
#define glGetVideoCaptureStreamivNV _onutGetVideoCaptureStreamivNV
#define glGetVideoCaptureivNV _onutGetVideoCaptureivNV
#define glGetVideoi64vNV _onutGetVideoi64vNV
#define glGetVideoivNV _onutGetVideoivNV
#define glGetVideoui64vNV _onutGetVideoui64vNV
#define glGetVideouivNV _onutGetVideouivNV
#define glGetVkProcAddrNV _onutGetVkProcAddrNV
#define glGetnColorTable _onutGetnColorTable
#define glGetnColorTableARB _onutGetnColorTableARB
#define glGetnCompressedTexImage _onutGetnCompressedTexImage
#define glGetnCompressedTexImageARB _onutGetnCompressedTexImageARB
#define glGetnConvolutionFilter _onutGetnConvolutionFilter
#define glGetnConvolutionFilterARB _onutGetnConvolutionFilterARB
#define glGetnHistogram _onutGetnHistogram
#define glGetnHistogramARB _onutGetnHistogramARB
#define glGetnMapdv _onutGetnMapdv
#define glGetnMapdvARB _onutGetnMapdvARB
#define glGetnMapfv _onutGetnMapfv
#define glGetnMapfvARB _onutGetnMapfvARB
#define glGetnMapiv _onutGetnMapiv
#define glGetnMapivARB _onutGetnMapivARB
#define glGetnMinmax _onutGetnMinmax
#define glGetnMinmaxARB _onutGetnMinmaxARB
#define glGetnPixelMapfv _onutGetnPixelMapfv
#define glGetnPixelMapfvARB _onutGetnPixelMapfvARB
#define glGetnPixelMapuiv _onutGetnPixelMapuiv
#define glGetnPixelMapuivARB _onutGetnPixelMapuivARB
#define glGetnPixelMapusv _onutGetnPixelMapusv
#define glGetnPixelMapusvARB _onutGetnPixelMapusvARB
#define glGetnPolygonStipple _onutGetnPolygonStipple
#define glGetnPolygonStippleARB _onutGetnPolygonStippleARB
#define glGetnSeparableFilter _onutGetnSeparableFilter
#define glGetnSeparableFilterARB _onutGetnSeparableFilterARB
#define glGetnTexImage _onutGetnTexImage
#define glGetnTexImageARB _onutGetnTexImageARB
#define glGetnUniformdv _onutGetnUniformdv
#define glGetnUniformdvARB _onutGetnUniformdvARB
#define glGetnUniformfv _onutGetnUniformfv
#define glGetnUniformfvARB _onutGetnUniformfvARB
#define glGetnUniformfvEXT _onutGetnUniformfvEXT
#define glGetnUniformfvKHR _onutGetnUniformfvKHR
#define glGetnUniformi64vARB _onutGetnUniformi64vARB
#define glGetnUniformiv _onutGetnUniformiv
#define glGetnUniformivARB _onutGetnUniformivARB
#define glGetnUniformivEXT _onutGetnUniformivEXT
#define glGetnUniformivKHR _onutGetnUniformivKHR
#define glGetnUniformui64vARB _onutGetnUniformui64vARB
#define glGetnUniformuiv _onutGetnUniformuiv
#define glGetnUniformuivARB _onutGetnUniformuivARB
#define glGetnUniformuivKHR _onutGetnUniformuivKHR
#define glGlobalAlphaFactorbSUN _onutGlobalAlphaFactorbSUN
#define glGlobalAlphaFactordSUN _onutGlobalAlphaFactordSUN
#define glGlobalAlphaFactorfSUN _onutGlobalAlphaFactorfSUN
#define glGlobalAlphaFactoriSUN _onutGlobalAlphaFactoriSUN
#define glGlobalAlphaFactorsSUN _onutGlobalAlphaFactorsSUN
#define glGlobalAlphaFactorubSUN _onutGlobalAlphaFactorubSUN
#define glGlobalAlphaFactoruiSUN _onutGlobalAlphaFactoruiSUN
#define glGlobalAlphaFactorusSUN _onutGlobalAlphaFactorusSUN
#define glHint _onutHint
#define glHintPGI _onutHintPGI
#define glHistogram _onutHistogram
#define glHistogramEXT _onutHistogramEXT
#define glIglooInterfaceSGIX _onutIglooInterfaceSGIX
#define glImageTransformParameterfHP _onutImageTransformParameterfHP
#define glImageTransformParameterfvHP _onutImageTransformParameterfvHP
#define glImageTransformParameteriHP _onutImageTransformParameteriHP
#define glImageTransformParameterivHP _onutImageTransformParameterivHP
#define glImportMemoryFdEXT _onutImportMemoryFdEXT
#define glImportMemoryWin32HandleEXT _onutImportMemoryWin32HandleEXT
#define glImportMemoryWin32NameEXT _onutImportMemoryWin32NameEXT
#define glImportSemaphoreFdEXT _onutImportSemaphoreFdEXT
#define glImportSemaphoreWin32HandleEXT _onutImportSemaphoreWin32HandleEXT
#define glImportSemaphoreWin32NameEXT _onutImportSemaphoreWin32NameEXT
#define glImportSyncEXT _onutImportSyncEXT
#define glIndexFormatNV _onutIndexFormatNV
#define glIndexFuncEXT _onutIndexFuncEXT
#define glIndexMaterialEXT _onutIndexMaterialEXT
#define glIndexPointerEXT _onutIndexPointerEXT
#define glIndexPointerListIBM _onutIndexPointerListIBM
#define glIndexxOES _onutIndexxOES
#define glIndexxvOES _onutIndexxvOES
#define glInsertComponentEXT _onutInsertComponentEXT
#define glInsertEventMarkerEXT _onutInsertEventMarkerEXT
#define glInstrumentsBufferSGIX _onutInstrumentsBufferSGIX
#define glInterpolatePathsNV _onutInterpolatePathsNV
#define glInvalidateBufferData _onutInvalidateBufferData
#define glInvalidateBufferSubData _onutInvalidateBufferSubData
#define glInvalidateFramebuffer _onutInvalidateFramebuffer
#define glInvalidateNamedFramebufferData _onutInvalidateNamedFramebufferData
#define glInvalidateNamedFramebufferSubData _onutInvalidateNamedFramebufferSubData
#define glInvalidateSubFramebuffer _onutInvalidateSubFramebuffer
#define glInvalidateTexImage _onutInvalidateTexImage
#define glInvalidateTexSubImage _onutInvalidateTexSubImage
#define glIsAsyncMarkerSGIX _onutIsAsyncMarkerSGIX
#define glIsBuffer _onutIsBuffer
#define glIsBufferARB _onutIsBufferARB
#define glIsBufferResidentNV _onutIsBufferResidentNV
#define glIsCommandListNV _onutIsCommandListNV
#define glIsEnabled _onutIsEnabled
#define glIsEnabledIndexedEXT _onutIsEnabledIndexedEXT
#define glIsEnabledi _onutIsEnabledi
#define glIsEnablediEXT _onutIsEnablediEXT
#define glIsEnablediNV _onutIsEnablediNV
#define glIsEnablediOES _onutIsEnablediOES
#define glIsFenceAPPLE _onutIsFenceAPPLE
#define glIsFenceNV _onutIsFenceNV
#define glIsFramebuffer _onutIsFramebuffer
#define glIsFramebufferEXT _onutIsFramebufferEXT
#define glIsImageHandleResidentARB _onutIsImageHandleResidentARB
#define glIsImageHandleResidentNV _onutIsImageHandleResidentNV
#define glIsMemoryObjectEXT _onutIsMemoryObjectEXT
#define glIsNameAMD _onutIsNameAMD
#define glIsNamedBufferResidentNV _onutIsNamedBufferResidentNV
#define glIsNamedStringARB _onutIsNamedStringARB
#define glIsObjectBufferATI _onutIsObjectBufferATI
#define glIsOcclusionQueryNV _onutIsOcclusionQueryNV
#define glIsPathNV _onutIsPathNV
#define glIsPointInFillPathNV _onutIsPointInFillPathNV
#define glIsPointInStrokePathNV _onutIsPointInStrokePathNV
#define glIsProgram _onutIsProgram
#define glIsProgramARB _onutIsProgramARB
#define glIsProgramNV _onutIsProgramNV
#define glIsProgramPipeline _onutIsProgramPipeline
#define glIsProgramPipelineEXT _onutIsProgramPipelineEXT
#define glIsQuery _onutIsQuery
#define glIsQueryARB _onutIsQueryARB
#define glIsQueryEXT _onutIsQueryEXT
#define glIsRenderbuffer _onutIsRenderbuffer
#define glIsRenderbufferEXT _onutIsRenderbufferEXT
#define glIsSampler _onutIsSampler
#define glIsSemaphoreEXT _onutIsSemaphoreEXT
#define glIsShader _onutIsShader
#define glIsStateNV _onutIsStateNV
#define glIsSync _onutIsSync
#define glIsSyncAPPLE _onutIsSyncAPPLE
#define glIsTexture _onutIsTexture
#define glIsTextureEXT _onutIsTextureEXT
#define glIsTextureHandleResidentARB _onutIsTextureHandleResidentARB
#define glIsTextureHandleResidentNV _onutIsTextureHandleResidentNV
#define glIsTransformFeedback _onutIsTransformFeedback
#define glIsTransformFeedbackNV _onutIsTransformFeedbackNV
#define glIsVariantEnabledEXT _onutIsVariantEnabledEXT
#define glIsVertexArray _onutIsVertexArray
#define glIsVertexArrayAPPLE _onutIsVertexArrayAPPLE
#define glIsVertexArrayOES _onutIsVertexArrayOES
#define glIsVertexAttribEnabledAPPLE _onutIsVertexAttribEnabledAPPLE
#define glLGPUCopyImageSubDataNVX _onutLGPUCopyImageSubDataNVX
#define glLGPUInterlockNVX _onutLGPUInterlockNVX
#define glLGPUNamedBufferSubDataNVX _onutLGPUNamedBufferSubDataNVX
#define glLabelObjectEXT _onutLabelObjectEXT
#define glLightEnviSGIX _onutLightEnviSGIX
#define glLightModelxOES _onutLightModelxOES
#define glLightModelxvOES _onutLightModelxvOES
#define glLightxOES _onutLightxOES
#define glLightxvOES _onutLightxvOES
#define glLineWidth _onutLineWidth
#define glLineWidthxOES _onutLineWidthxOES
#define glLinkProgram _onutLinkProgram
#define glLinkProgramARB _onutLinkProgramARB
#define glListDrawCommandsStatesClientNV _onutListDrawCommandsStatesClientNV
#define glListParameterfSGIX _onutListParameterfSGIX
#define glListParameterfvSGIX _onutListParameterfvSGIX
#define glListParameteriSGIX _onutListParameteriSGIX
#define glListParameterivSGIX _onutListParameterivSGIX
#define glLoadIdentityDeformationMapSGIX _onutLoadIdentityDeformationMapSGIX
#define glLoadMatrixxOES _onutLoadMatrixxOES
#define glLoadProgramNV _onutLoadProgramNV
#define glLoadTransposeMatrixd _onutLoadTransposeMatrixd
#define glLoadTransposeMatrixdARB _onutLoadTransposeMatrixdARB
#define glLoadTransposeMatrixf _onutLoadTransposeMatrixf
#define glLoadTransposeMatrixfARB _onutLoadTransposeMatrixfARB
#define glLoadTransposeMatrixxOES _onutLoadTransposeMatrixxOES
#define glLockArraysEXT _onutLockArraysEXT
#define glLogicOp _onutLogicOp
#define glMakeBufferNonResidentNV _onutMakeBufferNonResidentNV
#define glMakeBufferResidentNV _onutMakeBufferResidentNV
#define glMakeImageHandleNonResidentARB _onutMakeImageHandleNonResidentARB
#define glMakeImageHandleNonResidentNV _onutMakeImageHandleNonResidentNV
#define glMakeImageHandleResidentARB _onutMakeImageHandleResidentARB
#define glMakeImageHandleResidentNV _onutMakeImageHandleResidentNV
#define glMakeNamedBufferNonResidentNV _onutMakeNamedBufferNonResidentNV
#define glMakeNamedBufferResidentNV _onutMakeNamedBufferResidentNV
#define glMakeTextureHandleNonResidentARB _onutMakeTextureHandleNonResidentARB
#define glMakeTextureHandleNonResidentNV _onutMakeTextureHandleNonResidentNV
#define glMakeTextureHandleResidentARB _onutMakeTextureHandleResidentARB
#define glMakeTextureHandleResidentNV _onutMakeTextureHandleResidentNV
#define glMap1xOES _onutMap1xOES
#define glMap2xOES _onutMap2xOES
#define glMapBuffer _onutMapBuffer
#define glMapBufferARB _onutMapBufferARB
#define glMapBufferOES _onutMapBufferOES
#define glMapBufferRange _onutMapBufferRange
#define glMapBufferRangeEXT _onutMapBufferRangeEXT
#define glMapControlPointsNV _onutMapControlPointsNV
#define glMapGrid1xOES _onutMapGrid1xOES
#define glMapGrid2xOES _onutMapGrid2xOES
#define glMapNamedBuffer _onutMapNamedBuffer
#define glMapNamedBufferEXT _onutMapNamedBufferEXT
#define glMapNamedBufferRange _onutMapNamedBufferRange
#define glMapNamedBufferRangeEXT _onutMapNamedBufferRangeEXT
#define glMapObjectBufferATI _onutMapObjectBufferATI
#define glMapParameterfvNV _onutMapParameterfvNV
#define glMapParameterivNV _onutMapParameterivNV
#define glMapTexture2DINTEL _onutMapTexture2DINTEL
#define glMapVertexAttrib1dAPPLE _onutMapVertexAttrib1dAPPLE
#define glMapVertexAttrib1fAPPLE _onutMapVertexAttrib1fAPPLE
#define glMapVertexAttrib2dAPPLE _onutMapVertexAttrib2dAPPLE
#define glMapVertexAttrib2fAPPLE _onutMapVertexAttrib2fAPPLE
#define glMaterialxOES _onutMaterialxOES
#define glMaterialxvOES _onutMaterialxvOES
#define glMatrixFrustumEXT _onutMatrixFrustumEXT
#define glMatrixIndexPointerARB _onutMatrixIndexPointerARB
#define glMatrixIndexubvARB _onutMatrixIndexubvARB
#define glMatrixIndexuivARB _onutMatrixIndexuivARB
#define glMatrixIndexusvARB _onutMatrixIndexusvARB
#define glMatrixLoad3x2fNV _onutMatrixLoad3x2fNV
#define glMatrixLoad3x3fNV _onutMatrixLoad3x3fNV
#define glMatrixLoadIdentityEXT _onutMatrixLoadIdentityEXT
#define glMatrixLoadTranspose3x3fNV _onutMatrixLoadTranspose3x3fNV
#define glMatrixLoadTransposedEXT _onutMatrixLoadTransposedEXT
#define glMatrixLoadTransposefEXT _onutMatrixLoadTransposefEXT
#define glMatrixLoaddEXT _onutMatrixLoaddEXT
#define glMatrixLoadfEXT _onutMatrixLoadfEXT
#define glMatrixMult3x2fNV _onutMatrixMult3x2fNV
#define glMatrixMult3x3fNV _onutMatrixMult3x3fNV
#define glMatrixMultTranspose3x3fNV _onutMatrixMultTranspose3x3fNV
#define glMatrixMultTransposedEXT _onutMatrixMultTransposedEXT
#define glMatrixMultTransposefEXT _onutMatrixMultTransposefEXT
#define glMatrixMultdEXT _onutMatrixMultdEXT
#define glMatrixMultfEXT _onutMatrixMultfEXT
#define glMatrixOrthoEXT _onutMatrixOrthoEXT
#define glMatrixPopEXT _onutMatrixPopEXT
#define glMatrixPushEXT _onutMatrixPushEXT
#define glMatrixRotatedEXT _onutMatrixRotatedEXT
#define glMatrixRotatefEXT _onutMatrixRotatefEXT
#define glMatrixScaledEXT _onutMatrixScaledEXT
#define glMatrixScalefEXT _onutMatrixScalefEXT
#define glMatrixTranslatedEXT _onutMatrixTranslatedEXT
#define glMatrixTranslatefEXT _onutMatrixTranslatefEXT
#define glMaxShaderCompilerThreadsARB _onutMaxShaderCompilerThreadsARB
#define glMemoryBarrier _onutMemoryBarrier
#define glMemoryBarrierByRegion _onutMemoryBarrierByRegion
#define glMemoryBarrierEXT _onutMemoryBarrierEXT
#define glMemoryObjectParameterivEXT _onutMemoryObjectParameterivEXT
#define glMinSampleShading _onutMinSampleShading
#define glMinSampleShadingARB _onutMinSampleShadingARB
#define glMinSampleShadingOES _onutMinSampleShadingOES
#define glMinmax _onutMinmax
#define glMinmaxEXT _onutMinmaxEXT
#define glMultMatrixxOES _onutMultMatrixxOES
#define glMultTransposeMatrixd _onutMultTransposeMatrixd
#define glMultTransposeMatrixdARB _onutMultTransposeMatrixdARB
#define glMultTransposeMatrixf _onutMultTransposeMatrixf
#define glMultTransposeMatrixfARB _onutMultTransposeMatrixfARB
#define glMultTransposeMatrixxOES _onutMultTransposeMatrixxOES
#define glMultiDrawArrays _onutMultiDrawArrays
#define glMultiDrawArraysEXT _onutMultiDrawArraysEXT
#define glMultiDrawArraysIndirect _onutMultiDrawArraysIndirect
#define glMultiDrawArraysIndirectAMD _onutMultiDrawArraysIndirectAMD
#define glMultiDrawArraysIndirectBindlessCountNV _onutMultiDrawArraysIndirectBindlessCountNV
#define glMultiDrawArraysIndirectBindlessNV _onutMultiDrawArraysIndirectBindlessNV
#define glMultiDrawArraysIndirectCountARB _onutMultiDrawArraysIndirectCountARB
#define glMultiDrawArraysIndirectEXT _onutMultiDrawArraysIndirectEXT
#define glMultiDrawElementArrayAPPLE _onutMultiDrawElementArrayAPPLE
#define glMultiDrawElements _onutMultiDrawElements
#define glMultiDrawElementsBaseVertex _onutMultiDrawElementsBaseVertex
#define glMultiDrawElementsBaseVertexEXT _onutMultiDrawElementsBaseVertexEXT
#define glMultiDrawElementsBaseVertexOES _onutMultiDrawElementsBaseVertexOES
#define glMultiDrawElementsEXT _onutMultiDrawElementsEXT
#define glMultiDrawElementsIndirect _onutMultiDrawElementsIndirect
#define glMultiDrawElementsIndirectAMD _onutMultiDrawElementsIndirectAMD
#define glMultiDrawElementsIndirectBindlessCountNV _onutMultiDrawElementsIndirectBindlessCountNV
#define glMultiDrawElementsIndirectBindlessNV _onutMultiDrawElementsIndirectBindlessNV
#define glMultiDrawElementsIndirectCountARB _onutMultiDrawElementsIndirectCountARB
#define glMultiDrawElementsIndirectEXT _onutMultiDrawElementsIndirectEXT
#define glMultiDrawRangeElementArrayAPPLE _onutMultiDrawRangeElementArrayAPPLE
#define glMultiModeDrawArraysIBM _onutMultiModeDrawArraysIBM
#define glMultiModeDrawElementsIBM _onutMultiModeDrawElementsIBM
#define glMultiTexBufferEXT _onutMultiTexBufferEXT
#define glMultiTexCoord1bOES _onutMultiTexCoord1bOES
#define glMultiTexCoord1bvOES _onutMultiTexCoord1bvOES
#define glMultiTexCoord1d _onutMultiTexCoord1d
#define glMultiTexCoord1dARB _onutMultiTexCoord1dARB
#define glMultiTexCoord1dv _onutMultiTexCoord1dv
#define glMultiTexCoord1dvARB _onutMultiTexCoord1dvARB
#define glMultiTexCoord1f _onutMultiTexCoord1f
#define glMultiTexCoord1fARB _onutMultiTexCoord1fARB
#define glMultiTexCoord1fv _onutMultiTexCoord1fv
#define glMultiTexCoord1fvARB _onutMultiTexCoord1fvARB
#define glMultiTexCoord1hNV _onutMultiTexCoord1hNV
#define glMultiTexCoord1hvNV _onutMultiTexCoord1hvNV
#define glMultiTexCoord1i _onutMultiTexCoord1i
#define glMultiTexCoord1iARB _onutMultiTexCoord1iARB
#define glMultiTexCoord1iv _onutMultiTexCoord1iv
#define glMultiTexCoord1ivARB _onutMultiTexCoord1ivARB
#define glMultiTexCoord1s _onutMultiTexCoord1s
#define glMultiTexCoord1sARB _onutMultiTexCoord1sARB
#define glMultiTexCoord1sv _onutMultiTexCoord1sv
#define glMultiTexCoord1svARB _onutMultiTexCoord1svARB
#define glMultiTexCoord1xOES _onutMultiTexCoord1xOES
#define glMultiTexCoord1xvOES _onutMultiTexCoord1xvOES
#define glMultiTexCoord2bOES _onutMultiTexCoord2bOES
#define glMultiTexCoord2bvOES _onutMultiTexCoord2bvOES
#define glMultiTexCoord2d _onutMultiTexCoord2d
#define glMultiTexCoord2dARB _onutMultiTexCoord2dARB
#define glMultiTexCoord2dv _onutMultiTexCoord2dv
#define glMultiTexCoord2dvARB _onutMultiTexCoord2dvARB
#define glMultiTexCoord2f _onutMultiTexCoord2f
#define glMultiTexCoord2fARB _onutMultiTexCoord2fARB
#define glMultiTexCoord2fv _onutMultiTexCoord2fv
#define glMultiTexCoord2fvARB _onutMultiTexCoord2fvARB
#define glMultiTexCoord2hNV _onutMultiTexCoord2hNV
#define glMultiTexCoord2hvNV _onutMultiTexCoord2hvNV
#define glMultiTexCoord2i _onutMultiTexCoord2i
#define glMultiTexCoord2iARB _onutMultiTexCoord2iARB
#define glMultiTexCoord2iv _onutMultiTexCoord2iv
#define glMultiTexCoord2ivARB _onutMultiTexCoord2ivARB
#define glMultiTexCoord2s _onutMultiTexCoord2s
#define glMultiTexCoord2sARB _onutMultiTexCoord2sARB
#define glMultiTexCoord2sv _onutMultiTexCoord2sv
#define glMultiTexCoord2svARB _onutMultiTexCoord2svARB
#define glMultiTexCoord2xOES _onutMultiTexCoord2xOES
#define glMultiTexCoord2xvOES _onutMultiTexCoord2xvOES
#define glMultiTexCoord3bOES _onutMultiTexCoord3bOES
#define glMultiTexCoord3bvOES _onutMultiTexCoord3bvOES
#define glMultiTexCoord3d _onutMultiTexCoord3d
#define glMultiTexCoord3dARB _onutMultiTexCoord3dARB
#define glMultiTexCoord3dv _onutMultiTexCoord3dv
#define glMultiTexCoord3dvARB _onutMultiTexCoord3dvARB
#define glMultiTexCoord3f _onutMultiTexCoord3f
#define glMultiTexCoord3fARB _onutMultiTexCoord3fARB
#define glMultiTexCoord3fv _onutMultiTexCoord3fv
#define glMultiTexCoord3fvARB _onutMultiTexCoord3fvARB
#define glMultiTexCoord3hNV _onutMultiTexCoord3hNV
#define glMultiTexCoord3hvNV _onutMultiTexCoord3hvNV
#define glMultiTexCoord3i _onutMultiTexCoord3i
#define glMultiTexCoord3iARB _onutMultiTexCoord3iARB
#define glMultiTexCoord3iv _onutMultiTexCoord3iv
#define glMultiTexCoord3ivARB _onutMultiTexCoord3ivARB
#define glMultiTexCoord3s _onutMultiTexCoord3s
#define glMultiTexCoord3sARB _onutMultiTexCoord3sARB
#define glMultiTexCoord3sv _onutMultiTexCoord3sv
#define glMultiTexCoord3svARB _onutMultiTexCoord3svARB
#define glMultiTexCoord3xOES _onutMultiTexCoord3xOES
#define glMultiTexCoord3xvOES _onutMultiTexCoord3xvOES
#define glMultiTexCoord4bOES _onutMultiTexCoord4bOES
#define glMultiTexCoord4bvOES _onutMultiTexCoord4bvOES
#define glMultiTexCoord4d _onutMultiTexCoord4d
#define glMultiTexCoord4dARB _onutMultiTexCoord4dARB
#define glMultiTexCoord4dv _onutMultiTexCoord4dv
#define glMultiTexCoord4dvARB _onutMultiTexCoord4dvARB
#define glMultiTexCoord4f _onutMultiTexCoord4f
#define glMultiTexCoord4fARB _onutMultiTexCoord4fARB
#define glMultiTexCoord4fv _onutMultiTexCoord4fv
#define glMultiTexCoord4fvARB _onutMultiTexCoord4fvARB
#define glMultiTexCoord4hNV _onutMultiTexCoord4hNV
#define glMultiTexCoord4hvNV _onutMultiTexCoord4hvNV
#define glMultiTexCoord4i _onutMultiTexCoord4i
#define glMultiTexCoord4iARB _onutMultiTexCoord4iARB
#define glMultiTexCoord4iv _onutMultiTexCoord4iv
#define glMultiTexCoord4ivARB _onutMultiTexCoord4ivARB
#define glMultiTexCoord4s _onutMultiTexCoord4s
#define glMultiTexCoord4sARB _onutMultiTexCoord4sARB
#define glMultiTexCoord4sv _onutMultiTexCoord4sv
#define glMultiTexCoord4svARB _onutMultiTexCoord4svARB
#define glMultiTexCoord4xOES _onutMultiTexCoord4xOES
#define glMultiTexCoord4xvOES _onutMultiTexCoord4xvOES
#define glMultiTexCoordP1ui _onutMultiTexCoordP1ui
#define glMultiTexCoordP1uiv _onutMultiTexCoordP1uiv
#define glMultiTexCoordP2ui _onutMultiTexCoordP2ui
#define glMultiTexCoordP2uiv _onutMultiTexCoordP2uiv
#define glMultiTexCoordP3ui _onutMultiTexCoordP3ui
#define glMultiTexCoordP3uiv _onutMultiTexCoordP3uiv
#define glMultiTexCoordP4ui _onutMultiTexCoordP4ui
#define glMultiTexCoordP4uiv _onutMultiTexCoordP4uiv
#define glMultiTexCoordPointerEXT _onutMultiTexCoordPointerEXT
#define glMultiTexEnvfEXT _onutMultiTexEnvfEXT
#define glMultiTexEnvfvEXT _onutMultiTexEnvfvEXT
#define glMultiTexEnviEXT _onutMultiTexEnviEXT
#define glMultiTexEnvivEXT _onutMultiTexEnvivEXT
#define glMultiTexGendEXT _onutMultiTexGendEXT
#define glMultiTexGendvEXT _onutMultiTexGendvEXT
#define glMultiTexGenfEXT _onutMultiTexGenfEXT
#define glMultiTexGenfvEXT _onutMultiTexGenfvEXT
#define glMultiTexGeniEXT _onutMultiTexGeniEXT
#define glMultiTexGenivEXT _onutMultiTexGenivEXT
#define glMultiTexImage1DEXT _onutMultiTexImage1DEXT
#define glMultiTexImage2DEXT _onutMultiTexImage2DEXT
#define glMultiTexImage3DEXT _onutMultiTexImage3DEXT
#define glMultiTexParameterIivEXT _onutMultiTexParameterIivEXT
#define glMultiTexParameterIuivEXT _onutMultiTexParameterIuivEXT
#define glMultiTexParameterfEXT _onutMultiTexParameterfEXT
#define glMultiTexParameterfvEXT _onutMultiTexParameterfvEXT
#define glMultiTexParameteriEXT _onutMultiTexParameteriEXT
#define glMultiTexParameterivEXT _onutMultiTexParameterivEXT
#define glMultiTexRenderbufferEXT _onutMultiTexRenderbufferEXT
#define glMultiTexSubImage1DEXT _onutMultiTexSubImage1DEXT
#define glMultiTexSubImage2DEXT _onutMultiTexSubImage2DEXT
#define glMultiTexSubImage3DEXT _onutMultiTexSubImage3DEXT
#define glMulticastBarrierNV _onutMulticastBarrierNV
#define glMulticastBlitFramebufferNV _onutMulticastBlitFramebufferNV
#define glMulticastBufferSubDataNV _onutMulticastBufferSubDataNV
#define glMulticastCopyBufferSubDataNV _onutMulticastCopyBufferSubDataNV
#define glMulticastCopyImageSubDataNV _onutMulticastCopyImageSubDataNV
#define glMulticastFramebufferSampleLocationsfvNV _onutMulticastFramebufferSampleLocationsfvNV
#define glMulticastGetQueryObjecti64vNV _onutMulticastGetQueryObjecti64vNV
#define glMulticastGetQueryObjectivNV _onutMulticastGetQueryObjectivNV
#define glMulticastGetQueryObjectui64vNV _onutMulticastGetQueryObjectui64vNV
#define glMulticastGetQueryObjectuivNV _onutMulticastGetQueryObjectuivNV
#define glMulticastWaitSyncNV _onutMulticastWaitSyncNV
#define glNamedBufferData _onutNamedBufferData
#define glNamedBufferDataEXT _onutNamedBufferDataEXT
#define glNamedBufferPageCommitmentARB _onutNamedBufferPageCommitmentARB
#define glNamedBufferPageCommitmentEXT _onutNamedBufferPageCommitmentEXT
#define glNamedBufferStorage _onutNamedBufferStorage
#define glNamedBufferStorageEXT _onutNamedBufferStorageEXT
#define glNamedBufferStorageExternalEXT _onutNamedBufferStorageExternalEXT
#define glNamedBufferStorageMemEXT _onutNamedBufferStorageMemEXT
#define glNamedBufferSubData _onutNamedBufferSubData
#define glNamedBufferSubDataEXT _onutNamedBufferSubDataEXT
#define glNamedCopyBufferSubDataEXT _onutNamedCopyBufferSubDataEXT
#define glNamedFramebufferDrawBuffer _onutNamedFramebufferDrawBuffer
#define glNamedFramebufferDrawBuffers _onutNamedFramebufferDrawBuffers
#define glNamedFramebufferParameteri _onutNamedFramebufferParameteri
#define glNamedFramebufferParameteriEXT _onutNamedFramebufferParameteriEXT
#define glNamedFramebufferReadBuffer _onutNamedFramebufferReadBuffer
#define glNamedFramebufferRenderbuffer _onutNamedFramebufferRenderbuffer
#define glNamedFramebufferRenderbufferEXT _onutNamedFramebufferRenderbufferEXT
#define glNamedFramebufferSampleLocationsfvARB _onutNamedFramebufferSampleLocationsfvARB
#define glNamedFramebufferSampleLocationsfvNV _onutNamedFramebufferSampleLocationsfvNV
#define glNamedFramebufferSamplePositionsfvAMD _onutNamedFramebufferSamplePositionsfvAMD
#define glNamedFramebufferTexture _onutNamedFramebufferTexture
#define glNamedFramebufferTexture1DEXT _onutNamedFramebufferTexture1DEXT
#define glNamedFramebufferTexture2DEXT _onutNamedFramebufferTexture2DEXT
#define glNamedFramebufferTexture3DEXT _onutNamedFramebufferTexture3DEXT
#define glNamedFramebufferTextureEXT _onutNamedFramebufferTextureEXT
#define glNamedFramebufferTextureFaceEXT _onutNamedFramebufferTextureFaceEXT
#define glNamedFramebufferTextureLayer _onutNamedFramebufferTextureLayer
#define glNamedFramebufferTextureLayerEXT _onutNamedFramebufferTextureLayerEXT
#define glNamedProgramLocalParameter4dEXT _onutNamedProgramLocalParameter4dEXT
#define glNamedProgramLocalParameter4dvEXT _onutNamedProgramLocalParameter4dvEXT
#define glNamedProgramLocalParameter4fEXT _onutNamedProgramLocalParameter4fEXT
#define glNamedProgramLocalParameter4fvEXT _onutNamedProgramLocalParameter4fvEXT
#define glNamedProgramLocalParameterI4iEXT _onutNamedProgramLocalParameterI4iEXT
#define glNamedProgramLocalParameterI4ivEXT _onutNamedProgramLocalParameterI4ivEXT
#define glNamedProgramLocalParameterI4uiEXT _onutNamedProgramLocalParameterI4uiEXT
#define glNamedProgramLocalParameterI4uivEXT _onutNamedProgramLocalParameterI4uivEXT
#define glNamedProgramLocalParameters4fvEXT _onutNamedProgramLocalParameters4fvEXT
#define glNamedProgramLocalParametersI4ivEXT _onutNamedProgramLocalParametersI4ivEXT
#define glNamedProgramLocalParametersI4uivEXT _onutNamedProgramLocalParametersI4uivEXT
#define glNamedProgramStringEXT _onutNamedProgramStringEXT
#define glNamedRenderbufferStorage _onutNamedRenderbufferStorage
#define glNamedRenderbufferStorageEXT _onutNamedRenderbufferStorageEXT
#define glNamedRenderbufferStorageMultisample _onutNamedRenderbufferStorageMultisample
#define glNamedRenderbufferStorageMultisampleCoverageEXT _onutNamedRenderbufferStorageMultisampleCoverageEXT
#define glNamedRenderbufferStorageMultisampleEXT _onutNamedRenderbufferStorageMultisampleEXT
#define glNamedStringARB _onutNamedStringARB
#define glNewBufferRegion _onutNewBufferRegion
#define glNewObjectBufferATI _onutNewObjectBufferATI
#define glNormal3fVertex3fSUN _onutNormal3fVertex3fSUN
#define glNormal3fVertex3fvSUN _onutNormal3fVertex3fvSUN
#define glNormal3hNV _onutNormal3hNV
#define glNormal3hvNV _onutNormal3hvNV
#define glNormal3xOES _onutNormal3xOES
#define glNormal3xvOES _onutNormal3xvOES
#define glNormalFormatNV _onutNormalFormatNV
#define glNormalP3ui _onutNormalP3ui
#define glNormalP3uiv _onutNormalP3uiv
#define glNormalPointerEXT _onutNormalPointerEXT
#define glNormalPointerListIBM _onutNormalPointerListIBM
#define glNormalPointervINTEL _onutNormalPointervINTEL
#define glNormalStream3bATI _onutNormalStream3bATI
#define glNormalStream3bvATI _onutNormalStream3bvATI
#define glNormalStream3dATI _onutNormalStream3dATI
#define glNormalStream3dvATI _onutNormalStream3dvATI
#define glNormalStream3fATI _onutNormalStream3fATI
#define glNormalStream3fvATI _onutNormalStream3fvATI
#define glNormalStream3iATI _onutNormalStream3iATI
#define glNormalStream3ivATI _onutNormalStream3ivATI
#define glNormalStream3sATI _onutNormalStream3sATI
#define glNormalStream3svATI _onutNormalStream3svATI
#define glObjectLabel _onutObjectLabel
#define glObjectLabelKHR _onutObjectLabelKHR
#define glObjectPtrLabel _onutObjectPtrLabel
#define glObjectPtrLabelKHR _onutObjectPtrLabelKHR
#define glObjectPurgeableAPPLE _onutObjectPurgeableAPPLE
#define glObjectUnpurgeableAPPLE _onutObjectUnpurgeableAPPLE
#define glOrthofOES _onutOrthofOES
#define glOrthoxOES _onutOrthoxOES
#define glPNTrianglesfATI _onutPNTrianglesfATI
#define glPNTrianglesiATI _onutPNTrianglesiATI
#define glPassTexCoordATI _onutPassTexCoordATI
#define glPassThroughxOES _onutPassThroughxOES
#define glPatchParameterfv _onutPatchParameterfv
#define glPatchParameteri _onutPatchParameteri
#define glPatchParameteriEXT _onutPatchParameteriEXT
#define glPatchParameteriOES _onutPatchParameteriOES
#define glPathColorGenNV _onutPathColorGenNV
#define glPathCommandsNV _onutPathCommandsNV
#define glPathCoordsNV _onutPathCoordsNV
#define glPathCoverDepthFuncNV _onutPathCoverDepthFuncNV
#define glPathDashArrayNV _onutPathDashArrayNV
#define glPathFogGenNV _onutPathFogGenNV
#define glPathGlyphIndexArrayNV _onutPathGlyphIndexArrayNV
#define glPathGlyphIndexRangeNV _onutPathGlyphIndexRangeNV
#define glPathGlyphRangeNV _onutPathGlyphRangeNV
#define glPathGlyphsNV _onutPathGlyphsNV
#define glPathMemoryGlyphIndexArrayNV _onutPathMemoryGlyphIndexArrayNV
#define glPathParameterfNV _onutPathParameterfNV
#define glPathParameterfvNV _onutPathParameterfvNV
#define glPathParameteriNV _onutPathParameteriNV
#define glPathParameterivNV _onutPathParameterivNV
#define glPathStencilDepthOffsetNV _onutPathStencilDepthOffsetNV
#define glPathStencilFuncNV _onutPathStencilFuncNV
#define glPathStringNV _onutPathStringNV
#define glPathSubCommandsNV _onutPathSubCommandsNV
#define glPathSubCoordsNV _onutPathSubCoordsNV
#define glPathTexGenNV _onutPathTexGenNV
#define glPauseTransformFeedback _onutPauseTransformFeedback
#define glPauseTransformFeedbackNV _onutPauseTransformFeedbackNV
#define glPixelDataRangeNV _onutPixelDataRangeNV
#define glPixelMapx _onutPixelMapx
#define glPixelStoref _onutPixelStoref
#define glPixelStorei _onutPixelStorei
#define glPixelStorex _onutPixelStorex
#define glPixelTexGenParameterfSGIS _onutPixelTexGenParameterfSGIS
#define glPixelTexGenParameterfvSGIS _onutPixelTexGenParameterfvSGIS
#define glPixelTexGenParameteriSGIS _onutPixelTexGenParameteriSGIS
#define glPixelTexGenParameterivSGIS _onutPixelTexGenParameterivSGIS
#define glPixelTexGenSGIX _onutPixelTexGenSGIX
#define glPixelTransferxOES _onutPixelTransferxOES
#define glPixelTransformParameterfEXT _onutPixelTransformParameterfEXT
#define glPixelTransformParameterfvEXT _onutPixelTransformParameterfvEXT
#define glPixelTransformParameteriEXT _onutPixelTransformParameteriEXT
#define glPixelTransformParameterivEXT _onutPixelTransformParameterivEXT
#define glPixelZoomxOES _onutPixelZoomxOES
#define glPointAlongPathNV _onutPointAlongPathNV
#define glPointParameterf _onutPointParameterf
#define glPointParameterfARB _onutPointParameterfARB
#define glPointParameterfEXT _onutPointParameterfEXT
#define glPointParameterfSGIS _onutPointParameterfSGIS
#define glPointParameterfv _onutPointParameterfv
#define glPointParameterfvARB _onutPointParameterfvARB
#define glPointParameterfvEXT _onutPointParameterfvEXT
#define glPointParameterfvSGIS _onutPointParameterfvSGIS
#define glPointParameteri _onutPointParameteri
#define glPointParameteriNV _onutPointParameteriNV
#define glPointParameteriv _onutPointParameteriv
#define glPointParameterivNV _onutPointParameterivNV
#define glPointParameterxvOES _onutPointParameterxvOES
#define glPointSize _onutPointSize
#define glPointSizexOES _onutPointSizexOES
#define glPollAsyncSGIX _onutPollAsyncSGIX
#define glPollInstrumentsSGIX _onutPollInstrumentsSGIX
#define glPolygonMode _onutPolygonMode
#define glPolygonModeNV _onutPolygonModeNV
#define glPolygonOffset _onutPolygonOffset
#define glPolygonOffsetClampEXT _onutPolygonOffsetClampEXT
#define glPolygonOffsetEXT _onutPolygonOffsetEXT
#define glPolygonOffsetxOES _onutPolygonOffsetxOES
#define glPopDebugGroup _onutPopDebugGroup
#define glPopDebugGroupKHR _onutPopDebugGroupKHR
#define glPopGroupMarkerEXT _onutPopGroupMarkerEXT
#define glPresentFrameDualFillNV _onutPresentFrameDualFillNV
#define glPresentFrameKeyedNV _onutPresentFrameKeyedNV
#define glPrimitiveBoundingBox _onutPrimitiveBoundingBox
#define glPrimitiveBoundingBoxARB _onutPrimitiveBoundingBoxARB
#define glPrimitiveBoundingBoxEXT _onutPrimitiveBoundingBoxEXT
#define glPrimitiveBoundingBoxOES _onutPrimitiveBoundingBoxOES
#define glPrimitiveRestartIndex _onutPrimitiveRestartIndex
#define glPrimitiveRestartIndexNV _onutPrimitiveRestartIndexNV
#define glPrimitiveRestartNV _onutPrimitiveRestartNV
#define glPrioritizeTexturesEXT _onutPrioritizeTexturesEXT
#define glPrioritizeTexturesxOES _onutPrioritizeTexturesxOES
#define glProgramBinary _onutProgramBinary
#define glProgramBinaryOES _onutProgramBinaryOES
#define glProgramBufferParametersIivNV _onutProgramBufferParametersIivNV
#define glProgramBufferParametersIuivNV _onutProgramBufferParametersIuivNV
#define glProgramBufferParametersfvNV _onutProgramBufferParametersfvNV
#define glProgramEnvParameter4dARB _onutProgramEnvParameter4dARB
#define glProgramEnvParameter4dvARB _onutProgramEnvParameter4dvARB
#define glProgramEnvParameter4fARB _onutProgramEnvParameter4fARB
#define glProgramEnvParameter4fvARB _onutProgramEnvParameter4fvARB
#define glProgramEnvParameterI4iNV _onutProgramEnvParameterI4iNV
#define glProgramEnvParameterI4ivNV _onutProgramEnvParameterI4ivNV
#define glProgramEnvParameterI4uiNV _onutProgramEnvParameterI4uiNV
#define glProgramEnvParameterI4uivNV _onutProgramEnvParameterI4uivNV
#define glProgramEnvParameters4fvEXT _onutProgramEnvParameters4fvEXT
#define glProgramEnvParametersI4ivNV _onutProgramEnvParametersI4ivNV
#define glProgramEnvParametersI4uivNV _onutProgramEnvParametersI4uivNV
#define glProgramLocalParameter4dARB _onutProgramLocalParameter4dARB
#define glProgramLocalParameter4dvARB _onutProgramLocalParameter4dvARB
#define glProgramLocalParameter4fARB _onutProgramLocalParameter4fARB
#define glProgramLocalParameter4fvARB _onutProgramLocalParameter4fvARB
#define glProgramLocalParameterI4iNV _onutProgramLocalParameterI4iNV
#define glProgramLocalParameterI4ivNV _onutProgramLocalParameterI4ivNV
#define glProgramLocalParameterI4uiNV _onutProgramLocalParameterI4uiNV
#define glProgramLocalParameterI4uivNV _onutProgramLocalParameterI4uivNV
#define glProgramLocalParameters4fvEXT _onutProgramLocalParameters4fvEXT
#define glProgramLocalParametersI4ivNV _onutProgramLocalParametersI4ivNV
#define glProgramLocalParametersI4uivNV _onutProgramLocalParametersI4uivNV
#define glProgramNamedParameter4dNV _onutProgramNamedParameter4dNV
#define glProgramNamedParameter4dvNV _onutProgramNamedParameter4dvNV
#define glProgramNamedParameter4fNV _onutProgramNamedParameter4fNV
#define glProgramNamedParameter4fvNV _onutProgramNamedParameter4fvNV
#define glProgramParameter4dNV _onutProgramParameter4dNV
#define glProgramParameter4dvNV _onutProgramParameter4dvNV
#define glProgramParameter4fNV _onutProgramParameter4fNV
#define glProgramParameter4fvNV _onutProgramParameter4fvNV
#define glProgramParameteri _onutProgramParameteri
#define glProgramParameteriARB _onutProgramParameteriARB
#define glProgramParameteriEXT _onutProgramParameteriEXT
#define glProgramParameters4dvNV _onutProgramParameters4dvNV
#define glProgramParameters4fvNV _onutProgramParameters4fvNV
#define glProgramPathFragmentInputGenNV _onutProgramPathFragmentInputGenNV
#define glProgramStringARB _onutProgramStringARB
#define glProgramSubroutineParametersuivNV _onutProgramSubroutineParametersuivNV
#define glProgramUniform1d _onutProgramUniform1d
#define glProgramUniform1dEXT _onutProgramUniform1dEXT
#define glProgramUniform1dv _onutProgramUniform1dv
#define glProgramUniform1dvEXT _onutProgramUniform1dvEXT
#define glProgramUniform1f _onutProgramUniform1f
#define glProgramUniform1fEXT _onutProgramUniform1fEXT
#define glProgramUniform1fv _onutProgramUniform1fv
#define glProgramUniform1fvEXT _onutProgramUniform1fvEXT
#define glProgramUniform1i _onutProgramUniform1i
#define glProgramUniform1i64ARB _onutProgramUniform1i64ARB
#define glProgramUniform1i64NV _onutProgramUniform1i64NV
#define glProgramUniform1i64vARB _onutProgramUniform1i64vARB
#define glProgramUniform1i64vNV _onutProgramUniform1i64vNV
#define glProgramUniform1iEXT _onutProgramUniform1iEXT
#define glProgramUniform1iv _onutProgramUniform1iv
#define glProgramUniform1ivEXT _onutProgramUniform1ivEXT
#define glProgramUniform1ui _onutProgramUniform1ui
#define glProgramUniform1ui64ARB _onutProgramUniform1ui64ARB
#define glProgramUniform1ui64NV _onutProgramUniform1ui64NV
#define glProgramUniform1ui64vARB _onutProgramUniform1ui64vARB
#define glProgramUniform1ui64vNV _onutProgramUniform1ui64vNV
#define glProgramUniform1uiEXT _onutProgramUniform1uiEXT
#define glProgramUniform1uiv _onutProgramUniform1uiv
#define glProgramUniform1uivEXT _onutProgramUniform1uivEXT
#define glProgramUniform2d _onutProgramUniform2d
#define glProgramUniform2dEXT _onutProgramUniform2dEXT
#define glProgramUniform2dv _onutProgramUniform2dv
#define glProgramUniform2dvEXT _onutProgramUniform2dvEXT
#define glProgramUniform2f _onutProgramUniform2f
#define glProgramUniform2fEXT _onutProgramUniform2fEXT
#define glProgramUniform2fv _onutProgramUniform2fv
#define glProgramUniform2fvEXT _onutProgramUniform2fvEXT
#define glProgramUniform2i _onutProgramUniform2i
#define glProgramUniform2i64ARB _onutProgramUniform2i64ARB
#define glProgramUniform2i64NV _onutProgramUniform2i64NV
#define glProgramUniform2i64vARB _onutProgramUniform2i64vARB
#define glProgramUniform2i64vNV _onutProgramUniform2i64vNV
#define glProgramUniform2iEXT _onutProgramUniform2iEXT
#define glProgramUniform2iv _onutProgramUniform2iv
#define glProgramUniform2ivEXT _onutProgramUniform2ivEXT
#define glProgramUniform2ui _onutProgramUniform2ui
#define glProgramUniform2ui64ARB _onutProgramUniform2ui64ARB
#define glProgramUniform2ui64NV _onutProgramUniform2ui64NV
#define glProgramUniform2ui64vARB _onutProgramUniform2ui64vARB
#define glProgramUniform2ui64vNV _onutProgramUniform2ui64vNV
#define glProgramUniform2uiEXT _onutProgramUniform2uiEXT
#define glProgramUniform2uiv _onutProgramUniform2uiv
#define glProgramUniform2uivEXT _onutProgramUniform2uivEXT
#define glProgramUniform3d _onutProgramUniform3d
#define glProgramUniform3dEXT _onutProgramUniform3dEXT
#define glProgramUniform3dv _onutProgramUniform3dv
#define glProgramUniform3dvEXT _onutProgramUniform3dvEXT
#define glProgramUniform3f _onutProgramUniform3f
#define glProgramUniform3fEXT _onutProgramUniform3fEXT
#define glProgramUniform3fv _onutProgramUniform3fv
#define glProgramUniform3fvEXT _onutProgramUniform3fvEXT
#define glProgramUniform3i _onutProgramUniform3i
#define glProgramUniform3i64ARB _onutProgramUniform3i64ARB
#define glProgramUniform3i64NV _onutProgramUniform3i64NV
#define glProgramUniform3i64vARB _onutProgramUniform3i64vARB
#define glProgramUniform3i64vNV _onutProgramUniform3i64vNV
#define glProgramUniform3iEXT _onutProgramUniform3iEXT
#define glProgramUniform3iv _onutProgramUniform3iv
#define glProgramUniform3ivEXT _onutProgramUniform3ivEXT
#define glProgramUniform3ui _onutProgramUniform3ui
#define glProgramUniform3ui64ARB _onutProgramUniform3ui64ARB
#define glProgramUniform3ui64NV _onutProgramUniform3ui64NV
#define glProgramUniform3ui64vARB _onutProgramUniform3ui64vARB
#define glProgramUniform3ui64vNV _onutProgramUniform3ui64vNV
#define glProgramUniform3uiEXT _onutProgramUniform3uiEXT
#define glProgramUniform3uiv _onutProgramUniform3uiv
#define glProgramUniform3uivEXT _onutProgramUniform3uivEXT
#define glProgramUniform4d _onutProgramUniform4d
#define glProgramUniform4dEXT _onutProgramUniform4dEXT
#define glProgramUniform4dv _onutProgramUniform4dv
#define glProgramUniform4dvEXT _onutProgramUniform4dvEXT
#define glProgramUniform4f _onutProgramUniform4f
#define glProgramUniform4fEXT _onutProgramUniform4fEXT
#define glProgramUniform4fv _onutProgramUniform4fv
#define glProgramUniform4fvEXT _onutProgramUniform4fvEXT
#define glProgramUniform4i _onutProgramUniform4i
#define glProgramUniform4i64ARB _onutProgramUniform4i64ARB
#define glProgramUniform4i64NV _onutProgramUniform4i64NV
#define glProgramUniform4i64vARB _onutProgramUniform4i64vARB
#define glProgramUniform4i64vNV _onutProgramUniform4i64vNV
#define glProgramUniform4iEXT _onutProgramUniform4iEXT
#define glProgramUniform4iv _onutProgramUniform4iv
#define glProgramUniform4ivEXT _onutProgramUniform4ivEXT
#define glProgramUniform4ui _onutProgramUniform4ui
#define glProgramUniform4ui64ARB _onutProgramUniform4ui64ARB
#define glProgramUniform4ui64NV _onutProgramUniform4ui64NV
#define glProgramUniform4ui64vARB _onutProgramUniform4ui64vARB
#define glProgramUniform4ui64vNV _onutProgramUniform4ui64vNV
#define glProgramUniform4uiEXT _onutProgramUniform4uiEXT
#define glProgramUniform4uiv _onutProgramUniform4uiv
#define glProgramUniform4uivEXT _onutProgramUniform4uivEXT
#define glProgramUniformHandleui64ARB _onutProgramUniformHandleui64ARB
#define glProgramUniformHandleui64IMG _onutProgramUniformHandleui64IMG
#define glProgramUniformHandleui64NV _onutProgramUniformHandleui64NV
#define glProgramUniformHandleui64vARB _onutProgramUniformHandleui64vARB
#define glProgramUniformHandleui64vIMG _onutProgramUniformHandleui64vIMG
#define glProgramUniformHandleui64vNV _onutProgramUniformHandleui64vNV
#define glProgramUniformMatrix2dv _onutProgramUniformMatrix2dv
#define glProgramUniformMatrix2dvEXT _onutProgramUniformMatrix2dvEXT
#define glProgramUniformMatrix2fv _onutProgramUniformMatrix2fv
#define glProgramUniformMatrix2fvEXT _onutProgramUniformMatrix2fvEXT
#define glProgramUniformMatrix2x3dv _onutProgramUniformMatrix2x3dv
#define glProgramUniformMatrix2x3dvEXT _onutProgramUniformMatrix2x3dvEXT
#define glProgramUniformMatrix2x3fv _onutProgramUniformMatrix2x3fv
#define glProgramUniformMatrix2x3fvEXT _onutProgramUniformMatrix2x3fvEXT
#define glProgramUniformMatrix2x4dv _onutProgramUniformMatrix2x4dv
#define glProgramUniformMatrix2x4dvEXT _onutProgramUniformMatrix2x4dvEXT
#define glProgramUniformMatrix2x4fv _onutProgramUniformMatrix2x4fv
#define glProgramUniformMatrix2x4fvEXT _onutProgramUniformMatrix2x4fvEXT
#define glProgramUniformMatrix3dv _onutProgramUniformMatrix3dv
#define glProgramUniformMatrix3dvEXT _onutProgramUniformMatrix3dvEXT
#define glProgramUniformMatrix3fv _onutProgramUniformMatrix3fv
#define glProgramUniformMatrix3fvEXT _onutProgramUniformMatrix3fvEXT
#define glProgramUniformMatrix3x2dv _onutProgramUniformMatrix3x2dv
#define glProgramUniformMatrix3x2dvEXT _onutProgramUniformMatrix3x2dvEXT
#define glProgramUniformMatrix3x2fv _onutProgramUniformMatrix3x2fv
#define glProgramUniformMatrix3x2fvEXT _onutProgramUniformMatrix3x2fvEXT
#define glProgramUniformMatrix3x4dv _onutProgramUniformMatrix3x4dv
#define glProgramUniformMatrix3x4dvEXT _onutProgramUniformMatrix3x4dvEXT
#define glProgramUniformMatrix3x4fv _onutProgramUniformMatrix3x4fv
#define glProgramUniformMatrix3x4fvEXT _onutProgramUniformMatrix3x4fvEXT
#define glProgramUniformMatrix4dv _onutProgramUniformMatrix4dv
#define glProgramUniformMatrix4dvEXT _onutProgramUniformMatrix4dvEXT
#define glProgramUniformMatrix4fv _onutProgramUniformMatrix4fv
#define glProgramUniformMatrix4fvEXT _onutProgramUniformMatrix4fvEXT
#define glProgramUniformMatrix4x2dv _onutProgramUniformMatrix4x2dv
#define glProgramUniformMatrix4x2dvEXT _onutProgramUniformMatrix4x2dvEXT
#define glProgramUniformMatrix4x2fv _onutProgramUniformMatrix4x2fv
#define glProgramUniformMatrix4x2fvEXT _onutProgramUniformMatrix4x2fvEXT
#define glProgramUniformMatrix4x3dv _onutProgramUniformMatrix4x3dv
#define glProgramUniformMatrix4x3dvEXT _onutProgramUniformMatrix4x3dvEXT
#define glProgramUniformMatrix4x3fv _onutProgramUniformMatrix4x3fv
#define glProgramUniformMatrix4x3fvEXT _onutProgramUniformMatrix4x3fvEXT
#define glProgramUniformui64NV _onutProgramUniformui64NV
#define glProgramUniformui64vNV _onutProgramUniformui64vNV
#define glProgramVertexLimitNV _onutProgramVertexLimitNV
#define glProvokingVertex _onutProvokingVertex
#define glProvokingVertexEXT _onutProvokingVertexEXT
#define glPushClientAttribDefaultEXT _onutPushClientAttribDefaultEXT
#define glPushDebugGroup _onutPushDebugGroup
#define glPushDebugGroupKHR _onutPushDebugGroupKHR
#define glPushGroupMarkerEXT _onutPushGroupMarkerEXT
#define glQueryCounter _onutQueryCounter
#define glQueryCounterEXT _onutQueryCounterEXT
#define glQueryMatrixxOES _onutQueryMatrixxOES
#define glQueryObjectParameteruiAMD _onutQueryObjectParameteruiAMD
#define glRasterPos2xOES _onutRasterPos2xOES
#define glRasterPos2xvOES _onutRasterPos2xvOES
#define glRasterPos3xOES _onutRasterPos3xOES
#define glRasterPos3xvOES _onutRasterPos3xvOES
#define glRasterPos4xOES _onutRasterPos4xOES
#define glRasterPos4xvOES _onutRasterPos4xvOES
#define glRasterSamplesEXT _onutRasterSamplesEXT
#define glReadBuffer _onutReadBuffer
#define glReadBufferIndexedEXT _onutReadBufferIndexedEXT
#define glReadBufferNV _onutReadBufferNV
#define glReadBufferRegion _onutReadBufferRegion
#define glReadInstrumentsSGIX _onutReadInstrumentsSGIX
#define glReadPixels _onutReadPixels
#define glReadnPixels _onutReadnPixels
#define glReadnPixelsARB _onutReadnPixelsARB
#define glReadnPixelsEXT _onutReadnPixelsEXT
#define glReadnPixelsKHR _onutReadnPixelsKHR
#define glRectxOES _onutRectxOES
#define glRectxvOES _onutRectxvOES
#define glReferencePlaneSGIX _onutReferencePlaneSGIX
#define glReleaseKeyedMutexWin32EXT _onutReleaseKeyedMutexWin32EXT
#define glReleaseShaderCompiler _onutReleaseShaderCompiler
#define glRenderGpuMaskNV _onutRenderGpuMaskNV
#define glRenderbufferStorage _onutRenderbufferStorage
#define glRenderbufferStorageEXT _onutRenderbufferStorageEXT
#define glRenderbufferStorageMultisample _onutRenderbufferStorageMultisample
#define glRenderbufferStorageMultisampleANGLE _onutRenderbufferStorageMultisampleANGLE
#define glRenderbufferStorageMultisampleAPPLE _onutRenderbufferStorageMultisampleAPPLE
#define glRenderbufferStorageMultisampleCoverageNV _onutRenderbufferStorageMultisampleCoverageNV
#define glRenderbufferStorageMultisampleEXT _onutRenderbufferStorageMultisampleEXT
#define glRenderbufferStorageMultisampleIMG _onutRenderbufferStorageMultisampleIMG
#define glRenderbufferStorageMultisampleNV _onutRenderbufferStorageMultisampleNV
#define glReplacementCodePointerSUN _onutReplacementCodePointerSUN
#define glReplacementCodeubSUN _onutReplacementCodeubSUN
#define glReplacementCodeubvSUN _onutReplacementCodeubvSUN
#define glReplacementCodeuiColor3fVertex3fSUN _onutReplacementCodeuiColor3fVertex3fSUN
#define glReplacementCodeuiColor3fVertex3fvSUN _onutReplacementCodeuiColor3fVertex3fvSUN
#define glReplacementCodeuiColor4fNormal3fVertex3fSUN _onutReplacementCodeuiColor4fNormal3fVertex3fSUN
#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN _onutReplacementCodeuiColor4fNormal3fVertex3fvSUN
#define glReplacementCodeuiColor4ubVertex3fSUN _onutReplacementCodeuiColor4ubVertex3fSUN
#define glReplacementCodeuiColor4ubVertex3fvSUN _onutReplacementCodeuiColor4ubVertex3fvSUN
#define glReplacementCodeuiNormal3fVertex3fSUN _onutReplacementCodeuiNormal3fVertex3fSUN
#define glReplacementCodeuiNormal3fVertex3fvSUN _onutReplacementCodeuiNormal3fVertex3fvSUN
#define glReplacementCodeuiSUN _onutReplacementCodeuiSUN
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN _onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN _onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN _onutReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN _onutReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
#define glReplacementCodeuiTexCoord2fVertex3fSUN _onutReplacementCodeuiTexCoord2fVertex3fSUN
#define glReplacementCodeuiTexCoord2fVertex3fvSUN _onutReplacementCodeuiTexCoord2fVertex3fvSUN
#define glReplacementCodeuiVertex3fSUN _onutReplacementCodeuiVertex3fSUN
#define glReplacementCodeuiVertex3fvSUN _onutReplacementCodeuiVertex3fvSUN
#define glReplacementCodeuivSUN _onutReplacementCodeuivSUN
#define glReplacementCodeusSUN _onutReplacementCodeusSUN
#define glReplacementCodeusvSUN _onutReplacementCodeusvSUN
#define glRequestResidentProgramsNV _onutRequestResidentProgramsNV
#define glResetHistogram _onutResetHistogram
#define glResetHistogramEXT _onutResetHistogramEXT
#define glResetMinmax _onutResetMinmax
#define glResetMinmaxEXT _onutResetMinmaxEXT
#define glResizeBuffersMESA _onutResizeBuffersMESA
#define glResolveDepthValuesNV _onutResolveDepthValuesNV
#define glResolveMultisampleFramebufferAPPLE _onutResolveMultisampleFramebufferAPPLE
#define glResumeTransformFeedback _onutResumeTransformFeedback
#define glResumeTransformFeedbackNV _onutResumeTransformFeedbackNV
#define glRotatexOES _onutRotatexOES
#define glSampleCoverage _onutSampleCoverage
#define glSampleCoverageARB _onutSampleCoverageARB
#define glSampleMapATI _onutSampleMapATI
#define glSampleMaskEXT _onutSampleMaskEXT
#define glSampleMaskIndexedNV _onutSampleMaskIndexedNV
#define glSampleMaskSGIS _onutSampleMaskSGIS
#define glSampleMaski _onutSampleMaski
#define glSamplePatternEXT _onutSamplePatternEXT
#define glSamplePatternSGIS _onutSamplePatternSGIS
#define glSamplerParameterIiv _onutSamplerParameterIiv
#define glSamplerParameterIivEXT _onutSamplerParameterIivEXT
#define glSamplerParameterIivOES _onutSamplerParameterIivOES
#define glSamplerParameterIuiv _onutSamplerParameterIuiv
#define glSamplerParameterIuivEXT _onutSamplerParameterIuivEXT
#define glSamplerParameterIuivOES _onutSamplerParameterIuivOES
#define glSamplerParameterf _onutSamplerParameterf
#define glSamplerParameterfv _onutSamplerParameterfv
#define glSamplerParameteri _onutSamplerParameteri
#define glSamplerParameteriv _onutSamplerParameteriv
#define glScalexOES _onutScalexOES
#define glScissor _onutScissor
#define glScissorArrayv _onutScissorArrayv
#define glScissorArrayvNV _onutScissorArrayvNV
#define glScissorArrayvOES _onutScissorArrayvOES
#define glScissorIndexed _onutScissorIndexed
#define glScissorIndexedNV _onutScissorIndexedNV
#define glScissorIndexedOES _onutScissorIndexedOES
#define glScissorIndexedv _onutScissorIndexedv
#define glScissorIndexedvNV _onutScissorIndexedvNV
#define glScissorIndexedvOES _onutScissorIndexedvOES
#define glSecondaryColor3b _onutSecondaryColor3b
#define glSecondaryColor3bEXT _onutSecondaryColor3bEXT
#define glSecondaryColor3bv _onutSecondaryColor3bv
#define glSecondaryColor3bvEXT _onutSecondaryColor3bvEXT
#define glSecondaryColor3d _onutSecondaryColor3d
#define glSecondaryColor3dEXT _onutSecondaryColor3dEXT
#define glSecondaryColor3dv _onutSecondaryColor3dv
#define glSecondaryColor3dvEXT _onutSecondaryColor3dvEXT
#define glSecondaryColor3f _onutSecondaryColor3f
#define glSecondaryColor3fEXT _onutSecondaryColor3fEXT
#define glSecondaryColor3fv _onutSecondaryColor3fv
#define glSecondaryColor3fvEXT _onutSecondaryColor3fvEXT
#define glSecondaryColor3hNV _onutSecondaryColor3hNV
#define glSecondaryColor3hvNV _onutSecondaryColor3hvNV
#define glSecondaryColor3i _onutSecondaryColor3i
#define glSecondaryColor3iEXT _onutSecondaryColor3iEXT
#define glSecondaryColor3iv _onutSecondaryColor3iv
#define glSecondaryColor3ivEXT _onutSecondaryColor3ivEXT
#define glSecondaryColor3s _onutSecondaryColor3s
#define glSecondaryColor3sEXT _onutSecondaryColor3sEXT
#define glSecondaryColor3sv _onutSecondaryColor3sv
#define glSecondaryColor3svEXT _onutSecondaryColor3svEXT
#define glSecondaryColor3ub _onutSecondaryColor3ub
#define glSecondaryColor3ubEXT _onutSecondaryColor3ubEXT
#define glSecondaryColor3ubv _onutSecondaryColor3ubv
#define glSecondaryColor3ubvEXT _onutSecondaryColor3ubvEXT
#define glSecondaryColor3ui _onutSecondaryColor3ui
#define glSecondaryColor3uiEXT _onutSecondaryColor3uiEXT
#define glSecondaryColor3uiv _onutSecondaryColor3uiv
#define glSecondaryColor3uivEXT _onutSecondaryColor3uivEXT
#define glSecondaryColor3us _onutSecondaryColor3us
#define glSecondaryColor3usEXT _onutSecondaryColor3usEXT
#define glSecondaryColor3usv _onutSecondaryColor3usv
#define glSecondaryColor3usvEXT _onutSecondaryColor3usvEXT
#define glSecondaryColorFormatNV _onutSecondaryColorFormatNV
#define glSecondaryColorP3ui _onutSecondaryColorP3ui
#define glSecondaryColorP3uiv _onutSecondaryColorP3uiv
#define glSecondaryColorPointer _onutSecondaryColorPointer
#define glSecondaryColorPointerEXT _onutSecondaryColorPointerEXT
#define glSecondaryColorPointerListIBM _onutSecondaryColorPointerListIBM
#define glSelectPerfMonitorCountersAMD _onutSelectPerfMonitorCountersAMD
#define glSemaphoreParameterui64vEXT _onutSemaphoreParameterui64vEXT
#define glSeparableFilter2D _onutSeparableFilter2D
#define glSeparableFilter2DEXT _onutSeparableFilter2DEXT
#define glSetFenceAPPLE _onutSetFenceAPPLE
#define glSetFenceNV _onutSetFenceNV
#define glSetFragmentShaderConstantATI _onutSetFragmentShaderConstantATI
#define glSetInvariantEXT _onutSetInvariantEXT
#define glSetLocalConstantEXT _onutSetLocalConstantEXT
#define glSetMultisamplefvAMD _onutSetMultisamplefvAMD
#define glShaderBinary _onutShaderBinary
#define glShaderOp1EXT _onutShaderOp1EXT
#define glShaderOp2EXT _onutShaderOp2EXT
#define glShaderOp3EXT _onutShaderOp3EXT
#define glShaderSource _onutShaderSource
#define glShaderSourceARB _onutShaderSourceARB
#define glShaderStorageBlockBinding _onutShaderStorageBlockBinding
#define glSharpenTexFuncSGIS _onutSharpenTexFuncSGIS
#define glSignalSemaphoreEXT _onutSignalSemaphoreEXT
#define glSignalVkFenceNV _onutSignalVkFenceNV
#define glSignalVkSemaphoreNV _onutSignalVkSemaphoreNV
#define glSpecializeShaderARB _onutSpecializeShaderARB
#define glSpriteParameterfSGIX _onutSpriteParameterfSGIX
#define glSpriteParameterfvSGIX _onutSpriteParameterfvSGIX
#define glSpriteParameteriSGIX _onutSpriteParameteriSGIX
#define glSpriteParameterivSGIX _onutSpriteParameterivSGIX
#define glStartInstrumentsSGIX _onutStartInstrumentsSGIX
#define glStartTilingQCOM _onutStartTilingQCOM
#define glStateCaptureNV _onutStateCaptureNV
#define glStencilClearTagEXT _onutStencilClearTagEXT
#define glStencilFillPathInstancedNV _onutStencilFillPathInstancedNV
#define glStencilFillPathNV _onutStencilFillPathNV
#define glStencilFunc _onutStencilFunc
#define glStencilFuncSeparate _onutStencilFuncSeparate
#define glStencilFuncSeparateATI _onutStencilFuncSeparateATI
#define glStencilMask _onutStencilMask
#define glStencilMaskSeparate _onutStencilMaskSeparate
#define glStencilOp _onutStencilOp
#define glStencilOpSeparate _onutStencilOpSeparate
#define glStencilOpSeparateATI _onutStencilOpSeparateATI
#define glStencilOpValueAMD _onutStencilOpValueAMD
#define glStencilStrokePathInstancedNV _onutStencilStrokePathInstancedNV
#define glStencilStrokePathNV _onutStencilStrokePathNV
#define glStencilThenCoverFillPathInstancedNV _onutStencilThenCoverFillPathInstancedNV
#define glStencilThenCoverFillPathNV _onutStencilThenCoverFillPathNV
#define glStencilThenCoverStrokePathInstancedNV _onutStencilThenCoverStrokePathInstancedNV
#define glStencilThenCoverStrokePathNV _onutStencilThenCoverStrokePathNV
#define glStopInstrumentsSGIX _onutStopInstrumentsSGIX
#define glStringMarkerGREMEDY _onutStringMarkerGREMEDY
#define glSubpixelPrecisionBiasNV _onutSubpixelPrecisionBiasNV
#define glSwizzleEXT _onutSwizzleEXT
#define glSyncTextureINTEL _onutSyncTextureINTEL
#define glTagSampleBufferSGIX _onutTagSampleBufferSGIX
#define glTangent3bEXT _onutTangent3bEXT
#define glTangent3bvEXT _onutTangent3bvEXT
#define glTangent3dEXT _onutTangent3dEXT
#define glTangent3dvEXT _onutTangent3dvEXT
#define glTangent3fEXT _onutTangent3fEXT
#define glTangent3fvEXT _onutTangent3fvEXT
#define glTangent3iEXT _onutTangent3iEXT
#define glTangent3ivEXT _onutTangent3ivEXT
#define glTangent3sEXT _onutTangent3sEXT
#define glTangent3svEXT _onutTangent3svEXT
#define glTangentPointerEXT _onutTangentPointerEXT
#define glTbufferMask3DFX _onutTbufferMask3DFX
#define glTessellationFactorAMD _onutTessellationFactorAMD
#define glTessellationModeAMD _onutTessellationModeAMD
#define glTestFenceAPPLE _onutTestFenceAPPLE
#define glTestFenceNV _onutTestFenceNV
#define glTestObjectAPPLE _onutTestObjectAPPLE
#define glTexBuffer _onutTexBuffer
#define glTexBufferARB _onutTexBufferARB
#define glTexBufferEXT _onutTexBufferEXT
#define glTexBufferOES _onutTexBufferOES
#define glTexBufferRange _onutTexBufferRange
#define glTexBufferRangeEXT _onutTexBufferRangeEXT
#define glTexBufferRangeOES _onutTexBufferRangeOES
#define glTexBumpParameterfvATI _onutTexBumpParameterfvATI
#define glTexBumpParameterivATI _onutTexBumpParameterivATI
#define glTexCoord1bOES _onutTexCoord1bOES
#define glTexCoord1bvOES _onutTexCoord1bvOES
#define glTexCoord1hNV _onutTexCoord1hNV
#define glTexCoord1hvNV _onutTexCoord1hvNV
#define glTexCoord1xOES _onutTexCoord1xOES
#define glTexCoord1xvOES _onutTexCoord1xvOES
#define glTexCoord2bOES _onutTexCoord2bOES
#define glTexCoord2bvOES _onutTexCoord2bvOES
#define glTexCoord2fColor3fVertex3fSUN _onutTexCoord2fColor3fVertex3fSUN
#define glTexCoord2fColor3fVertex3fvSUN _onutTexCoord2fColor3fVertex3fvSUN
#define glTexCoord2fColor4fNormal3fVertex3fSUN _onutTexCoord2fColor4fNormal3fVertex3fSUN
#define glTexCoord2fColor4fNormal3fVertex3fvSUN _onutTexCoord2fColor4fNormal3fVertex3fvSUN
#define glTexCoord2fColor4ubVertex3fSUN _onutTexCoord2fColor4ubVertex3fSUN
#define glTexCoord2fColor4ubVertex3fvSUN _onutTexCoord2fColor4ubVertex3fvSUN
#define glTexCoord2fNormal3fVertex3fSUN _onutTexCoord2fNormal3fVertex3fSUN
#define glTexCoord2fNormal3fVertex3fvSUN _onutTexCoord2fNormal3fVertex3fvSUN
#define glTexCoord2fVertex3fSUN _onutTexCoord2fVertex3fSUN
#define glTexCoord2fVertex3fvSUN _onutTexCoord2fVertex3fvSUN
#define glTexCoord2hNV _onutTexCoord2hNV
#define glTexCoord2hvNV _onutTexCoord2hvNV
#define glTexCoord2xOES _onutTexCoord2xOES
#define glTexCoord2xvOES _onutTexCoord2xvOES
#define glTexCoord3bOES _onutTexCoord3bOES
#define glTexCoord3bvOES _onutTexCoord3bvOES
#define glTexCoord3hNV _onutTexCoord3hNV
#define glTexCoord3hvNV _onutTexCoord3hvNV
#define glTexCoord3xOES _onutTexCoord3xOES
#define glTexCoord3xvOES _onutTexCoord3xvOES
#define glTexCoord4bOES _onutTexCoord4bOES
#define glTexCoord4bvOES _onutTexCoord4bvOES
#define glTexCoord4fColor4fNormal3fVertex4fSUN _onutTexCoord4fColor4fNormal3fVertex4fSUN
#define glTexCoord4fColor4fNormal3fVertex4fvSUN _onutTexCoord4fColor4fNormal3fVertex4fvSUN
#define glTexCoord4fVertex4fSUN _onutTexCoord4fVertex4fSUN
#define glTexCoord4fVertex4fvSUN _onutTexCoord4fVertex4fvSUN
#define glTexCoord4hNV _onutTexCoord4hNV
#define glTexCoord4hvNV _onutTexCoord4hvNV
#define glTexCoord4xOES _onutTexCoord4xOES
#define glTexCoord4xvOES _onutTexCoord4xvOES
#define glTexCoordFormatNV _onutTexCoordFormatNV
#define glTexCoordP1ui _onutTexCoordP1ui
#define glTexCoordP1uiv _onutTexCoordP1uiv
#define glTexCoordP2ui _onutTexCoordP2ui
#define glTexCoordP2uiv _onutTexCoordP2uiv
#define glTexCoordP3ui _onutTexCoordP3ui
#define glTexCoordP3uiv _onutTexCoordP3uiv
#define glTexCoordP4ui _onutTexCoordP4ui
#define glTexCoordP4uiv _onutTexCoordP4uiv
#define glTexCoordPointerEXT _onutTexCoordPointerEXT
#define glTexCoordPointerListIBM _onutTexCoordPointerListIBM
#define glTexCoordPointervINTEL _onutTexCoordPointervINTEL
#define glTexEnvxOES _onutTexEnvxOES
#define glTexEnvxvOES _onutTexEnvxvOES
#define glTexFilterFuncSGIS _onutTexFilterFuncSGIS
#define glTexGenxOES _onutTexGenxOES
#define glTexGenxvOES _onutTexGenxvOES
#define glTexImage1D _onutTexImage1D
#define glTexImage2D _onutTexImage2D
#define glTexImage2DMultisample _onutTexImage2DMultisample
#define glTexImage2DMultisampleCoverageNV _onutTexImage2DMultisampleCoverageNV
#define glTexImage3D _onutTexImage3D
#define glTexImage3DEXT _onutTexImage3DEXT
#define glTexImage3DMultisample _onutTexImage3DMultisample
#define glTexImage3DMultisampleCoverageNV _onutTexImage3DMultisampleCoverageNV
#define glTexImage3DOES _onutTexImage3DOES
#define glTexImage4DSGIS _onutTexImage4DSGIS
#define glTexPageCommitmentARB _onutTexPageCommitmentARB
#define glTexPageCommitmentEXT _onutTexPageCommitmentEXT
#define glTexParameterIiv _onutTexParameterIiv
#define glTexParameterIivEXT _onutTexParameterIivEXT
#define glTexParameterIivOES _onutTexParameterIivOES
#define glTexParameterIuiv _onutTexParameterIuiv
#define glTexParameterIuivEXT _onutTexParameterIuivEXT
#define glTexParameterIuivOES _onutTexParameterIuivOES
#define glTexParameterf _onutTexParameterf
#define glTexParameterfv _onutTexParameterfv
#define glTexParameteri _onutTexParameteri
#define glTexParameteriv _onutTexParameteriv
#define glTexParameterxOES _onutTexParameterxOES
#define glTexParameterxvOES _onutTexParameterxvOES
#define glTexRenderbufferNV _onutTexRenderbufferNV
#define glTexStorage1D _onutTexStorage1D
#define glTexStorage1DEXT _onutTexStorage1DEXT
#define glTexStorage2D _onutTexStorage2D
#define glTexStorage2DEXT _onutTexStorage2DEXT
#define glTexStorage2DMultisample _onutTexStorage2DMultisample
#define glTexStorage3D _onutTexStorage3D
#define glTexStorage3DEXT _onutTexStorage3DEXT
#define glTexStorage3DMultisample _onutTexStorage3DMultisample
#define glTexStorage3DMultisampleOES _onutTexStorage3DMultisampleOES
#define glTexStorageMem1DEXT _onutTexStorageMem1DEXT
#define glTexStorageMem2DEXT _onutTexStorageMem2DEXT
#define glTexStorageMem2DMultisampleEXT _onutTexStorageMem2DMultisampleEXT
#define glTexStorageMem3DEXT _onutTexStorageMem3DEXT
#define glTexStorageMem3DMultisampleEXT _onutTexStorageMem3DMultisampleEXT
#define glTexStorageSparseAMD _onutTexStorageSparseAMD
#define glTexSubImage1D _onutTexSubImage1D
#define glTexSubImage1DEXT _onutTexSubImage1DEXT
#define glTexSubImage2D _onutTexSubImage2D
#define glTexSubImage2DEXT _onutTexSubImage2DEXT
#define glTexSubImage3D _onutTexSubImage3D
#define glTexSubImage3DEXT _onutTexSubImage3DEXT
#define glTexSubImage3DOES _onutTexSubImage3DOES
#define glTexSubImage4DSGIS _onutTexSubImage4DSGIS
#define glTextureBarrier _onutTextureBarrier
#define glTextureBarrierNV _onutTextureBarrierNV
#define glTextureBuffer _onutTextureBuffer
#define glTextureBufferEXT _onutTextureBufferEXT
#define glTextureBufferRange _onutTextureBufferRange
#define glTextureBufferRangeEXT _onutTextureBufferRangeEXT
#define glTextureColorMaskSGIS _onutTextureColorMaskSGIS
#define glTextureImage1DEXT _onutTextureImage1DEXT
#define glTextureImage2DEXT _onutTextureImage2DEXT
#define glTextureImage2DMultisampleCoverageNV _onutTextureImage2DMultisampleCoverageNV
#define glTextureImage2DMultisampleNV _onutTextureImage2DMultisampleNV
#define glTextureImage3DEXT _onutTextureImage3DEXT
#define glTextureImage3DMultisampleCoverageNV _onutTextureImage3DMultisampleCoverageNV
#define glTextureImage3DMultisampleNV _onutTextureImage3DMultisampleNV
#define glTextureLightEXT _onutTextureLightEXT
#define glTextureMaterialEXT _onutTextureMaterialEXT
#define glTextureNormalEXT _onutTextureNormalEXT
#define glTexturePageCommitmentEXT _onutTexturePageCommitmentEXT
#define glTextureParameterIiv _onutTextureParameterIiv
#define glTextureParameterIivEXT _onutTextureParameterIivEXT
#define glTextureParameterIuiv _onutTextureParameterIuiv
#define glTextureParameterIuivEXT _onutTextureParameterIuivEXT
#define glTextureParameterf _onutTextureParameterf
#define glTextureParameterfEXT _onutTextureParameterfEXT
#define glTextureParameterfv _onutTextureParameterfv
#define glTextureParameterfvEXT _onutTextureParameterfvEXT
#define glTextureParameteri _onutTextureParameteri
#define glTextureParameteriEXT _onutTextureParameteriEXT
#define glTextureParameteriv _onutTextureParameteriv
#define glTextureParameterivEXT _onutTextureParameterivEXT
#define glTextureRangeAPPLE _onutTextureRangeAPPLE
#define glTextureRenderbufferEXT _onutTextureRenderbufferEXT
#define glTextureStorage1D _onutTextureStorage1D
#define glTextureStorage1DEXT _onutTextureStorage1DEXT
#define glTextureStorage2D _onutTextureStorage2D
#define glTextureStorage2DEXT _onutTextureStorage2DEXT
#define glTextureStorage2DMultisample _onutTextureStorage2DMultisample
#define glTextureStorage2DMultisampleEXT _onutTextureStorage2DMultisampleEXT
#define glTextureStorage3D _onutTextureStorage3D
#define glTextureStorage3DEXT _onutTextureStorage3DEXT
#define glTextureStorage3DMultisample _onutTextureStorage3DMultisample
#define glTextureStorage3DMultisampleEXT _onutTextureStorage3DMultisampleEXT
#define glTextureStorageMem1DEXT _onutTextureStorageMem1DEXT
#define glTextureStorageMem2DEXT _onutTextureStorageMem2DEXT
#define glTextureStorageMem2DMultisampleEXT _onutTextureStorageMem2DMultisampleEXT
#define glTextureStorageMem3DEXT _onutTextureStorageMem3DEXT
#define glTextureStorageMem3DMultisampleEXT _onutTextureStorageMem3DMultisampleEXT
#define glTextureStorageSparseAMD _onutTextureStorageSparseAMD
#define glTextureSubImage1D _onutTextureSubImage1D
#define glTextureSubImage1DEXT _onutTextureSubImage1DEXT
#define glTextureSubImage2D _onutTextureSubImage2D
#define glTextureSubImage2DEXT _onutTextureSubImage2DEXT
#define glTextureSubImage3D _onutTextureSubImage3D
#define glTextureSubImage3DEXT _onutTextureSubImage3DEXT
#define glTextureView _onutTextureView
#define glTextureViewEXT _onutTextureViewEXT
#define glTextureViewOES _onutTextureViewOES
#define glTrackMatrixNV _onutTrackMatrixNV
#define glTransformFeedbackAttribsNV _onutTransformFeedbackAttribsNV
#define glTransformFeedbackBufferBase _onutTransformFeedbackBufferBase
#define glTransformFeedbackBufferRange _onutTransformFeedbackBufferRange
#define glTransformFeedbackStreamAttribsNV _onutTransformFeedbackStreamAttribsNV
#define glTransformFeedbackVaryings _onutTransformFeedbackVaryings
#define glTransformFeedbackVaryingsEXT _onutTransformFeedbackVaryingsEXT
#define glTransformFeedbackVaryingsNV _onutTransformFeedbackVaryingsNV
#define glTransformPathNV _onutTransformPathNV
#define glTranslatexOES _onutTranslatexOES
#define glUniform1d _onutUniform1d
#define glUniform1dv _onutUniform1dv
#define glUniform1f _onutUniform1f
#define glUniform1fARB _onutUniform1fARB
#define glUniform1fv _onutUniform1fv
#define glUniform1fvARB _onutUniform1fvARB
#define glUniform1i _onutUniform1i
#define glUniform1i64ARB _onutUniform1i64ARB
#define glUniform1i64NV _onutUniform1i64NV
#define glUniform1i64vARB _onutUniform1i64vARB
#define glUniform1i64vNV _onutUniform1i64vNV
#define glUniform1iARB _onutUniform1iARB
#define glUniform1iv _onutUniform1iv
#define glUniform1ivARB _onutUniform1ivARB
#define glUniform1ui _onutUniform1ui
#define glUniform1ui64ARB _onutUniform1ui64ARB
#define glUniform1ui64NV _onutUniform1ui64NV
#define glUniform1ui64vARB _onutUniform1ui64vARB
#define glUniform1ui64vNV _onutUniform1ui64vNV
#define glUniform1uiEXT _onutUniform1uiEXT
#define glUniform1uiv _onutUniform1uiv
#define glUniform1uivEXT _onutUniform1uivEXT
#define glUniform2d _onutUniform2d
#define glUniform2dv _onutUniform2dv
#define glUniform2f _onutUniform2f
#define glUniform2fARB _onutUniform2fARB
#define glUniform2fv _onutUniform2fv
#define glUniform2fvARB _onutUniform2fvARB
#define glUniform2i _onutUniform2i
#define glUniform2i64ARB _onutUniform2i64ARB
#define glUniform2i64NV _onutUniform2i64NV
#define glUniform2i64vARB _onutUniform2i64vARB
#define glUniform2i64vNV _onutUniform2i64vNV
#define glUniform2iARB _onutUniform2iARB
#define glUniform2iv _onutUniform2iv
#define glUniform2ivARB _onutUniform2ivARB
#define glUniform2ui _onutUniform2ui
#define glUniform2ui64ARB _onutUniform2ui64ARB
#define glUniform2ui64NV _onutUniform2ui64NV
#define glUniform2ui64vARB _onutUniform2ui64vARB
#define glUniform2ui64vNV _onutUniform2ui64vNV
#define glUniform2uiEXT _onutUniform2uiEXT
#define glUniform2uiv _onutUniform2uiv
#define glUniform2uivEXT _onutUniform2uivEXT
#define glUniform3d _onutUniform3d
#define glUniform3dv _onutUniform3dv
#define glUniform3f _onutUniform3f
#define glUniform3fARB _onutUniform3fARB
#define glUniform3fv _onutUniform3fv
#define glUniform3fvARB _onutUniform3fvARB
#define glUniform3i _onutUniform3i
#define glUniform3i64ARB _onutUniform3i64ARB
#define glUniform3i64NV _onutUniform3i64NV
#define glUniform3i64vARB _onutUniform3i64vARB
#define glUniform3i64vNV _onutUniform3i64vNV
#define glUniform3iARB _onutUniform3iARB
#define glUniform3iv _onutUniform3iv
#define glUniform3ivARB _onutUniform3ivARB
#define glUniform3ui _onutUniform3ui
#define glUniform3ui64ARB _onutUniform3ui64ARB
#define glUniform3ui64NV _onutUniform3ui64NV
#define glUniform3ui64vARB _onutUniform3ui64vARB
#define glUniform3ui64vNV _onutUniform3ui64vNV
#define glUniform3uiEXT _onutUniform3uiEXT
#define glUniform3uiv _onutUniform3uiv
#define glUniform3uivEXT _onutUniform3uivEXT
#define glUniform4d _onutUniform4d
#define glUniform4dv _onutUniform4dv
#define glUniform4f _onutUniform4f
#define glUniform4fARB _onutUniform4fARB
#define glUniform4fv _onutUniform4fv
#define glUniform4fvARB _onutUniform4fvARB
#define glUniform4i _onutUniform4i
#define glUniform4i64ARB _onutUniform4i64ARB
#define glUniform4i64NV _onutUniform4i64NV
#define glUniform4i64vARB _onutUniform4i64vARB
#define glUniform4i64vNV _onutUniform4i64vNV
#define glUniform4iARB _onutUniform4iARB
#define glUniform4iv _onutUniform4iv
#define glUniform4ivARB _onutUniform4ivARB
#define glUniform4ui _onutUniform4ui
#define glUniform4ui64ARB _onutUniform4ui64ARB
#define glUniform4ui64NV _onutUniform4ui64NV
#define glUniform4ui64vARB _onutUniform4ui64vARB
#define glUniform4ui64vNV _onutUniform4ui64vNV
#define glUniform4uiEXT _onutUniform4uiEXT
#define glUniform4uiv _onutUniform4uiv
#define glUniform4uivEXT _onutUniform4uivEXT
#define glUniformBlockBinding _onutUniformBlockBinding
#define glUniformBufferEXT _onutUniformBufferEXT
#define glUniformHandleui64ARB _onutUniformHandleui64ARB
#define glUniformHandleui64IMG _onutUniformHandleui64IMG
#define glUniformHandleui64NV _onutUniformHandleui64NV
#define glUniformHandleui64vARB _onutUniformHandleui64vARB
#define glUniformHandleui64vIMG _onutUniformHandleui64vIMG
#define glUniformHandleui64vNV _onutUniformHandleui64vNV
#define glUniformMatrix2dv _onutUniformMatrix2dv
#define glUniformMatrix2fv _onutUniformMatrix2fv
#define glUniformMatrix2fvARB _onutUniformMatrix2fvARB
#define glUniformMatrix2x3dv _onutUniformMatrix2x3dv
#define glUniformMatrix2x3fv _onutUniformMatrix2x3fv
#define glUniformMatrix2x3fvNV _onutUniformMatrix2x3fvNV
#define glUniformMatrix2x4dv _onutUniformMatrix2x4dv
#define glUniformMatrix2x4fv _onutUniformMatrix2x4fv
#define glUniformMatrix2x4fvNV _onutUniformMatrix2x4fvNV
#define glUniformMatrix3dv _onutUniformMatrix3dv
#define glUniformMatrix3fv _onutUniformMatrix3fv
#define glUniformMatrix3fvARB _onutUniformMatrix3fvARB
#define glUniformMatrix3x2dv _onutUniformMatrix3x2dv
#define glUniformMatrix3x2fv _onutUniformMatrix3x2fv
#define glUniformMatrix3x2fvNV _onutUniformMatrix3x2fvNV
#define glUniformMatrix3x4dv _onutUniformMatrix3x4dv
#define glUniformMatrix3x4fv _onutUniformMatrix3x4fv
#define glUniformMatrix3x4fvNV _onutUniformMatrix3x4fvNV
#define glUniformMatrix4dv _onutUniformMatrix4dv
#define glUniformMatrix4fv _onutUniformMatrix4fv
#define glUniformMatrix4fvARB _onutUniformMatrix4fvARB
#define glUniformMatrix4x2dv _onutUniformMatrix4x2dv
#define glUniformMatrix4x2fv _onutUniformMatrix4x2fv
#define glUniformMatrix4x2fvNV _onutUniformMatrix4x2fvNV
#define glUniformMatrix4x3dv _onutUniformMatrix4x3dv
#define glUniformMatrix4x3fv _onutUniformMatrix4x3fv
#define glUniformMatrix4x3fvNV _onutUniformMatrix4x3fvNV
#define glUniformSubroutinesuiv _onutUniformSubroutinesuiv
#define glUniformui64NV _onutUniformui64NV
#define glUniformui64vNV _onutUniformui64vNV
#define glUnlockArraysEXT _onutUnlockArraysEXT
#define glUnmapBuffer _onutUnmapBuffer
#define glUnmapBufferARB _onutUnmapBufferARB
#define glUnmapBufferOES _onutUnmapBufferOES
#define glUnmapNamedBuffer _onutUnmapNamedBuffer
#define glUnmapNamedBufferEXT _onutUnmapNamedBufferEXT
#define glUnmapObjectBufferATI _onutUnmapObjectBufferATI
#define glUnmapTexture2DINTEL _onutUnmapTexture2DINTEL
#define glUpdateObjectBufferATI _onutUpdateObjectBufferATI
#define glUseProgram _onutUseProgram
#define glUseProgramObjectARB _onutUseProgramObjectARB
#define glUseProgramStages _onutUseProgramStages
#define glUseProgramStagesEXT _onutUseProgramStagesEXT
#define glUseShaderProgramEXT _onutUseShaderProgramEXT
#define glVDPAUFiniNV _onutVDPAUFiniNV
#define glVDPAUGetSurfaceivNV _onutVDPAUGetSurfaceivNV
#define glVDPAUInitNV _onutVDPAUInitNV
#define glVDPAUIsSurfaceNV _onutVDPAUIsSurfaceNV
#define glVDPAUMapSurfacesNV _onutVDPAUMapSurfacesNV
#define glVDPAURegisterOutputSurfaceNV _onutVDPAURegisterOutputSurfaceNV
#define glVDPAURegisterVideoSurfaceNV _onutVDPAURegisterVideoSurfaceNV
#define glVDPAUSurfaceAccessNV _onutVDPAUSurfaceAccessNV
#define glVDPAUUnmapSurfacesNV _onutVDPAUUnmapSurfacesNV
#define glVDPAUUnregisterSurfaceNV _onutVDPAUUnregisterSurfaceNV
#define glValidateProgram _onutValidateProgram
#define glValidateProgramARB _onutValidateProgramARB
#define glValidateProgramPipeline _onutValidateProgramPipeline
#define glValidateProgramPipelineEXT _onutValidateProgramPipelineEXT
#define glVariantArrayObjectATI _onutVariantArrayObjectATI
#define glVariantPointerEXT _onutVariantPointerEXT
#define glVariantbvEXT _onutVariantbvEXT
#define glVariantdvEXT _onutVariantdvEXT
#define glVariantfvEXT _onutVariantfvEXT
#define glVariantivEXT _onutVariantivEXT
#define glVariantsvEXT _onutVariantsvEXT
#define glVariantubvEXT _onutVariantubvEXT
#define glVariantuivEXT _onutVariantuivEXT
#define glVariantusvEXT _onutVariantusvEXT
#define glVertex2bOES _onutVertex2bOES
#define glVertex2bvOES _onutVertex2bvOES
#define glVertex2hNV _onutVertex2hNV
#define glVertex2hvNV _onutVertex2hvNV
#define glVertex2xOES _onutVertex2xOES
#define glVertex2xvOES _onutVertex2xvOES
#define glVertex3bOES _onutVertex3bOES
#define glVertex3bvOES _onutVertex3bvOES
#define glVertex3hNV _onutVertex3hNV
#define glVertex3hvNV _onutVertex3hvNV
#define glVertex3xOES _onutVertex3xOES
#define glVertex3xvOES _onutVertex3xvOES
#define glVertex4bOES _onutVertex4bOES
#define glVertex4bvOES _onutVertex4bvOES
#define glVertex4hNV _onutVertex4hNV
#define glVertex4hvNV _onutVertex4hvNV
#define glVertex4xOES _onutVertex4xOES
#define glVertex4xvOES _onutVertex4xvOES
#define glVertexArrayAttribBinding _onutVertexArrayAttribBinding
#define glVertexArrayAttribFormat _onutVertexArrayAttribFormat
#define glVertexArrayAttribIFormat _onutVertexArrayAttribIFormat
#define glVertexArrayAttribLFormat _onutVertexArrayAttribLFormat
#define glVertexArrayBindVertexBufferEXT _onutVertexArrayBindVertexBufferEXT
#define glVertexArrayBindingDivisor _onutVertexArrayBindingDivisor
#define glVertexArrayColorOffsetEXT _onutVertexArrayColorOffsetEXT
#define glVertexArrayEdgeFlagOffsetEXT _onutVertexArrayEdgeFlagOffsetEXT
#define glVertexArrayElementBuffer _onutVertexArrayElementBuffer
#define glVertexArrayFogCoordOffsetEXT _onutVertexArrayFogCoordOffsetEXT
#define glVertexArrayIndexOffsetEXT _onutVertexArrayIndexOffsetEXT
#define glVertexArrayMultiTexCoordOffsetEXT _onutVertexArrayMultiTexCoordOffsetEXT
#define glVertexArrayNormalOffsetEXT _onutVertexArrayNormalOffsetEXT
#define glVertexArrayParameteriAPPLE _onutVertexArrayParameteriAPPLE
#define glVertexArrayRangeAPPLE _onutVertexArrayRangeAPPLE
#define glVertexArrayRangeNV _onutVertexArrayRangeNV
#define glVertexArraySecondaryColorOffsetEXT _onutVertexArraySecondaryColorOffsetEXT
#define glVertexArrayTexCoordOffsetEXT _onutVertexArrayTexCoordOffsetEXT
#define glVertexArrayVertexAttribBindingEXT _onutVertexArrayVertexAttribBindingEXT
#define glVertexArrayVertexAttribDivisorEXT _onutVertexArrayVertexAttribDivisorEXT
#define glVertexArrayVertexAttribFormatEXT _onutVertexArrayVertexAttribFormatEXT
#define glVertexArrayVertexAttribIFormatEXT _onutVertexArrayVertexAttribIFormatEXT
#define glVertexArrayVertexAttribIOffsetEXT _onutVertexArrayVertexAttribIOffsetEXT
#define glVertexArrayVertexAttribLFormatEXT _onutVertexArrayVertexAttribLFormatEXT
#define glVertexArrayVertexAttribLOffsetEXT _onutVertexArrayVertexAttribLOffsetEXT
#define glVertexArrayVertexAttribOffsetEXT _onutVertexArrayVertexAttribOffsetEXT
#define glVertexArrayVertexBindingDivisorEXT _onutVertexArrayVertexBindingDivisorEXT
#define glVertexArrayVertexBuffer _onutVertexArrayVertexBuffer
#define glVertexArrayVertexBuffers _onutVertexArrayVertexBuffers
#define glVertexArrayVertexOffsetEXT _onutVertexArrayVertexOffsetEXT
#define glVertexAttrib1d _onutVertexAttrib1d
#define glVertexAttrib1dARB _onutVertexAttrib1dARB
#define glVertexAttrib1dNV _onutVertexAttrib1dNV
#define glVertexAttrib1dv _onutVertexAttrib1dv
#define glVertexAttrib1dvARB _onutVertexAttrib1dvARB
#define glVertexAttrib1dvNV _onutVertexAttrib1dvNV
#define glVertexAttrib1f _onutVertexAttrib1f
#define glVertexAttrib1fARB _onutVertexAttrib1fARB
#define glVertexAttrib1fNV _onutVertexAttrib1fNV
#define glVertexAttrib1fv _onutVertexAttrib1fv
#define glVertexAttrib1fvARB _onutVertexAttrib1fvARB
#define glVertexAttrib1fvNV _onutVertexAttrib1fvNV
#define glVertexAttrib1hNV _onutVertexAttrib1hNV
#define glVertexAttrib1hvNV _onutVertexAttrib1hvNV
#define glVertexAttrib1s _onutVertexAttrib1s
#define glVertexAttrib1sARB _onutVertexAttrib1sARB
#define glVertexAttrib1sNV _onutVertexAttrib1sNV
#define glVertexAttrib1sv _onutVertexAttrib1sv
#define glVertexAttrib1svARB _onutVertexAttrib1svARB
#define glVertexAttrib1svNV _onutVertexAttrib1svNV
#define glVertexAttrib2d _onutVertexAttrib2d
#define glVertexAttrib2dARB _onutVertexAttrib2dARB
#define glVertexAttrib2dNV _onutVertexAttrib2dNV
#define glVertexAttrib2dv _onutVertexAttrib2dv
#define glVertexAttrib2dvARB _onutVertexAttrib2dvARB
#define glVertexAttrib2dvNV _onutVertexAttrib2dvNV
#define glVertexAttrib2f _onutVertexAttrib2f
#define glVertexAttrib2fARB _onutVertexAttrib2fARB
#define glVertexAttrib2fNV _onutVertexAttrib2fNV
#define glVertexAttrib2fv _onutVertexAttrib2fv
#define glVertexAttrib2fvARB _onutVertexAttrib2fvARB
#define glVertexAttrib2fvNV _onutVertexAttrib2fvNV
#define glVertexAttrib2hNV _onutVertexAttrib2hNV
#define glVertexAttrib2hvNV _onutVertexAttrib2hvNV
#define glVertexAttrib2s _onutVertexAttrib2s
#define glVertexAttrib2sARB _onutVertexAttrib2sARB
#define glVertexAttrib2sNV _onutVertexAttrib2sNV
#define glVertexAttrib2sv _onutVertexAttrib2sv
#define glVertexAttrib2svARB _onutVertexAttrib2svARB
#define glVertexAttrib2svNV _onutVertexAttrib2svNV
#define glVertexAttrib3d _onutVertexAttrib3d
#define glVertexAttrib3dARB _onutVertexAttrib3dARB
#define glVertexAttrib3dNV _onutVertexAttrib3dNV
#define glVertexAttrib3dv _onutVertexAttrib3dv
#define glVertexAttrib3dvARB _onutVertexAttrib3dvARB
#define glVertexAttrib3dvNV _onutVertexAttrib3dvNV
#define glVertexAttrib3f _onutVertexAttrib3f
#define glVertexAttrib3fARB _onutVertexAttrib3fARB
#define glVertexAttrib3fNV _onutVertexAttrib3fNV
#define glVertexAttrib3fv _onutVertexAttrib3fv
#define glVertexAttrib3fvARB _onutVertexAttrib3fvARB
#define glVertexAttrib3fvNV _onutVertexAttrib3fvNV
#define glVertexAttrib3hNV _onutVertexAttrib3hNV
#define glVertexAttrib3hvNV _onutVertexAttrib3hvNV
#define glVertexAttrib3s _onutVertexAttrib3s
#define glVertexAttrib3sARB _onutVertexAttrib3sARB
#define glVertexAttrib3sNV _onutVertexAttrib3sNV
#define glVertexAttrib3sv _onutVertexAttrib3sv
#define glVertexAttrib3svARB _onutVertexAttrib3svARB
#define glVertexAttrib3svNV _onutVertexAttrib3svNV
#define glVertexAttrib4Nbv _onutVertexAttrib4Nbv
#define glVertexAttrib4NbvARB _onutVertexAttrib4NbvARB
#define glVertexAttrib4Niv _onutVertexAttrib4Niv
#define glVertexAttrib4NivARB _onutVertexAttrib4NivARB
#define glVertexAttrib4Nsv _onutVertexAttrib4Nsv
#define glVertexAttrib4NsvARB _onutVertexAttrib4NsvARB
#define glVertexAttrib4Nub _onutVertexAttrib4Nub
#define glVertexAttrib4NubARB _onutVertexAttrib4NubARB
#define glVertexAttrib4Nubv _onutVertexAttrib4Nubv
#define glVertexAttrib4NubvARB _onutVertexAttrib4NubvARB
#define glVertexAttrib4Nuiv _onutVertexAttrib4Nuiv
#define glVertexAttrib4NuivARB _onutVertexAttrib4NuivARB
#define glVertexAttrib4Nusv _onutVertexAttrib4Nusv
#define glVertexAttrib4NusvARB _onutVertexAttrib4NusvARB
#define glVertexAttrib4bv _onutVertexAttrib4bv
#define glVertexAttrib4bvARB _onutVertexAttrib4bvARB
#define glVertexAttrib4d _onutVertexAttrib4d
#define glVertexAttrib4dARB _onutVertexAttrib4dARB
#define glVertexAttrib4dNV _onutVertexAttrib4dNV
#define glVertexAttrib4dv _onutVertexAttrib4dv
#define glVertexAttrib4dvARB _onutVertexAttrib4dvARB
#define glVertexAttrib4dvNV _onutVertexAttrib4dvNV
#define glVertexAttrib4f _onutVertexAttrib4f
#define glVertexAttrib4fARB _onutVertexAttrib4fARB
#define glVertexAttrib4fNV _onutVertexAttrib4fNV
#define glVertexAttrib4fv _onutVertexAttrib4fv
#define glVertexAttrib4fvARB _onutVertexAttrib4fvARB
#define glVertexAttrib4fvNV _onutVertexAttrib4fvNV
#define glVertexAttrib4hNV _onutVertexAttrib4hNV
#define glVertexAttrib4hvNV _onutVertexAttrib4hvNV
#define glVertexAttrib4iv _onutVertexAttrib4iv
#define glVertexAttrib4ivARB _onutVertexAttrib4ivARB
#define glVertexAttrib4s _onutVertexAttrib4s
#define glVertexAttrib4sARB _onutVertexAttrib4sARB
#define glVertexAttrib4sNV _onutVertexAttrib4sNV
#define glVertexAttrib4sv _onutVertexAttrib4sv
#define glVertexAttrib4svARB _onutVertexAttrib4svARB
#define glVertexAttrib4svNV _onutVertexAttrib4svNV
#define glVertexAttrib4ubNV _onutVertexAttrib4ubNV
#define glVertexAttrib4ubv _onutVertexAttrib4ubv
#define glVertexAttrib4ubvARB _onutVertexAttrib4ubvARB
#define glVertexAttrib4ubvNV _onutVertexAttrib4ubvNV
#define glVertexAttrib4uiv _onutVertexAttrib4uiv
#define glVertexAttrib4uivARB _onutVertexAttrib4uivARB
#define glVertexAttrib4usv _onutVertexAttrib4usv
#define glVertexAttrib4usvARB _onutVertexAttrib4usvARB
#define glVertexAttribArrayObjectATI _onutVertexAttribArrayObjectATI
#define glVertexAttribBinding _onutVertexAttribBinding
#define glVertexAttribDivisor _onutVertexAttribDivisor
#define glVertexAttribDivisorANGLE _onutVertexAttribDivisorANGLE
#define glVertexAttribDivisorARB _onutVertexAttribDivisorARB
#define glVertexAttribDivisorEXT _onutVertexAttribDivisorEXT
#define glVertexAttribDivisorNV _onutVertexAttribDivisorNV
#define glVertexAttribFormat _onutVertexAttribFormat
#define glVertexAttribFormatNV _onutVertexAttribFormatNV
#define glVertexAttribI1i _onutVertexAttribI1i
#define glVertexAttribI1iEXT _onutVertexAttribI1iEXT
#define glVertexAttribI1iv _onutVertexAttribI1iv
#define glVertexAttribI1ivEXT _onutVertexAttribI1ivEXT
#define glVertexAttribI1ui _onutVertexAttribI1ui
#define glVertexAttribI1uiEXT _onutVertexAttribI1uiEXT
#define glVertexAttribI1uiv _onutVertexAttribI1uiv
#define glVertexAttribI1uivEXT _onutVertexAttribI1uivEXT
#define glVertexAttribI2i _onutVertexAttribI2i
#define glVertexAttribI2iEXT _onutVertexAttribI2iEXT
#define glVertexAttribI2iv _onutVertexAttribI2iv
#define glVertexAttribI2ivEXT _onutVertexAttribI2ivEXT
#define glVertexAttribI2ui _onutVertexAttribI2ui
#define glVertexAttribI2uiEXT _onutVertexAttribI2uiEXT
#define glVertexAttribI2uiv _onutVertexAttribI2uiv
#define glVertexAttribI2uivEXT _onutVertexAttribI2uivEXT
#define glVertexAttribI3i _onutVertexAttribI3i
#define glVertexAttribI3iEXT _onutVertexAttribI3iEXT
#define glVertexAttribI3iv _onutVertexAttribI3iv
#define glVertexAttribI3ivEXT _onutVertexAttribI3ivEXT
#define glVertexAttribI3ui _onutVertexAttribI3ui
#define glVertexAttribI3uiEXT _onutVertexAttribI3uiEXT
#define glVertexAttribI3uiv _onutVertexAttribI3uiv
#define glVertexAttribI3uivEXT _onutVertexAttribI3uivEXT
#define glVertexAttribI4bv _onutVertexAttribI4bv
#define glVertexAttribI4bvEXT _onutVertexAttribI4bvEXT
#define glVertexAttribI4i _onutVertexAttribI4i
#define glVertexAttribI4iEXT _onutVertexAttribI4iEXT
#define glVertexAttribI4iv _onutVertexAttribI4iv
#define glVertexAttribI4ivEXT _onutVertexAttribI4ivEXT
#define glVertexAttribI4sv _onutVertexAttribI4sv
#define glVertexAttribI4svEXT _onutVertexAttribI4svEXT
#define glVertexAttribI4ubv _onutVertexAttribI4ubv
#define glVertexAttribI4ubvEXT _onutVertexAttribI4ubvEXT
#define glVertexAttribI4ui _onutVertexAttribI4ui
#define glVertexAttribI4uiEXT _onutVertexAttribI4uiEXT
#define glVertexAttribI4uiv _onutVertexAttribI4uiv
#define glVertexAttribI4uivEXT _onutVertexAttribI4uivEXT
#define glVertexAttribI4usv _onutVertexAttribI4usv
#define glVertexAttribI4usvEXT _onutVertexAttribI4usvEXT
#define glVertexAttribIFormat _onutVertexAttribIFormat
#define glVertexAttribIFormatNV _onutVertexAttribIFormatNV
#define glVertexAttribIPointer _onutVertexAttribIPointer
#define glVertexAttribIPointerEXT _onutVertexAttribIPointerEXT
#define glVertexAttribL1d _onutVertexAttribL1d
#define glVertexAttribL1dEXT _onutVertexAttribL1dEXT
#define glVertexAttribL1dv _onutVertexAttribL1dv
#define glVertexAttribL1dvEXT _onutVertexAttribL1dvEXT
#define glVertexAttribL1i64NV _onutVertexAttribL1i64NV
#define glVertexAttribL1i64vNV _onutVertexAttribL1i64vNV
#define glVertexAttribL1ui64ARB _onutVertexAttribL1ui64ARB
#define glVertexAttribL1ui64NV _onutVertexAttribL1ui64NV
#define glVertexAttribL1ui64vARB _onutVertexAttribL1ui64vARB
#define glVertexAttribL1ui64vNV _onutVertexAttribL1ui64vNV
#define glVertexAttribL2d _onutVertexAttribL2d
#define glVertexAttribL2dEXT _onutVertexAttribL2dEXT
#define glVertexAttribL2dv _onutVertexAttribL2dv
#define glVertexAttribL2dvEXT _onutVertexAttribL2dvEXT
#define glVertexAttribL2i64NV _onutVertexAttribL2i64NV
#define glVertexAttribL2i64vNV _onutVertexAttribL2i64vNV
#define glVertexAttribL2ui64NV _onutVertexAttribL2ui64NV
#define glVertexAttribL2ui64vNV _onutVertexAttribL2ui64vNV
#define glVertexAttribL3d _onutVertexAttribL3d
#define glVertexAttribL3dEXT _onutVertexAttribL3dEXT
#define glVertexAttribL3dv _onutVertexAttribL3dv
#define glVertexAttribL3dvEXT _onutVertexAttribL3dvEXT
#define glVertexAttribL3i64NV _onutVertexAttribL3i64NV
#define glVertexAttribL3i64vNV _onutVertexAttribL3i64vNV
#define glVertexAttribL3ui64NV _onutVertexAttribL3ui64NV
#define glVertexAttribL3ui64vNV _onutVertexAttribL3ui64vNV
#define glVertexAttribL4d _onutVertexAttribL4d
#define glVertexAttribL4dEXT _onutVertexAttribL4dEXT
#define glVertexAttribL4dv _onutVertexAttribL4dv
#define glVertexAttribL4dvEXT _onutVertexAttribL4dvEXT
#define glVertexAttribL4i64NV _onutVertexAttribL4i64NV
#define glVertexAttribL4i64vNV _onutVertexAttribL4i64vNV
#define glVertexAttribL4ui64NV _onutVertexAttribL4ui64NV
#define glVertexAttribL4ui64vNV _onutVertexAttribL4ui64vNV
#define glVertexAttribLFormat _onutVertexAttribLFormat
#define glVertexAttribLFormatNV _onutVertexAttribLFormatNV
#define glVertexAttribLPointer _onutVertexAttribLPointer
#define glVertexAttribLPointerEXT _onutVertexAttribLPointerEXT
#define glVertexAttribP1ui _onutVertexAttribP1ui
#define glVertexAttribP1uiv _onutVertexAttribP1uiv
#define glVertexAttribP2ui _onutVertexAttribP2ui
#define glVertexAttribP2uiv _onutVertexAttribP2uiv
#define glVertexAttribP3ui _onutVertexAttribP3ui
#define glVertexAttribP3uiv _onutVertexAttribP3uiv
#define glVertexAttribP4ui _onutVertexAttribP4ui
#define glVertexAttribP4uiv _onutVertexAttribP4uiv
#define glVertexAttribParameteriAMD _onutVertexAttribParameteriAMD
#define glVertexAttribPointer _onutVertexAttribPointer
#define glVertexAttribPointerARB _onutVertexAttribPointerARB
#define glVertexAttribPointerNV _onutVertexAttribPointerNV
#define glVertexAttribs1dvNV _onutVertexAttribs1dvNV
#define glVertexAttribs1fvNV _onutVertexAttribs1fvNV
#define glVertexAttribs1hvNV _onutVertexAttribs1hvNV
#define glVertexAttribs1svNV _onutVertexAttribs1svNV
#define glVertexAttribs2dvNV _onutVertexAttribs2dvNV
#define glVertexAttribs2fvNV _onutVertexAttribs2fvNV
#define glVertexAttribs2hvNV _onutVertexAttribs2hvNV
#define glVertexAttribs2svNV _onutVertexAttribs2svNV
#define glVertexAttribs3dvNV _onutVertexAttribs3dvNV
#define glVertexAttribs3fvNV _onutVertexAttribs3fvNV
#define glVertexAttribs3hvNV _onutVertexAttribs3hvNV
#define glVertexAttribs3svNV _onutVertexAttribs3svNV
#define glVertexAttribs4dvNV _onutVertexAttribs4dvNV
#define glVertexAttribs4fvNV _onutVertexAttribs4fvNV
#define glVertexAttribs4hvNV _onutVertexAttribs4hvNV
#define glVertexAttribs4svNV _onutVertexAttribs4svNV
#define glVertexAttribs4ubvNV _onutVertexAttribs4ubvNV
#define glVertexBindingDivisor _onutVertexBindingDivisor
#define glVertexBlendARB _onutVertexBlendARB
#define glVertexBlendEnvfATI _onutVertexBlendEnvfATI
#define glVertexBlendEnviATI _onutVertexBlendEnviATI
#define glVertexFormatNV _onutVertexFormatNV
#define glVertexP2ui _onutVertexP2ui
#define glVertexP2uiv _onutVertexP2uiv
#define glVertexP3ui _onutVertexP3ui
#define glVertexP3uiv _onutVertexP3uiv
#define glVertexP4ui _onutVertexP4ui
#define glVertexP4uiv _onutVertexP4uiv
#define glVertexPointerEXT _onutVertexPointerEXT
#define glVertexPointerListIBM _onutVertexPointerListIBM
#define glVertexPointervINTEL _onutVertexPointervINTEL
#define glVertexStream1dATI _onutVertexStream1dATI
#define glVertexStream1dvATI _onutVertexStream1dvATI
#define glVertexStream1fATI _onutVertexStream1fATI
#define glVertexStream1fvATI _onutVertexStream1fvATI
#define glVertexStream1iATI _onutVertexStream1iATI
#define glVertexStream1ivATI _onutVertexStream1ivATI
#define glVertexStream1sATI _onutVertexStream1sATI
#define glVertexStream1svATI _onutVertexStream1svATI
#define glVertexStream2dATI _onutVertexStream2dATI
#define glVertexStream2dvATI _onutVertexStream2dvATI
#define glVertexStream2fATI _onutVertexStream2fATI
#define glVertexStream2fvATI _onutVertexStream2fvATI
#define glVertexStream2iATI _onutVertexStream2iATI
#define glVertexStream2ivATI _onutVertexStream2ivATI
#define glVertexStream2sATI _onutVertexStream2sATI
#define glVertexStream2svATI _onutVertexStream2svATI
#define glVertexStream3dATI _onutVertexStream3dATI
#define glVertexStream3dvATI _onutVertexStream3dvATI
#define glVertexStream3fATI _onutVertexStream3fATI
#define glVertexStream3fvATI _onutVertexStream3fvATI
#define glVertexStream3iATI _onutVertexStream3iATI
#define glVertexStream3ivATI _onutVertexStream3ivATI
#define glVertexStream3sATI _onutVertexStream3sATI
#define glVertexStream3svATI _onutVertexStream3svATI
#define glVertexStream4dATI _onutVertexStream4dATI
#define glVertexStream4dvATI _onutVertexStream4dvATI
#define glVertexStream4fATI _onutVertexStream4fATI
#define glVertexStream4fvATI _onutVertexStream4fvATI
#define glVertexStream4iATI _onutVertexStream4iATI
#define glVertexStream4ivATI _onutVertexStream4ivATI
#define glVertexStream4sATI _onutVertexStream4sATI
#define glVertexStream4svATI _onutVertexStream4svATI
#define glVertexWeightPointerEXT _onutVertexWeightPointerEXT
#define glVertexWeightfEXT _onutVertexWeightfEXT
#define glVertexWeightfvEXT _onutVertexWeightfvEXT
#define glVertexWeighthNV _onutVertexWeighthNV
#define glVertexWeighthvNV _onutVertexWeighthvNV
#define glVideoCaptureNV _onutVideoCaptureNV
#define glVideoCaptureStreamParameterdvNV _onutVideoCaptureStreamParameterdvNV
#define glVideoCaptureStreamParameterfvNV _onutVideoCaptureStreamParameterfvNV
#define glVideoCaptureStreamParameterivNV _onutVideoCaptureStreamParameterivNV
#define glViewport _onutViewport
#define glViewportArrayv _onutViewportArrayv
#define glViewportArrayvNV _onutViewportArrayvNV
#define glViewportArrayvOES _onutViewportArrayvOES
#define glViewportIndexedf _onutViewportIndexedf
#define glViewportIndexedfNV _onutViewportIndexedfNV
#define glViewportIndexedfOES _onutViewportIndexedfOES
#define glViewportIndexedfv _onutViewportIndexedfv
#define glViewportIndexedfvNV _onutViewportIndexedfvNV
#define glViewportIndexedfvOES _onutViewportIndexedfvOES
#define glViewportPositionWScaleNV _onutViewportPositionWScaleNV
#define glViewportSwizzleNV _onutViewportSwizzleNV
#define glWaitSemaphoreEXT _onutWaitSemaphoreEXT
#define glWaitSync _onutWaitSync
#define glWaitSyncAPPLE _onutWaitSyncAPPLE
#define glWaitVkSemaphoreNV _onutWaitVkSemaphoreNV
#define glWeightPathsNV _onutWeightPathsNV
#define glWeightPointerARB _onutWeightPointerARB
#define glWeightbvARB _onutWeightbvARB
#define glWeightdvARB _onutWeightdvARB
#define glWeightfvARB _onutWeightfvARB
#define glWeightivARB _onutWeightivARB
#define glWeightsvARB _onutWeightsvARB
#define glWeightubvARB _onutWeightubvARB
#define glWeightuivARB _onutWeightuivARB
#define glWeightusvARB _onutWeightusvARB
#define glWindowPos2d _onutWindowPos2d
#define glWindowPos2dARB _onutWindowPos2dARB
#define glWindowPos2dMESA _onutWindowPos2dMESA
#define glWindowPos2dv _onutWindowPos2dv
#define glWindowPos2dvARB _onutWindowPos2dvARB
#define glWindowPos2dvMESA _onutWindowPos2dvMESA
#define glWindowPos2f _onutWindowPos2f
#define glWindowPos2fARB _onutWindowPos2fARB
#define glWindowPos2fMESA _onutWindowPos2fMESA
#define glWindowPos2fv _onutWindowPos2fv
#define glWindowPos2fvARB _onutWindowPos2fvARB
#define glWindowPos2fvMESA _onutWindowPos2fvMESA
#define glWindowPos2i _onutWindowPos2i
#define glWindowPos2iARB _onutWindowPos2iARB
#define glWindowPos2iMESA _onutWindowPos2iMESA
#define glWindowPos2iv _onutWindowPos2iv
#define glWindowPos2ivARB _onutWindowPos2ivARB
#define glWindowPos2ivMESA _onutWindowPos2ivMESA
#define glWindowPos2s _onutWindowPos2s
#define glWindowPos2sARB _onutWindowPos2sARB
#define glWindowPos2sMESA _onutWindowPos2sMESA
#define glWindowPos2sv _onutWindowPos2sv
#define glWindowPos2svARB _onutWindowPos2svARB
#define glWindowPos2svMESA _onutWindowPos2svMESA
#define glWindowPos3d _onutWindowPos3d
#define glWindowPos3dARB _onutWindowPos3dARB
#define glWindowPos3dMESA _onutWindowPos3dMESA
#define glWindowPos3dv _onutWindowPos3dv
#define glWindowPos3dvARB _onutWindowPos3dvARB
#define glWindowPos3dvMESA _onutWindowPos3dvMESA
#define glWindowPos3f _onutWindowPos3f
#define glWindowPos3fARB _onutWindowPos3fARB
#define glWindowPos3fMESA _onutWindowPos3fMESA
#define glWindowPos3fv _onutWindowPos3fv
#define glWindowPos3fvARB _onutWindowPos3fvARB
#define glWindowPos3fvMESA _onutWindowPos3fvMESA
#define glWindowPos3i _onutWindowPos3i
#define glWindowPos3iARB _onutWindowPos3iARB
#define glWindowPos3iMESA _onutWindowPos3iMESA
#define glWindowPos3iv _onutWindowPos3iv
#define glWindowPos3ivARB _onutWindowPos3ivARB
#define glWindowPos3ivMESA _onutWindowPos3ivMESA
#define glWindowPos3s _onutWindowPos3s
#define glWindowPos3sARB _onutWindowPos3sARB
#define glWindowPos3sMESA _onutWindowPos3sMESA
#define glWindowPos3sv _onutWindowPos3sv
#define glWindowPos3svARB _onutWindowPos3svARB
#define glWindowPos3svMESA _onutWindowPos3svMESA
#define glWindowPos4dMESA _onutWindowPos4dMESA
#define glWindowPos4dvMESA _onutWindowPos4dvMESA
#define glWindowPos4fMESA _onutWindowPos4fMESA
#define glWindowPos4fvMESA _onutWindowPos4fvMESA
#define glWindowPos4iMESA _onutWindowPos4iMESA
#define glWindowPos4ivMESA _onutWindowPos4ivMESA
#define glWindowPos4sMESA _onutWindowPos4sMESA
#define glWindowPos4svMESA _onutWindowPos4svMESA
#define glWindowRectanglesEXT _onutWindowRectanglesEXT
#define glWriteMaskEXT _onutWriteMaskEXT
#endif /* ONUT_GL_WRANGLER_ENABLED */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* _ONUT_GL_H_ */
